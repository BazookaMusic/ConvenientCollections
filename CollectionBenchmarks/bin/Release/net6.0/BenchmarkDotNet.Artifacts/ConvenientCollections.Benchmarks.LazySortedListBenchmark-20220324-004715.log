// Validating benchmarks:
// ***** BenchmarkRunner: Start   *****
// ***** Found 18 benchmark(s) in total *****
// ***** Building 1 exe(s) in Parallel: Start   *****
// start dotnet restore  /p:UseSharedCompilation=false /p:BuildInParallel=false /m:1 /p:Deterministic=true /p:Optimize=true in C:\Users\hacke\source\repos\CollectionBenchmarks\bin\Release\net6.0\bf18d94d-7dda-48e8-a69f-531024b3e97e
// command took 1.05s and exited with 0
// start dotnet build -c Release  --no-restore /p:UseSharedCompilation=false /p:BuildInParallel=false /m:1 /p:Deterministic=true /p:Optimize=true in C:\Users\hacke\source\repos\CollectionBenchmarks\bin\Release\net6.0\bf18d94d-7dda-48e8-a69f-531024b3e97e
// command took 2.08s and exited with 0
// ***** Done, took 00:00:03 (3.22 sec)   *****
// Found 18 benchmarks:
//   LazySortedListBenchmark.SystemSortedListGet: Job-UZWZTH(InvocationCount=1, UnrollFactor=1) [N=1000]
//   LazySortedListBenchmark.LazySortedListGet: Job-UZWZTH(InvocationCount=1, UnrollFactor=1) [N=1000]
//   LazySortedListBenchmark.SystemSortedListAdd: Job-UZWZTH(InvocationCount=1, UnrollFactor=1) [N=1000]
//   LazySortedListBenchmark.LazySortedListAdd: Job-UZWZTH(InvocationCount=1, UnrollFactor=1) [N=1000]
//   LazySortedListBenchmark.SystemSortedListRemove: Job-UZWZTH(InvocationCount=1, UnrollFactor=1) [N=1000]
//   LazySortedListBenchmark.LazySortedListRemove: Job-UZWZTH(InvocationCount=1, UnrollFactor=1) [N=1000]
//   LazySortedListBenchmark.SystemSortedListGet: Job-UZWZTH(InvocationCount=1, UnrollFactor=1) [N=5000]
//   LazySortedListBenchmark.LazySortedListGet: Job-UZWZTH(InvocationCount=1, UnrollFactor=1) [N=5000]
//   LazySortedListBenchmark.SystemSortedListAdd: Job-UZWZTH(InvocationCount=1, UnrollFactor=1) [N=5000]
//   LazySortedListBenchmark.LazySortedListAdd: Job-UZWZTH(InvocationCount=1, UnrollFactor=1) [N=5000]
//   LazySortedListBenchmark.SystemSortedListRemove: Job-UZWZTH(InvocationCount=1, UnrollFactor=1) [N=5000]
//   LazySortedListBenchmark.LazySortedListRemove: Job-UZWZTH(InvocationCount=1, UnrollFactor=1) [N=5000]
//   LazySortedListBenchmark.SystemSortedListGet: Job-UZWZTH(InvocationCount=1, UnrollFactor=1) [N=10000]
//   LazySortedListBenchmark.LazySortedListGet: Job-UZWZTH(InvocationCount=1, UnrollFactor=1) [N=10000]
//   LazySortedListBenchmark.SystemSortedListAdd: Job-UZWZTH(InvocationCount=1, UnrollFactor=1) [N=10000]
//   LazySortedListBenchmark.LazySortedListAdd: Job-UZWZTH(InvocationCount=1, UnrollFactor=1) [N=10000]
//   LazySortedListBenchmark.SystemSortedListRemove: Job-UZWZTH(InvocationCount=1, UnrollFactor=1) [N=10000]
//   LazySortedListBenchmark.LazySortedListRemove: Job-UZWZTH(InvocationCount=1, UnrollFactor=1) [N=10000]

// **************************
// Benchmark: LazySortedListBenchmark.SystemSortedListGet: Job-UZWZTH(InvocationCount=1, UnrollFactor=1) [N=1000]
// *** Execute ***
// Launch: 1 / 1
// Execute: dotnet "bf18d94d-7dda-48e8-a69f-531024b3e97e.dll" --benchmarkName "ConvenientCollections.Benchmarks.LazySortedListBenchmark.SystemSortedListGet(N: 1000)" --job "InvocationCount=1, UnrollFactor=1" --benchmarkId 0 in C:\Users\hacke\source\repos\CollectionBenchmarks\bin\Release\net6.0\bf18d94d-7dda-48e8-a69f-531024b3e97e\bin\Release\net6.0
// BeforeAnythingElse

// Benchmark Process Environment Information:
// Runtime=.NET 6.0.0 (6.0.21.52210), X64 RyuJIT
// GC=Concurrent Workstation
// Job: Job-RMIJQX(InvocationCount=1, UnrollFactor=1)

OverheadJitting  1: 1 op, 252900.00 ns, 252.9000 us/op
WorkloadJitting  1: 1 op, 380400.00 ns, 380.4000 us/op

OverheadWarmup   1: 1 op, 100.00 ns, 100.0000 ns/op
OverheadWarmup   2: 1 op, 100.00 ns, 100.0000 ns/op
OverheadWarmup   3: 1 op, 200.00 ns, 200.0000 ns/op
OverheadWarmup   4: 1 op, 200.00 ns, 200.0000 ns/op
OverheadWarmup   5: 1 op, 200.00 ns, 200.0000 ns/op

OverheadActual   1: 1 op, 100.00 ns, 100.0000 ns/op
OverheadActual   2: 1 op, 100.00 ns, 100.0000 ns/op
OverheadActual   3: 1 op, 100.00 ns, 100.0000 ns/op
OverheadActual   4: 1 op, 200.00 ns, 200.0000 ns/op
OverheadActual   5: 1 op, 200.00 ns, 200.0000 ns/op
OverheadActual   6: 1 op, 100.00 ns, 100.0000 ns/op
OverheadActual   7: 1 op, 100.00 ns, 100.0000 ns/op
OverheadActual   8: 1 op, 200.00 ns, 200.0000 ns/op
OverheadActual   9: 1 op, 200.00 ns, 200.0000 ns/op
OverheadActual  10: 1 op, 100.00 ns, 100.0000 ns/op
OverheadActual  11: 1 op, 100.00 ns, 100.0000 ns/op
OverheadActual  12: 1 op, 100.00 ns, 100.0000 ns/op
OverheadActual  13: 1 op, 200.00 ns, 200.0000 ns/op
OverheadActual  14: 1 op, 100.00 ns, 100.0000 ns/op
OverheadActual  15: 1 op, 100.00 ns, 100.0000 ns/op
OverheadActual  16: 1 op, 200.00 ns, 200.0000 ns/op
OverheadActual  17: 1 op, 200.00 ns, 200.0000 ns/op
OverheadActual  18: 1 op, 100.00 ns, 100.0000 ns/op
OverheadActual  19: 1 op, 100.00 ns, 100.0000 ns/op
OverheadActual  20: 1 op, 100.00 ns, 100.0000 ns/op

WorkloadWarmup   1: 1 op, 38600.00 ns, 38.6000 us/op
WorkloadWarmup   2: 1 op, 35600.00 ns, 35.6000 us/op
WorkloadWarmup   3: 1 op, 32300.00 ns, 32.3000 us/op
WorkloadWarmup   4: 1 op, 34100.00 ns, 34.1000 us/op
WorkloadWarmup   5: 1 op, 36100.00 ns, 36.1000 us/op
WorkloadWarmup   6: 1 op, 31100.00 ns, 31.1000 us/op
WorkloadWarmup   7: 1 op, 31000.00 ns, 31.0000 us/op
WorkloadWarmup   8: 1 op, 34200.00 ns, 34.2000 us/op
WorkloadWarmup   9: 1 op, 37800.00 ns, 37.8000 us/op
WorkloadWarmup  10: 1 op, 36300.00 ns, 36.3000 us/op

// BeforeActualRun
WorkloadActual   1: 1 op, 33900.00 ns, 33.9000 us/op
WorkloadActual   2: 1 op, 34600.00 ns, 34.6000 us/op
WorkloadActual   3: 1 op, 42500.00 ns, 42.5000 us/op
WorkloadActual   4: 1 op, 32900.00 ns, 32.9000 us/op
WorkloadActual   5: 1 op, 34000.00 ns, 34.0000 us/op
WorkloadActual   6: 1 op, 33600.00 ns, 33.6000 us/op
WorkloadActual   7: 1 op, 33300.00 ns, 33.3000 us/op
WorkloadActual   8: 1 op, 35100.00 ns, 35.1000 us/op
WorkloadActual   9: 1 op, 33800.00 ns, 33.8000 us/op
WorkloadActual  10: 1 op, 30600.00 ns, 30.6000 us/op
WorkloadActual  11: 1 op, 33400.00 ns, 33.4000 us/op
WorkloadActual  12: 1 op, 31700.00 ns, 31.7000 us/op
WorkloadActual  13: 1 op, 32300.00 ns, 32.3000 us/op
WorkloadActual  14: 1 op, 30500.00 ns, 30.5000 us/op
WorkloadActual  15: 1 op, 29000.00 ns, 29.0000 us/op
WorkloadActual  16: 1 op, 29900.00 ns, 29.9000 us/op
WorkloadActual  17: 1 op, 31500.00 ns, 31.5000 us/op
WorkloadActual  18: 1 op, 30200.00 ns, 30.2000 us/op
WorkloadActual  19: 1 op, 29000.00 ns, 29.0000 us/op
WorkloadActual  20: 1 op, 28400.00 ns, 28.4000 us/op
WorkloadActual  21: 1 op, 31000.00 ns, 31.0000 us/op
WorkloadActual  22: 1 op, 30500.00 ns, 30.5000 us/op
WorkloadActual  23: 1 op, 31700.00 ns, 31.7000 us/op
WorkloadActual  24: 1 op, 32700.00 ns, 32.7000 us/op
WorkloadActual  25: 1 op, 33800.00 ns, 33.8000 us/op
WorkloadActual  26: 1 op, 31600.00 ns, 31.6000 us/op
WorkloadActual  27: 1 op, 31200.00 ns, 31.2000 us/op
WorkloadActual  28: 1 op, 29100.00 ns, 29.1000 us/op
WorkloadActual  29: 1 op, 31800.00 ns, 31.8000 us/op
WorkloadActual  30: 1 op, 29800.00 ns, 29.8000 us/op
WorkloadActual  31: 1 op, 28900.00 ns, 28.9000 us/op
WorkloadActual  32: 1 op, 31200.00 ns, 31.2000 us/op
WorkloadActual  33: 1 op, 34600.00 ns, 34.6000 us/op
WorkloadActual  34: 1 op, 37600.00 ns, 37.6000 us/op
WorkloadActual  35: 1 op, 35700.00 ns, 35.7000 us/op
WorkloadActual  36: 1 op, 38800.00 ns, 38.8000 us/op
WorkloadActual  37: 1 op, 35000.00 ns, 35.0000 us/op
WorkloadActual  38: 1 op, 36600.00 ns, 36.6000 us/op
WorkloadActual  39: 1 op, 35200.00 ns, 35.2000 us/op
WorkloadActual  40: 1 op, 36200.00 ns, 36.2000 us/op
WorkloadActual  41: 1 op, 34900.00 ns, 34.9000 us/op
WorkloadActual  42: 1 op, 34100.00 ns, 34.1000 us/op
WorkloadActual  43: 1 op, 35000.00 ns, 35.0000 us/op
WorkloadActual  44: 1 op, 34100.00 ns, 34.1000 us/op
WorkloadActual  45: 1 op, 31800.00 ns, 31.8000 us/op
WorkloadActual  46: 1 op, 35900.00 ns, 35.9000 us/op
WorkloadActual  47: 1 op, 36000.00 ns, 36.0000 us/op
WorkloadActual  48: 1 op, 37900.00 ns, 37.9000 us/op
WorkloadActual  49: 1 op, 33800.00 ns, 33.8000 us/op
WorkloadActual  50: 1 op, 32700.00 ns, 32.7000 us/op
WorkloadActual  51: 1 op, 32900.00 ns, 32.9000 us/op
WorkloadActual  52: 1 op, 36900.00 ns, 36.9000 us/op
WorkloadActual  53: 1 op, 33600.00 ns, 33.6000 us/op
WorkloadActual  54: 1 op, 34100.00 ns, 34.1000 us/op
WorkloadActual  55: 1 op, 35500.00 ns, 35.5000 us/op
WorkloadActual  56: 1 op, 34700.00 ns, 34.7000 us/op
WorkloadActual  57: 1 op, 34400.00 ns, 34.4000 us/op
WorkloadActual  58: 1 op, 32700.00 ns, 32.7000 us/op
WorkloadActual  59: 1 op, 33800.00 ns, 33.8000 us/op
WorkloadActual  60: 1 op, 34600.00 ns, 34.6000 us/op
WorkloadActual  61: 1 op, 43500.00 ns, 43.5000 us/op
WorkloadActual  62: 1 op, 38700.00 ns, 38.7000 us/op
WorkloadActual  63: 1 op, 43900.00 ns, 43.9000 us/op
WorkloadActual  64: 1 op, 32400.00 ns, 32.4000 us/op
WorkloadActual  65: 1 op, 35000.00 ns, 35.0000 us/op
WorkloadActual  66: 1 op, 31200.00 ns, 31.2000 us/op
WorkloadActual  67: 1 op, 34800.00 ns, 34.8000 us/op
WorkloadActual  68: 1 op, 30900.00 ns, 30.9000 us/op
WorkloadActual  69: 1 op, 30600.00 ns, 30.6000 us/op
WorkloadActual  70: 1 op, 28800.00 ns, 28.8000 us/op
WorkloadActual  71: 1 op, 33000.00 ns, 33.0000 us/op
WorkloadActual  72: 1 op, 29000.00 ns, 29.0000 us/op
WorkloadActual  73: 1 op, 34600.00 ns, 34.6000 us/op
WorkloadActual  74: 1 op, 34600.00 ns, 34.6000 us/op
WorkloadActual  75: 1 op, 35400.00 ns, 35.4000 us/op
WorkloadActual  76: 1 op, 36500.00 ns, 36.5000 us/op
WorkloadActual  77: 1 op, 32000.00 ns, 32.0000 us/op
WorkloadActual  78: 1 op, 31200.00 ns, 31.2000 us/op
WorkloadActual  79: 1 op, 30600.00 ns, 30.6000 us/op
WorkloadActual  80: 1 op, 30000.00 ns, 30.0000 us/op
WorkloadActual  81: 1 op, 32600.00 ns, 32.6000 us/op
WorkloadActual  82: 1 op, 31600.00 ns, 31.6000 us/op
WorkloadActual  83: 1 op, 28600.00 ns, 28.6000 us/op
WorkloadActual  84: 1 op, 37200.00 ns, 37.2000 us/op
WorkloadActual  85: 1 op, 33500.00 ns, 33.5000 us/op
WorkloadActual  86: 1 op, 37400.00 ns, 37.4000 us/op
WorkloadActual  87: 1 op, 32400.00 ns, 32.4000 us/op
WorkloadActual  88: 1 op, 34700.00 ns, 34.7000 us/op
WorkloadActual  89: 1 op, 38700.00 ns, 38.7000 us/op
WorkloadActual  90: 1 op, 39000.00 ns, 39.0000 us/op
WorkloadActual  91: 1 op, 37200.00 ns, 37.2000 us/op
WorkloadActual  92: 1 op, 32100.00 ns, 32.1000 us/op
WorkloadActual  93: 1 op, 32800.00 ns, 32.8000 us/op
WorkloadActual  94: 1 op, 35900.00 ns, 35.9000 us/op
WorkloadActual  95: 1 op, 34900.00 ns, 34.9000 us/op
WorkloadActual  96: 1 op, 31800.00 ns, 31.8000 us/op
WorkloadActual  97: 1 op, 32100.00 ns, 32.1000 us/op
WorkloadActual  98: 1 op, 35100.00 ns, 35.1000 us/op
WorkloadActual  99: 1 op, 30700.00 ns, 30.7000 us/op
WorkloadActual  100: 1 op, 35100.00 ns, 35.1000 us/op

// AfterActualRun
WorkloadResult   1: 1 op, 33800.00 ns, 33.8000 us/op
WorkloadResult   2: 1 op, 34500.00 ns, 34.5000 us/op
WorkloadResult   3: 1 op, 32800.00 ns, 32.8000 us/op
WorkloadResult   4: 1 op, 33900.00 ns, 33.9000 us/op
WorkloadResult   5: 1 op, 33500.00 ns, 33.5000 us/op
WorkloadResult   6: 1 op, 33200.00 ns, 33.2000 us/op
WorkloadResult   7: 1 op, 35000.00 ns, 35.0000 us/op
WorkloadResult   8: 1 op, 33700.00 ns, 33.7000 us/op
WorkloadResult   9: 1 op, 30500.00 ns, 30.5000 us/op
WorkloadResult  10: 1 op, 33300.00 ns, 33.3000 us/op
WorkloadResult  11: 1 op, 31600.00 ns, 31.6000 us/op
WorkloadResult  12: 1 op, 32200.00 ns, 32.2000 us/op
WorkloadResult  13: 1 op, 30400.00 ns, 30.4000 us/op
WorkloadResult  14: 1 op, 28900.00 ns, 28.9000 us/op
WorkloadResult  15: 1 op, 29800.00 ns, 29.8000 us/op
WorkloadResult  16: 1 op, 31400.00 ns, 31.4000 us/op
WorkloadResult  17: 1 op, 30100.00 ns, 30.1000 us/op
WorkloadResult  18: 1 op, 28900.00 ns, 28.9000 us/op
WorkloadResult  19: 1 op, 28300.00 ns, 28.3000 us/op
WorkloadResult  20: 1 op, 30900.00 ns, 30.9000 us/op
WorkloadResult  21: 1 op, 30400.00 ns, 30.4000 us/op
WorkloadResult  22: 1 op, 31600.00 ns, 31.6000 us/op
WorkloadResult  23: 1 op, 32600.00 ns, 32.6000 us/op
WorkloadResult  24: 1 op, 33700.00 ns, 33.7000 us/op
WorkloadResult  25: 1 op, 31500.00 ns, 31.5000 us/op
WorkloadResult  26: 1 op, 31100.00 ns, 31.1000 us/op
WorkloadResult  27: 1 op, 29000.00 ns, 29.0000 us/op
WorkloadResult  28: 1 op, 31700.00 ns, 31.7000 us/op
WorkloadResult  29: 1 op, 29700.00 ns, 29.7000 us/op
WorkloadResult  30: 1 op, 28800.00 ns, 28.8000 us/op
WorkloadResult  31: 1 op, 31100.00 ns, 31.1000 us/op
WorkloadResult  32: 1 op, 34500.00 ns, 34.5000 us/op
WorkloadResult  33: 1 op, 37500.00 ns, 37.5000 us/op
WorkloadResult  34: 1 op, 35600.00 ns, 35.6000 us/op
WorkloadResult  35: 1 op, 38700.00 ns, 38.7000 us/op
WorkloadResult  36: 1 op, 34900.00 ns, 34.9000 us/op
WorkloadResult  37: 1 op, 36500.00 ns, 36.5000 us/op
WorkloadResult  38: 1 op, 35100.00 ns, 35.1000 us/op
WorkloadResult  39: 1 op, 36100.00 ns, 36.1000 us/op
WorkloadResult  40: 1 op, 34800.00 ns, 34.8000 us/op
WorkloadResult  41: 1 op, 34000.00 ns, 34.0000 us/op
WorkloadResult  42: 1 op, 34900.00 ns, 34.9000 us/op
WorkloadResult  43: 1 op, 34000.00 ns, 34.0000 us/op
WorkloadResult  44: 1 op, 31700.00 ns, 31.7000 us/op
WorkloadResult  45: 1 op, 35800.00 ns, 35.8000 us/op
WorkloadResult  46: 1 op, 35900.00 ns, 35.9000 us/op
WorkloadResult  47: 1 op, 37800.00 ns, 37.8000 us/op
WorkloadResult  48: 1 op, 33700.00 ns, 33.7000 us/op
WorkloadResult  49: 1 op, 32600.00 ns, 32.6000 us/op
WorkloadResult  50: 1 op, 32800.00 ns, 32.8000 us/op
WorkloadResult  51: 1 op, 36800.00 ns, 36.8000 us/op
WorkloadResult  52: 1 op, 33500.00 ns, 33.5000 us/op
WorkloadResult  53: 1 op, 34000.00 ns, 34.0000 us/op
WorkloadResult  54: 1 op, 35400.00 ns, 35.4000 us/op
WorkloadResult  55: 1 op, 34600.00 ns, 34.6000 us/op
WorkloadResult  56: 1 op, 34300.00 ns, 34.3000 us/op
WorkloadResult  57: 1 op, 32600.00 ns, 32.6000 us/op
WorkloadResult  58: 1 op, 33700.00 ns, 33.7000 us/op
WorkloadResult  59: 1 op, 34500.00 ns, 34.5000 us/op
WorkloadResult  60: 1 op, 38600.00 ns, 38.6000 us/op
WorkloadResult  61: 1 op, 32300.00 ns, 32.3000 us/op
WorkloadResult  62: 1 op, 34900.00 ns, 34.9000 us/op
WorkloadResult  63: 1 op, 31100.00 ns, 31.1000 us/op
WorkloadResult  64: 1 op, 34700.00 ns, 34.7000 us/op
WorkloadResult  65: 1 op, 30800.00 ns, 30.8000 us/op
WorkloadResult  66: 1 op, 30500.00 ns, 30.5000 us/op
WorkloadResult  67: 1 op, 28700.00 ns, 28.7000 us/op
WorkloadResult  68: 1 op, 32900.00 ns, 32.9000 us/op
WorkloadResult  69: 1 op, 28900.00 ns, 28.9000 us/op
WorkloadResult  70: 1 op, 34500.00 ns, 34.5000 us/op
WorkloadResult  71: 1 op, 34500.00 ns, 34.5000 us/op
WorkloadResult  72: 1 op, 35300.00 ns, 35.3000 us/op
WorkloadResult  73: 1 op, 36400.00 ns, 36.4000 us/op
WorkloadResult  74: 1 op, 31900.00 ns, 31.9000 us/op
WorkloadResult  75: 1 op, 31100.00 ns, 31.1000 us/op
WorkloadResult  76: 1 op, 30500.00 ns, 30.5000 us/op
WorkloadResult  77: 1 op, 29900.00 ns, 29.9000 us/op
WorkloadResult  78: 1 op, 32500.00 ns, 32.5000 us/op
WorkloadResult  79: 1 op, 31500.00 ns, 31.5000 us/op
WorkloadResult  80: 1 op, 28500.00 ns, 28.5000 us/op
WorkloadResult  81: 1 op, 37100.00 ns, 37.1000 us/op
WorkloadResult  82: 1 op, 33400.00 ns, 33.4000 us/op
WorkloadResult  83: 1 op, 37300.00 ns, 37.3000 us/op
WorkloadResult  84: 1 op, 32300.00 ns, 32.3000 us/op
WorkloadResult  85: 1 op, 34600.00 ns, 34.6000 us/op
WorkloadResult  86: 1 op, 38600.00 ns, 38.6000 us/op
WorkloadResult  87: 1 op, 38900.00 ns, 38.9000 us/op
WorkloadResult  88: 1 op, 37100.00 ns, 37.1000 us/op
WorkloadResult  89: 1 op, 32000.00 ns, 32.0000 us/op
WorkloadResult  90: 1 op, 32700.00 ns, 32.7000 us/op
WorkloadResult  91: 1 op, 35800.00 ns, 35.8000 us/op
WorkloadResult  92: 1 op, 34800.00 ns, 34.8000 us/op
WorkloadResult  93: 1 op, 31700.00 ns, 31.7000 us/op
WorkloadResult  94: 1 op, 32000.00 ns, 32.0000 us/op
WorkloadResult  95: 1 op, 35000.00 ns, 35.0000 us/op
WorkloadResult  96: 1 op, 30600.00 ns, 30.6000 us/op
WorkloadResult  97: 1 op, 35000.00 ns, 35.0000 us/op

// AfterAll
// Benchmark Process 21580 has exited with code 0.

Mean = 33.228 μs, StdErr = 0.262 μs (0.79%), N = 97, StdDev = 2.581 μs
Min = 28.300 μs, Q1 = 31.400 μs, Median = 33.400 μs, Q3 = 34.900 μs, Max = 38.900 μs
IQR = 3.500 μs, LowerFence = 26.150 μs, UpperFence = 40.150 μs
ConfidenceInterval = [32.338 μs; 34.118 μs] (CI 99.9%), Margin = 0.890 μs (2.68% of Mean)
Skewness = 0.11, Kurtosis = 2.37, MValue = 3.11

// **************************
// Benchmark: LazySortedListBenchmark.LazySortedListGet: Job-UZWZTH(InvocationCount=1, UnrollFactor=1) [N=1000]
// *** Execute ***
// Launch: 1 / 1
// Execute: dotnet "bf18d94d-7dda-48e8-a69f-531024b3e97e.dll" --benchmarkName "ConvenientCollections.Benchmarks.LazySortedListBenchmark.LazySortedListGet(N: 1000)" --job "InvocationCount=1, UnrollFactor=1" --benchmarkId 1 in C:\Users\hacke\source\repos\CollectionBenchmarks\bin\Release\net6.0\bf18d94d-7dda-48e8-a69f-531024b3e97e\bin\Release\net6.0
// BeforeAnythingElse

// Benchmark Process Environment Information:
// Runtime=.NET 6.0.0 (6.0.21.52210), X64 RyuJIT
// GC=Concurrent Workstation
// Job: Job-QACYLJ(InvocationCount=1, UnrollFactor=1)

OverheadJitting  1: 1 op, 174000.00 ns, 174.0000 us/op
WorkloadJitting  1: 1 op, 3112500.00 ns, 3.1125 ms/op

OverheadWarmup   1: 1 op, 100.00 ns, 100.0000 ns/op
OverheadWarmup   2: 1 op, 200.00 ns, 200.0000 ns/op
OverheadWarmup   3: 1 op, 100.00 ns, 100.0000 ns/op
OverheadWarmup   4: 1 op, 100.00 ns, 100.0000 ns/op
OverheadWarmup   5: 1 op, 200.00 ns, 200.0000 ns/op

OverheadActual   1: 1 op, 100.00 ns, 100.0000 ns/op
OverheadActual   2: 1 op, 200.00 ns, 200.0000 ns/op
OverheadActual   3: 1 op, 200.00 ns, 200.0000 ns/op
OverheadActual   4: 1 op, 200.00 ns, 200.0000 ns/op
OverheadActual   5: 1 op, 200.00 ns, 200.0000 ns/op
OverheadActual   6: 1 op, 100.00 ns, 100.0000 ns/op
OverheadActual   7: 1 op, 100.00 ns, 100.0000 ns/op
OverheadActual   8: 1 op, 100.00 ns, 100.0000 ns/op
OverheadActual   9: 1 op, 200.00 ns, 200.0000 ns/op
OverheadActual  10: 1 op, 100.00 ns, 100.0000 ns/op
OverheadActual  11: 1 op, 100.00 ns, 100.0000 ns/op
OverheadActual  12: 1 op, 100.00 ns, 100.0000 ns/op
OverheadActual  13: 1 op, 100.00 ns, 100.0000 ns/op
OverheadActual  14: 1 op, 100.00 ns, 100.0000 ns/op
OverheadActual  15: 1 op, 100.00 ns, 100.0000 ns/op
OverheadActual  16: 1 op, 200.00 ns, 200.0000 ns/op
OverheadActual  17: 1 op, 200.00 ns, 200.0000 ns/op
OverheadActual  18: 1 op, 200.00 ns, 200.0000 ns/op
OverheadActual  19: 1 op, 100.00 ns, 100.0000 ns/op
OverheadActual  20: 1 op, 100.00 ns, 100.0000 ns/op

WorkloadWarmup   1: 1 op, 30700.00 ns, 30.7000 us/op
WorkloadWarmup   2: 1 op, 27400.00 ns, 27.4000 us/op
WorkloadWarmup   3: 1 op, 27100.00 ns, 27.1000 us/op
WorkloadWarmup   4: 1 op, 25100.00 ns, 25.1000 us/op
WorkloadWarmup   5: 1 op, 23100.00 ns, 23.1000 us/op
WorkloadWarmup   6: 1 op, 29100.00 ns, 29.1000 us/op
WorkloadWarmup   7: 1 op, 29300.00 ns, 29.3000 us/op
WorkloadWarmup   8: 1 op, 33700.00 ns, 33.7000 us/op
WorkloadWarmup   9: 1 op, 26900.00 ns, 26.9000 us/op
WorkloadWarmup  10: 1 op, 25800.00 ns, 25.8000 us/op
WorkloadWarmup  11: 1 op, 25900.00 ns, 25.9000 us/op
WorkloadWarmup  12: 1 op, 28500.00 ns, 28.5000 us/op
WorkloadWarmup  13: 1 op, 24700.00 ns, 24.7000 us/op

// BeforeActualRun
WorkloadActual   1: 1 op, 27500.00 ns, 27.5000 us/op
WorkloadActual   2: 1 op, 36000.00 ns, 36.0000 us/op
WorkloadActual   3: 1 op, 30400.00 ns, 30.4000 us/op
WorkloadActual   4: 1 op, 29400.00 ns, 29.4000 us/op
WorkloadActual   5: 1 op, 36800.00 ns, 36.8000 us/op
WorkloadActual   6: 1 op, 29200.00 ns, 29.2000 us/op
WorkloadActual   7: 1 op, 27900.00 ns, 27.9000 us/op
WorkloadActual   8: 1 op, 28500.00 ns, 28.5000 us/op
WorkloadActual   9: 1 op, 27500.00 ns, 27.5000 us/op
WorkloadActual  10: 1 op, 25300.00 ns, 25.3000 us/op
WorkloadActual  11: 1 op, 24800.00 ns, 24.8000 us/op
WorkloadActual  12: 1 op, 29000.00 ns, 29.0000 us/op
WorkloadActual  13: 1 op, 26700.00 ns, 26.7000 us/op
WorkloadActual  14: 1 op, 24600.00 ns, 24.6000 us/op
WorkloadActual  15: 1 op, 23800.00 ns, 23.8000 us/op
WorkloadActual  16: 1 op, 28500.00 ns, 28.5000 us/op
WorkloadActual  17: 1 op, 29500.00 ns, 29.5000 us/op
WorkloadActual  18: 1 op, 28600.00 ns, 28.6000 us/op
WorkloadActual  19: 1 op, 26000.00 ns, 26.0000 us/op
WorkloadActual  20: 1 op, 38600.00 ns, 38.6000 us/op
WorkloadActual  21: 1 op, 26900.00 ns, 26.9000 us/op
WorkloadActual  22: 1 op, 27300.00 ns, 27.3000 us/op
WorkloadActual  23: 1 op, 29600.00 ns, 29.6000 us/op
WorkloadActual  24: 1 op, 28300.00 ns, 28.3000 us/op
WorkloadActual  25: 1 op, 27500.00 ns, 27.5000 us/op
WorkloadActual  26: 1 op, 28600.00 ns, 28.6000 us/op
WorkloadActual  27: 1 op, 24700.00 ns, 24.7000 us/op
WorkloadActual  28: 1 op, 23100.00 ns, 23.1000 us/op
WorkloadActual  29: 1 op, 22000.00 ns, 22.0000 us/op
WorkloadActual  30: 1 op, 22400.00 ns, 22.4000 us/op
WorkloadActual  31: 1 op, 21800.00 ns, 21.8000 us/op
WorkloadActual  32: 1 op, 20700.00 ns, 20.7000 us/op
WorkloadActual  33: 1 op, 29200.00 ns, 29.2000 us/op
WorkloadActual  34: 1 op, 23300.00 ns, 23.3000 us/op
WorkloadActual  35: 1 op, 22800.00 ns, 22.8000 us/op
WorkloadActual  36: 1 op, 21600.00 ns, 21.6000 us/op
WorkloadActual  37: 1 op, 24300.00 ns, 24.3000 us/op
WorkloadActual  38: 1 op, 21100.00 ns, 21.1000 us/op
WorkloadActual  39: 1 op, 21000.00 ns, 21.0000 us/op
WorkloadActual  40: 1 op, 20500.00 ns, 20.5000 us/op
WorkloadActual  41: 1 op, 20500.00 ns, 20.5000 us/op
WorkloadActual  42: 1 op, 19100.00 ns, 19.1000 us/op
WorkloadActual  43: 1 op, 19800.00 ns, 19.8000 us/op
WorkloadActual  44: 1 op, 30700.00 ns, 30.7000 us/op
WorkloadActual  45: 1 op, 25100.00 ns, 25.1000 us/op
WorkloadActual  46: 1 op, 24300.00 ns, 24.3000 us/op
WorkloadActual  47: 1 op, 23100.00 ns, 23.1000 us/op
WorkloadActual  48: 1 op, 21900.00 ns, 21.9000 us/op
WorkloadActual  49: 1 op, 21500.00 ns, 21.5000 us/op
WorkloadActual  50: 1 op, 21400.00 ns, 21.4000 us/op
WorkloadActual  51: 1 op, 37200.00 ns, 37.2000 us/op
WorkloadActual  52: 1 op, 27500.00 ns, 27.5000 us/op
WorkloadActual  53: 1 op, 25600.00 ns, 25.6000 us/op
WorkloadActual  54: 1 op, 26000.00 ns, 26.0000 us/op
WorkloadActual  55: 1 op, 25700.00 ns, 25.7000 us/op
WorkloadActual  56: 1 op, 26100.00 ns, 26.1000 us/op
WorkloadActual  57: 1 op, 23700.00 ns, 23.7000 us/op
WorkloadActual  58: 1 op, 23000.00 ns, 23.0000 us/op
WorkloadActual  59: 1 op, 22100.00 ns, 22.1000 us/op
WorkloadActual  60: 1 op, 36100.00 ns, 36.1000 us/op
WorkloadActual  61: 1 op, 36100.00 ns, 36.1000 us/op
WorkloadActual  62: 1 op, 25900.00 ns, 25.9000 us/op
WorkloadActual  63: 1 op, 25600.00 ns, 25.6000 us/op
WorkloadActual  64: 1 op, 24700.00 ns, 24.7000 us/op
WorkloadActual  65: 1 op, 23100.00 ns, 23.1000 us/op
WorkloadActual  66: 1 op, 22000.00 ns, 22.0000 us/op
WorkloadActual  67: 1 op, 21400.00 ns, 21.4000 us/op
WorkloadActual  68: 1 op, 22100.00 ns, 22.1000 us/op
WorkloadActual  69: 1 op, 21400.00 ns, 21.4000 us/op
WorkloadActual  70: 1 op, 20800.00 ns, 20.8000 us/op
WorkloadActual  71: 1 op, 29900.00 ns, 29.9000 us/op
WorkloadActual  72: 1 op, 24000.00 ns, 24.0000 us/op
WorkloadActual  73: 1 op, 23300.00 ns, 23.3000 us/op
WorkloadActual  74: 1 op, 26900.00 ns, 26.9000 us/op
WorkloadActual  75: 1 op, 26200.00 ns, 26.2000 us/op
WorkloadActual  76: 1 op, 24900.00 ns, 24.9000 us/op
WorkloadActual  77: 1 op, 30300.00 ns, 30.3000 us/op
WorkloadActual  78: 1 op, 29200.00 ns, 29.2000 us/op
WorkloadActual  79: 1 op, 30100.00 ns, 30.1000 us/op
WorkloadActual  80: 1 op, 26200.00 ns, 26.2000 us/op
WorkloadActual  81: 1 op, 24400.00 ns, 24.4000 us/op
WorkloadActual  82: 1 op, 23700.00 ns, 23.7000 us/op
WorkloadActual  83: 1 op, 27100.00 ns, 27.1000 us/op
WorkloadActual  84: 1 op, 25600.00 ns, 25.6000 us/op
WorkloadActual  85: 1 op, 24000.00 ns, 24.0000 us/op
WorkloadActual  86: 1 op, 23700.00 ns, 23.7000 us/op
WorkloadActual  87: 1 op, 24600.00 ns, 24.6000 us/op
WorkloadActual  88: 1 op, 26000.00 ns, 26.0000 us/op
WorkloadActual  89: 1 op, 29700.00 ns, 29.7000 us/op
WorkloadActual  90: 1 op, 29600.00 ns, 29.6000 us/op
WorkloadActual  91: 1 op, 26700.00 ns, 26.7000 us/op
WorkloadActual  92: 1 op, 25700.00 ns, 25.7000 us/op
WorkloadActual  93: 1 op, 24400.00 ns, 24.4000 us/op
WorkloadActual  94: 1 op, 22800.00 ns, 22.8000 us/op
WorkloadActual  95: 1 op, 32800.00 ns, 32.8000 us/op
WorkloadActual  96: 1 op, 34200.00 ns, 34.2000 us/op
WorkloadActual  97: 1 op, 33300.00 ns, 33.3000 us/op
WorkloadActual  98: 1 op, 30600.00 ns, 30.6000 us/op
WorkloadActual  99: 1 op, 26900.00 ns, 26.9000 us/op
WorkloadActual  100: 1 op, 29400.00 ns, 29.4000 us/op

// AfterActualRun
WorkloadResult   1: 1 op, 27400.00 ns, 27.4000 us/op
WorkloadResult   2: 1 op, 35900.00 ns, 35.9000 us/op
WorkloadResult   3: 1 op, 30300.00 ns, 30.3000 us/op
WorkloadResult   4: 1 op, 29300.00 ns, 29.3000 us/op
WorkloadResult   5: 1 op, 36700.00 ns, 36.7000 us/op
WorkloadResult   6: 1 op, 29100.00 ns, 29.1000 us/op
WorkloadResult   7: 1 op, 27800.00 ns, 27.8000 us/op
WorkloadResult   8: 1 op, 28400.00 ns, 28.4000 us/op
WorkloadResult   9: 1 op, 27400.00 ns, 27.4000 us/op
WorkloadResult  10: 1 op, 25200.00 ns, 25.2000 us/op
WorkloadResult  11: 1 op, 24700.00 ns, 24.7000 us/op
WorkloadResult  12: 1 op, 28900.00 ns, 28.9000 us/op
WorkloadResult  13: 1 op, 26600.00 ns, 26.6000 us/op
WorkloadResult  14: 1 op, 24500.00 ns, 24.5000 us/op
WorkloadResult  15: 1 op, 23700.00 ns, 23.7000 us/op
WorkloadResult  16: 1 op, 28400.00 ns, 28.4000 us/op
WorkloadResult  17: 1 op, 29400.00 ns, 29.4000 us/op
WorkloadResult  18: 1 op, 28500.00 ns, 28.5000 us/op
WorkloadResult  19: 1 op, 25900.00 ns, 25.9000 us/op
WorkloadResult  20: 1 op, 26800.00 ns, 26.8000 us/op
WorkloadResult  21: 1 op, 27200.00 ns, 27.2000 us/op
WorkloadResult  22: 1 op, 29500.00 ns, 29.5000 us/op
WorkloadResult  23: 1 op, 28200.00 ns, 28.2000 us/op
WorkloadResult  24: 1 op, 27400.00 ns, 27.4000 us/op
WorkloadResult  25: 1 op, 28500.00 ns, 28.5000 us/op
WorkloadResult  26: 1 op, 24600.00 ns, 24.6000 us/op
WorkloadResult  27: 1 op, 23000.00 ns, 23.0000 us/op
WorkloadResult  28: 1 op, 21900.00 ns, 21.9000 us/op
WorkloadResult  29: 1 op, 22300.00 ns, 22.3000 us/op
WorkloadResult  30: 1 op, 21700.00 ns, 21.7000 us/op
WorkloadResult  31: 1 op, 20600.00 ns, 20.6000 us/op
WorkloadResult  32: 1 op, 29100.00 ns, 29.1000 us/op
WorkloadResult  33: 1 op, 23200.00 ns, 23.2000 us/op
WorkloadResult  34: 1 op, 22700.00 ns, 22.7000 us/op
WorkloadResult  35: 1 op, 21500.00 ns, 21.5000 us/op
WorkloadResult  36: 1 op, 24200.00 ns, 24.2000 us/op
WorkloadResult  37: 1 op, 21000.00 ns, 21.0000 us/op
WorkloadResult  38: 1 op, 20900.00 ns, 20.9000 us/op
WorkloadResult  39: 1 op, 20400.00 ns, 20.4000 us/op
WorkloadResult  40: 1 op, 20400.00 ns, 20.4000 us/op
WorkloadResult  41: 1 op, 19000.00 ns, 19.0000 us/op
WorkloadResult  42: 1 op, 19700.00 ns, 19.7000 us/op
WorkloadResult  43: 1 op, 30600.00 ns, 30.6000 us/op
WorkloadResult  44: 1 op, 25000.00 ns, 25.0000 us/op
WorkloadResult  45: 1 op, 24200.00 ns, 24.2000 us/op
WorkloadResult  46: 1 op, 23000.00 ns, 23.0000 us/op
WorkloadResult  47: 1 op, 21800.00 ns, 21.8000 us/op
WorkloadResult  48: 1 op, 21400.00 ns, 21.4000 us/op
WorkloadResult  49: 1 op, 21300.00 ns, 21.3000 us/op
WorkloadResult  50: 1 op, 27400.00 ns, 27.4000 us/op
WorkloadResult  51: 1 op, 25500.00 ns, 25.5000 us/op
WorkloadResult  52: 1 op, 25900.00 ns, 25.9000 us/op
WorkloadResult  53: 1 op, 25600.00 ns, 25.6000 us/op
WorkloadResult  54: 1 op, 26000.00 ns, 26.0000 us/op
WorkloadResult  55: 1 op, 23600.00 ns, 23.6000 us/op
WorkloadResult  56: 1 op, 22900.00 ns, 22.9000 us/op
WorkloadResult  57: 1 op, 22000.00 ns, 22.0000 us/op
WorkloadResult  58: 1 op, 36000.00 ns, 36.0000 us/op
WorkloadResult  59: 1 op, 36000.00 ns, 36.0000 us/op
WorkloadResult  60: 1 op, 25800.00 ns, 25.8000 us/op
WorkloadResult  61: 1 op, 25500.00 ns, 25.5000 us/op
WorkloadResult  62: 1 op, 24600.00 ns, 24.6000 us/op
WorkloadResult  63: 1 op, 23000.00 ns, 23.0000 us/op
WorkloadResult  64: 1 op, 21900.00 ns, 21.9000 us/op
WorkloadResult  65: 1 op, 21300.00 ns, 21.3000 us/op
WorkloadResult  66: 1 op, 22000.00 ns, 22.0000 us/op
WorkloadResult  67: 1 op, 21300.00 ns, 21.3000 us/op
WorkloadResult  68: 1 op, 20700.00 ns, 20.7000 us/op
WorkloadResult  69: 1 op, 29800.00 ns, 29.8000 us/op
WorkloadResult  70: 1 op, 23900.00 ns, 23.9000 us/op
WorkloadResult  71: 1 op, 23200.00 ns, 23.2000 us/op
WorkloadResult  72: 1 op, 26800.00 ns, 26.8000 us/op
WorkloadResult  73: 1 op, 26100.00 ns, 26.1000 us/op
WorkloadResult  74: 1 op, 24800.00 ns, 24.8000 us/op
WorkloadResult  75: 1 op, 30200.00 ns, 30.2000 us/op
WorkloadResult  76: 1 op, 29100.00 ns, 29.1000 us/op
WorkloadResult  77: 1 op, 30000.00 ns, 30.0000 us/op
WorkloadResult  78: 1 op, 26100.00 ns, 26.1000 us/op
WorkloadResult  79: 1 op, 24300.00 ns, 24.3000 us/op
WorkloadResult  80: 1 op, 23600.00 ns, 23.6000 us/op
WorkloadResult  81: 1 op, 27000.00 ns, 27.0000 us/op
WorkloadResult  82: 1 op, 25500.00 ns, 25.5000 us/op
WorkloadResult  83: 1 op, 23900.00 ns, 23.9000 us/op
WorkloadResult  84: 1 op, 23600.00 ns, 23.6000 us/op
WorkloadResult  85: 1 op, 24500.00 ns, 24.5000 us/op
WorkloadResult  86: 1 op, 25900.00 ns, 25.9000 us/op
WorkloadResult  87: 1 op, 29600.00 ns, 29.6000 us/op
WorkloadResult  88: 1 op, 29500.00 ns, 29.5000 us/op
WorkloadResult  89: 1 op, 26600.00 ns, 26.6000 us/op
WorkloadResult  90: 1 op, 25600.00 ns, 25.6000 us/op
WorkloadResult  91: 1 op, 24300.00 ns, 24.3000 us/op
WorkloadResult  92: 1 op, 22700.00 ns, 22.7000 us/op
WorkloadResult  93: 1 op, 32700.00 ns, 32.7000 us/op
WorkloadResult  94: 1 op, 34100.00 ns, 34.1000 us/op
WorkloadResult  95: 1 op, 33200.00 ns, 33.2000 us/op
WorkloadResult  96: 1 op, 30500.00 ns, 30.5000 us/op
WorkloadResult  97: 1 op, 26800.00 ns, 26.8000 us/op
WorkloadResult  98: 1 op, 29300.00 ns, 29.3000 us/op

// AfterAll
// Benchmark Process 14132 has exited with code 0.

Mean = 25.912 μs, StdErr = 0.391 μs (1.51%), N = 98, StdDev = 3.866 μs
Min = 19.000 μs, Q1 = 23.000 μs, Median = 25.550 μs, Q3 = 28.475 μs, Max = 36.700 μs
IQR = 5.475 μs, LowerFence = 14.787 μs, UpperFence = 36.688 μs
ConfidenceInterval = [24.587 μs; 27.238 μs] (CI 99.9%), Margin = 1.325 μs (5.12% of Mean)
Skewness = 0.68, Kurtosis = 3.22, MValue = 4.5

// **************************
// Benchmark: LazySortedListBenchmark.SystemSortedListAdd: Job-UZWZTH(InvocationCount=1, UnrollFactor=1) [N=1000]
// *** Execute ***
// Launch: 1 / 1
// Execute: dotnet "bf18d94d-7dda-48e8-a69f-531024b3e97e.dll" --benchmarkName "ConvenientCollections.Benchmarks.LazySortedListBenchmark.SystemSortedListAdd(N: 1000)" --job "InvocationCount=1, UnrollFactor=1" --benchmarkId 2 in C:\Users\hacke\source\repos\CollectionBenchmarks\bin\Release\net6.0\bf18d94d-7dda-48e8-a69f-531024b3e97e\bin\Release\net6.0
// BeforeAnythingElse

// Benchmark Process Environment Information:
// Runtime=.NET 6.0.0 (6.0.21.52210), X64 RyuJIT
// GC=Concurrent Workstation
// Job: Job-CHTAQX(InvocationCount=1, UnrollFactor=1)

OverheadJitting  1: 1 op, 143600.00 ns, 143.6000 us/op
WorkloadJitting  1: 1 op, 199600.00 ns, 199.6000 us/op

OverheadWarmup   1: 1 op, 200.00 ns, 200.0000 ns/op
OverheadWarmup   2: 1 op, 200.00 ns, 200.0000 ns/op
OverheadWarmup   3: 1 op, 100.00 ns, 100.0000 ns/op
OverheadWarmup   4: 1 op, 200.00 ns, 200.0000 ns/op
OverheadWarmup   5: 1 op, 200.00 ns, 200.0000 ns/op

OverheadActual   1: 1 op, 100.00 ns, 100.0000 ns/op
OverheadActual   2: 1 op, 200.00 ns, 200.0000 ns/op
OverheadActual   3: 1 op, 200.00 ns, 200.0000 ns/op
OverheadActual   4: 1 op, 100.00 ns, 100.0000 ns/op
OverheadActual   5: 1 op, 200.00 ns, 200.0000 ns/op
OverheadActual   6: 1 op, 200.00 ns, 200.0000 ns/op
OverheadActual   7: 1 op, 100.00 ns, 100.0000 ns/op
OverheadActual   8: 1 op, 200.00 ns, 200.0000 ns/op
OverheadActual   9: 1 op, 100.00 ns, 100.0000 ns/op
OverheadActual  10: 1 op, 100.00 ns, 100.0000 ns/op
OverheadActual  11: 1 op, 100.00 ns, 100.0000 ns/op
OverheadActual  12: 1 op, 200.00 ns, 200.0000 ns/op
OverheadActual  13: 1 op, 100.00 ns, 100.0000 ns/op
OverheadActual  14: 1 op, 100.00 ns, 100.0000 ns/op
OverheadActual  15: 1 op, 100.00 ns, 100.0000 ns/op
OverheadActual  16: 1 op, 100.00 ns, 100.0000 ns/op
OverheadActual  17: 1 op, 100.00 ns, 100.0000 ns/op
OverheadActual  18: 1 op, 200.00 ns, 200.0000 ns/op
OverheadActual  19: 1 op, 200.00 ns, 200.0000 ns/op
OverheadActual  20: 1 op, 100.00 ns, 100.0000 ns/op

WorkloadWarmup   1: 1 op, 22300.00 ns, 22.3000 us/op
WorkloadWarmup   2: 1 op, 21800.00 ns, 21.8000 us/op
WorkloadWarmup   3: 1 op, 22500.00 ns, 22.5000 us/op
WorkloadWarmup   4: 1 op, 21700.00 ns, 21.7000 us/op
WorkloadWarmup   5: 1 op, 22200.00 ns, 22.2000 us/op
WorkloadWarmup   6: 1 op, 21700.00 ns, 21.7000 us/op

// BeforeActualRun
WorkloadActual   1: 1 op, 21300.00 ns, 21.3000 us/op
WorkloadActual   2: 1 op, 21300.00 ns, 21.3000 us/op
WorkloadActual   3: 1 op, 21400.00 ns, 21.4000 us/op
WorkloadActual   4: 1 op, 21200.00 ns, 21.2000 us/op
WorkloadActual   5: 1 op, 21200.00 ns, 21.2000 us/op
WorkloadActual   6: 1 op, 21200.00 ns, 21.2000 us/op
WorkloadActual   7: 1 op, 21200.00 ns, 21.2000 us/op
WorkloadActual   8: 1 op, 21500.00 ns, 21.5000 us/op
WorkloadActual   9: 1 op, 21500.00 ns, 21.5000 us/op
WorkloadActual  10: 1 op, 21600.00 ns, 21.6000 us/op
WorkloadActual  11: 1 op, 21500.00 ns, 21.5000 us/op
WorkloadActual  12: 1 op, 21500.00 ns, 21.5000 us/op
WorkloadActual  13: 1 op, 21600.00 ns, 21.6000 us/op
WorkloadActual  14: 1 op, 21500.00 ns, 21.5000 us/op
WorkloadActual  15: 1 op, 21700.00 ns, 21.7000 us/op

// AfterActualRun
WorkloadResult   1: 1 op, 21200.00 ns, 21.2000 us/op
WorkloadResult   2: 1 op, 21200.00 ns, 21.2000 us/op
WorkloadResult   3: 1 op, 21300.00 ns, 21.3000 us/op
WorkloadResult   4: 1 op, 21100.00 ns, 21.1000 us/op
WorkloadResult   5: 1 op, 21100.00 ns, 21.1000 us/op
WorkloadResult   6: 1 op, 21100.00 ns, 21.1000 us/op
WorkloadResult   7: 1 op, 21100.00 ns, 21.1000 us/op
WorkloadResult   8: 1 op, 21400.00 ns, 21.4000 us/op
WorkloadResult   9: 1 op, 21400.00 ns, 21.4000 us/op
WorkloadResult  10: 1 op, 21500.00 ns, 21.5000 us/op
WorkloadResult  11: 1 op, 21400.00 ns, 21.4000 us/op
WorkloadResult  12: 1 op, 21400.00 ns, 21.4000 us/op
WorkloadResult  13: 1 op, 21500.00 ns, 21.5000 us/op
WorkloadResult  14: 1 op, 21400.00 ns, 21.4000 us/op
WorkloadResult  15: 1 op, 21600.00 ns, 21.6000 us/op

// AfterAll
// Benchmark Process 25508 has exited with code 0.

Mean = 21.313 μs, StdErr = 0.043 μs (0.20%), N = 15, StdDev = 0.168 μs
Min = 21.100 μs, Q1 = 21.150 μs, Median = 21.400 μs, Q3 = 21.400 μs, Max = 21.600 μs
IQR = 0.250 μs, LowerFence = 20.775 μs, UpperFence = 21.775 μs
ConfidenceInterval = [21.133 μs; 21.493 μs] (CI 99.9%), Margin = 0.180 μs (0.85% of Mean)
Skewness = -0.03, Kurtosis = 1.5, MValue = 2

// **************************
// Benchmark: LazySortedListBenchmark.LazySortedListAdd: Job-UZWZTH(InvocationCount=1, UnrollFactor=1) [N=1000]
// *** Execute ***
// Launch: 1 / 1
// Execute: dotnet "bf18d94d-7dda-48e8-a69f-531024b3e97e.dll" --benchmarkName "ConvenientCollections.Benchmarks.LazySortedListBenchmark.LazySortedListAdd(N: 1000)" --job "InvocationCount=1, UnrollFactor=1" --benchmarkId 3 in C:\Users\hacke\source\repos\CollectionBenchmarks\bin\Release\net6.0\bf18d94d-7dda-48e8-a69f-531024b3e97e\bin\Release\net6.0
// BeforeAnythingElse

// Benchmark Process Environment Information:
// Runtime=.NET 6.0.0 (6.0.21.52210), X64 RyuJIT
// GC=Concurrent Workstation
// Job: Job-RKTVCG(InvocationCount=1, UnrollFactor=1)

OverheadJitting  1: 1 op, 140900.00 ns, 140.9000 us/op
WorkloadJitting  1: 1 op, 318600.00 ns, 318.6000 us/op

OverheadWarmup   1: 1 op, 200.00 ns, 200.0000 ns/op
OverheadWarmup   2: 1 op, 100.00 ns, 100.0000 ns/op
OverheadWarmup   3: 1 op, 200.00 ns, 200.0000 ns/op
OverheadWarmup   4: 1 op, 100.00 ns, 100.0000 ns/op
OverheadWarmup   5: 1 op, 200.00 ns, 200.0000 ns/op
OverheadWarmup   6: 1 op, 100.00 ns, 100.0000 ns/op

OverheadActual   1: 1 op, 100.00 ns, 100.0000 ns/op
OverheadActual   2: 1 op, 100.00 ns, 100.0000 ns/op
OverheadActual   3: 1 op, 200.00 ns, 200.0000 ns/op
OverheadActual   4: 1 op, 200.00 ns, 200.0000 ns/op
OverheadActual   5: 1 op, 100.00 ns, 100.0000 ns/op
OverheadActual   6: 1 op, 100.00 ns, 100.0000 ns/op
OverheadActual   7: 1 op, 200.00 ns, 200.0000 ns/op
OverheadActual   8: 1 op, 100.00 ns, 100.0000 ns/op
OverheadActual   9: 1 op, 100.00 ns, 100.0000 ns/op
OverheadActual  10: 1 op, 100.00 ns, 100.0000 ns/op
OverheadActual  11: 1 op, 100.00 ns, 100.0000 ns/op
OverheadActual  12: 1 op, 200.00 ns, 200.0000 ns/op
OverheadActual  13: 1 op, 100.00 ns, 100.0000 ns/op
OverheadActual  14: 1 op, 200.00 ns, 200.0000 ns/op
OverheadActual  15: 1 op, 100.00 ns, 100.0000 ns/op
OverheadActual  16: 1 op, 200.00 ns, 200.0000 ns/op
OverheadActual  17: 1 op, 100.00 ns, 100.0000 ns/op
OverheadActual  18: 1 op, 100.00 ns, 100.0000 ns/op
OverheadActual  19: 1 op, 100.00 ns, 100.0000 ns/op
OverheadActual  20: 1 op, 100.00 ns, 100.0000 ns/op

WorkloadWarmup   1: 1 op, 1600.00 ns, 1.6000 us/op
WorkloadWarmup   2: 1 op, 1300.00 ns, 1.3000 us/op
WorkloadWarmup   3: 1 op, 1600.00 ns, 1.6000 us/op
WorkloadWarmup   4: 1 op, 1500.00 ns, 1.5000 us/op
WorkloadWarmup   5: 1 op, 1500.00 ns, 1.5000 us/op
WorkloadWarmup   6: 1 op, 1400.00 ns, 1.4000 us/op

// BeforeActualRun
WorkloadActual   1: 1 op, 1700.00 ns, 1.7000 us/op
WorkloadActual   2: 1 op, 1300.00 ns, 1.3000 us/op
WorkloadActual   3: 1 op, 1300.00 ns, 1.3000 us/op
WorkloadActual   4: 1 op, 1300.00 ns, 1.3000 us/op
WorkloadActual   5: 1 op, 1300.00 ns, 1.3000 us/op
WorkloadActual   6: 1 op, 1800.00 ns, 1.8000 us/op
WorkloadActual   7: 1 op, 1400.00 ns, 1.4000 us/op
WorkloadActual   8: 1 op, 1400.00 ns, 1.4000 us/op
WorkloadActual   9: 1 op, 1400.00 ns, 1.4000 us/op
WorkloadActual  10: 1 op, 1400.00 ns, 1.4000 us/op
WorkloadActual  11: 1 op, 1500.00 ns, 1.5000 us/op
WorkloadActual  12: 1 op, 1500.00 ns, 1.5000 us/op
WorkloadActual  13: 1 op, 1300.00 ns, 1.3000 us/op
WorkloadActual  14: 1 op, 1500.00 ns, 1.5000 us/op
WorkloadActual  15: 1 op, 1300.00 ns, 1.3000 us/op
WorkloadActual  16: 1 op, 1400.00 ns, 1.4000 us/op
WorkloadActual  17: 1 op, 1300.00 ns, 1.3000 us/op
WorkloadActual  18: 1 op, 1300.00 ns, 1.3000 us/op
WorkloadActual  19: 1 op, 1400.00 ns, 1.4000 us/op
WorkloadActual  20: 1 op, 1300.00 ns, 1.3000 us/op
WorkloadActual  21: 1 op, 1300.00 ns, 1.3000 us/op
WorkloadActual  22: 1 op, 1300.00 ns, 1.3000 us/op
WorkloadActual  23: 1 op, 1400.00 ns, 1.4000 us/op
WorkloadActual  24: 1 op, 1400.00 ns, 1.4000 us/op
WorkloadActual  25: 1 op, 1400.00 ns, 1.4000 us/op
WorkloadActual  26: 1 op, 1300.00 ns, 1.3000 us/op
WorkloadActual  27: 1 op, 1400.00 ns, 1.4000 us/op
WorkloadActual  28: 1 op, 1400.00 ns, 1.4000 us/op
WorkloadActual  29: 1 op, 1400.00 ns, 1.4000 us/op
WorkloadActual  30: 1 op, 1300.00 ns, 1.3000 us/op
WorkloadActual  31: 1 op, 1900.00 ns, 1.9000 us/op
WorkloadActual  32: 1 op, 1500.00 ns, 1.5000 us/op
WorkloadActual  33: 1 op, 1400.00 ns, 1.4000 us/op
WorkloadActual  34: 1 op, 1300.00 ns, 1.3000 us/op
WorkloadActual  35: 1 op, 1300.00 ns, 1.3000 us/op
WorkloadActual  36: 1 op, 1300.00 ns, 1.3000 us/op
WorkloadActual  37: 1 op, 1400.00 ns, 1.4000 us/op
WorkloadActual  38: 1 op, 1500.00 ns, 1.5000 us/op
WorkloadActual  39: 1 op, 1400.00 ns, 1.4000 us/op
WorkloadActual  40: 1 op, 1400.00 ns, 1.4000 us/op
WorkloadActual  41: 1 op, 1400.00 ns, 1.4000 us/op
WorkloadActual  42: 1 op, 1400.00 ns, 1.4000 us/op
WorkloadActual  43: 1 op, 1300.00 ns, 1.3000 us/op
WorkloadActual  44: 1 op, 1300.00 ns, 1.3000 us/op
WorkloadActual  45: 1 op, 1500.00 ns, 1.5000 us/op
WorkloadActual  46: 1 op, 1400.00 ns, 1.4000 us/op
WorkloadActual  47: 1 op, 1500.00 ns, 1.5000 us/op
WorkloadActual  48: 1 op, 1400.00 ns, 1.4000 us/op
WorkloadActual  49: 1 op, 1300.00 ns, 1.3000 us/op
WorkloadActual  50: 1 op, 1300.00 ns, 1.3000 us/op
WorkloadActual  51: 1 op, 1400.00 ns, 1.4000 us/op
WorkloadActual  52: 1 op, 1300.00 ns, 1.3000 us/op
WorkloadActual  53: 1 op, 1300.00 ns, 1.3000 us/op
WorkloadActual  54: 1 op, 1800.00 ns, 1.8000 us/op
WorkloadActual  55: 1 op, 1500.00 ns, 1.5000 us/op
WorkloadActual  56: 1 op, 1300.00 ns, 1.3000 us/op
WorkloadActual  57: 1 op, 1500.00 ns, 1.5000 us/op
WorkloadActual  58: 1 op, 1400.00 ns, 1.4000 us/op
WorkloadActual  59: 1 op, 1300.00 ns, 1.3000 us/op
WorkloadActual  60: 1 op, 1500.00 ns, 1.5000 us/op
WorkloadActual  61: 1 op, 1600.00 ns, 1.6000 us/op
WorkloadActual  62: 1 op, 1600.00 ns, 1.6000 us/op
WorkloadActual  63: 1 op, 1600.00 ns, 1.6000 us/op
WorkloadActual  64: 1 op, 1600.00 ns, 1.6000 us/op
WorkloadActual  65: 1 op, 1300.00 ns, 1.3000 us/op
WorkloadActual  66: 1 op, 1400.00 ns, 1.4000 us/op
WorkloadActual  67: 1 op, 1400.00 ns, 1.4000 us/op
WorkloadActual  68: 1 op, 1300.00 ns, 1.3000 us/op
WorkloadActual  69: 1 op, 1200.00 ns, 1.2000 us/op
WorkloadActual  70: 1 op, 1400.00 ns, 1.4000 us/op
WorkloadActual  71: 1 op, 1400.00 ns, 1.4000 us/op
WorkloadActual  72: 1 op, 1400.00 ns, 1.4000 us/op
WorkloadActual  73: 1 op, 1600.00 ns, 1.6000 us/op
WorkloadActual  74: 1 op, 1300.00 ns, 1.3000 us/op
WorkloadActual  75: 1 op, 1300.00 ns, 1.3000 us/op
WorkloadActual  76: 1 op, 1400.00 ns, 1.4000 us/op
WorkloadActual  77: 1 op, 1400.00 ns, 1.4000 us/op
WorkloadActual  78: 1 op, 1400.00 ns, 1.4000 us/op
WorkloadActual  79: 1 op, 1300.00 ns, 1.3000 us/op
WorkloadActual  80: 1 op, 1400.00 ns, 1.4000 us/op
WorkloadActual  81: 1 op, 1300.00 ns, 1.3000 us/op
WorkloadActual  82: 1 op, 1300.00 ns, 1.3000 us/op
WorkloadActual  83: 1 op, 1400.00 ns, 1.4000 us/op
WorkloadActual  84: 1 op, 2100.00 ns, 2.1000 us/op
WorkloadActual  85: 1 op, 1600.00 ns, 1.6000 us/op
WorkloadActual  86: 1 op, 1300.00 ns, 1.3000 us/op
WorkloadActual  87: 1 op, 1400.00 ns, 1.4000 us/op
WorkloadActual  88: 1 op, 1400.00 ns, 1.4000 us/op
WorkloadActual  89: 1 op, 1500.00 ns, 1.5000 us/op
WorkloadActual  90: 1 op, 1300.00 ns, 1.3000 us/op
WorkloadActual  91: 1 op, 1300.00 ns, 1.3000 us/op
WorkloadActual  92: 1 op, 1400.00 ns, 1.4000 us/op

// AfterActualRun
WorkloadResult   1: 1 op, 1200.00 ns, 1.2000 us/op
WorkloadResult   2: 1 op, 1200.00 ns, 1.2000 us/op
WorkloadResult   3: 1 op, 1200.00 ns, 1.2000 us/op
WorkloadResult   4: 1 op, 1200.00 ns, 1.2000 us/op
WorkloadResult   5: 1 op, 1300.00 ns, 1.3000 us/op
WorkloadResult   6: 1 op, 1300.00 ns, 1.3000 us/op
WorkloadResult   7: 1 op, 1300.00 ns, 1.3000 us/op
WorkloadResult   8: 1 op, 1300.00 ns, 1.3000 us/op
WorkloadResult   9: 1 op, 1400.00 ns, 1.4000 us/op
WorkloadResult  10: 1 op, 1400.00 ns, 1.4000 us/op
WorkloadResult  11: 1 op, 1200.00 ns, 1.2000 us/op
WorkloadResult  12: 1 op, 1400.00 ns, 1.4000 us/op
WorkloadResult  13: 1 op, 1200.00 ns, 1.2000 us/op
WorkloadResult  14: 1 op, 1300.00 ns, 1.3000 us/op
WorkloadResult  15: 1 op, 1200.00 ns, 1.2000 us/op
WorkloadResult  16: 1 op, 1200.00 ns, 1.2000 us/op
WorkloadResult  17: 1 op, 1300.00 ns, 1.3000 us/op
WorkloadResult  18: 1 op, 1200.00 ns, 1.2000 us/op
WorkloadResult  19: 1 op, 1200.00 ns, 1.2000 us/op
WorkloadResult  20: 1 op, 1200.00 ns, 1.2000 us/op
WorkloadResult  21: 1 op, 1300.00 ns, 1.3000 us/op
WorkloadResult  22: 1 op, 1300.00 ns, 1.3000 us/op
WorkloadResult  23: 1 op, 1300.00 ns, 1.3000 us/op
WorkloadResult  24: 1 op, 1200.00 ns, 1.2000 us/op
WorkloadResult  25: 1 op, 1300.00 ns, 1.3000 us/op
WorkloadResult  26: 1 op, 1300.00 ns, 1.3000 us/op
WorkloadResult  27: 1 op, 1300.00 ns, 1.3000 us/op
WorkloadResult  28: 1 op, 1200.00 ns, 1.2000 us/op
WorkloadResult  29: 1 op, 1400.00 ns, 1.4000 us/op
WorkloadResult  30: 1 op, 1300.00 ns, 1.3000 us/op
WorkloadResult  31: 1 op, 1200.00 ns, 1.2000 us/op
WorkloadResult  32: 1 op, 1200.00 ns, 1.2000 us/op
WorkloadResult  33: 1 op, 1200.00 ns, 1.2000 us/op
WorkloadResult  34: 1 op, 1300.00 ns, 1.3000 us/op
WorkloadResult  35: 1 op, 1400.00 ns, 1.4000 us/op
WorkloadResult  36: 1 op, 1300.00 ns, 1.3000 us/op
WorkloadResult  37: 1 op, 1300.00 ns, 1.3000 us/op
WorkloadResult  38: 1 op, 1300.00 ns, 1.3000 us/op
WorkloadResult  39: 1 op, 1300.00 ns, 1.3000 us/op
WorkloadResult  40: 1 op, 1200.00 ns, 1.2000 us/op
WorkloadResult  41: 1 op, 1200.00 ns, 1.2000 us/op
WorkloadResult  42: 1 op, 1400.00 ns, 1.4000 us/op
WorkloadResult  43: 1 op, 1300.00 ns, 1.3000 us/op
WorkloadResult  44: 1 op, 1400.00 ns, 1.4000 us/op
WorkloadResult  45: 1 op, 1300.00 ns, 1.3000 us/op
WorkloadResult  46: 1 op, 1200.00 ns, 1.2000 us/op
WorkloadResult  47: 1 op, 1200.00 ns, 1.2000 us/op
WorkloadResult  48: 1 op, 1300.00 ns, 1.3000 us/op
WorkloadResult  49: 1 op, 1200.00 ns, 1.2000 us/op
WorkloadResult  50: 1 op, 1200.00 ns, 1.2000 us/op
WorkloadResult  51: 1 op, 1400.00 ns, 1.4000 us/op
WorkloadResult  52: 1 op, 1200.00 ns, 1.2000 us/op
WorkloadResult  53: 1 op, 1400.00 ns, 1.4000 us/op
WorkloadResult  54: 1 op, 1300.00 ns, 1.3000 us/op
WorkloadResult  55: 1 op, 1200.00 ns, 1.2000 us/op
WorkloadResult  56: 1 op, 1400.00 ns, 1.4000 us/op
WorkloadResult  57: 1 op, 1200.00 ns, 1.2000 us/op
WorkloadResult  58: 1 op, 1300.00 ns, 1.3000 us/op
WorkloadResult  59: 1 op, 1300.00 ns, 1.3000 us/op
WorkloadResult  60: 1 op, 1200.00 ns, 1.2000 us/op
WorkloadResult  61: 1 op, 1100.00 ns, 1.1000 us/op
WorkloadResult  62: 1 op, 1300.00 ns, 1.3000 us/op
WorkloadResult  63: 1 op, 1300.00 ns, 1.3000 us/op
WorkloadResult  64: 1 op, 1300.00 ns, 1.3000 us/op
WorkloadResult  65: 1 op, 1200.00 ns, 1.2000 us/op
WorkloadResult  66: 1 op, 1200.00 ns, 1.2000 us/op
WorkloadResult  67: 1 op, 1300.00 ns, 1.3000 us/op
WorkloadResult  68: 1 op, 1300.00 ns, 1.3000 us/op
WorkloadResult  69: 1 op, 1300.00 ns, 1.3000 us/op
WorkloadResult  70: 1 op, 1200.00 ns, 1.2000 us/op
WorkloadResult  71: 1 op, 1300.00 ns, 1.3000 us/op
WorkloadResult  72: 1 op, 1200.00 ns, 1.2000 us/op
WorkloadResult  73: 1 op, 1200.00 ns, 1.2000 us/op
WorkloadResult  74: 1 op, 1300.00 ns, 1.3000 us/op
WorkloadResult  75: 1 op, 1200.00 ns, 1.2000 us/op
WorkloadResult  76: 1 op, 1300.00 ns, 1.3000 us/op
WorkloadResult  77: 1 op, 1300.00 ns, 1.3000 us/op
WorkloadResult  78: 1 op, 1400.00 ns, 1.4000 us/op
WorkloadResult  79: 1 op, 1200.00 ns, 1.2000 us/op
WorkloadResult  80: 1 op, 1200.00 ns, 1.2000 us/op
WorkloadResult  81: 1 op, 1300.00 ns, 1.3000 us/op

// AfterAll
// Benchmark Process 24868 has exited with code 0.

Mean = 1.269 μs, StdErr = 0.008 μs (0.63%), N = 81, StdDev = 0.072 μs
Min = 1.100 μs, Q1 = 1.200 μs, Median = 1.300 μs, Q3 = 1.300 μs, Max = 1.400 μs
IQR = 0.100 μs, LowerFence = 1.050 μs, UpperFence = 1.450 μs
ConfidenceInterval = [1.242 μs; 1.296 μs] (CI 99.9%), Margin = 0.027 μs (2.15% of Mean)
Skewness = 0.32, Kurtosis = 2.25, MValue = 4.63

// **************************
// Benchmark: LazySortedListBenchmark.SystemSortedListRemove: Job-UZWZTH(InvocationCount=1, UnrollFactor=1) [N=1000]
// *** Execute ***
// Launch: 1 / 1
// Execute: dotnet "bf18d94d-7dda-48e8-a69f-531024b3e97e.dll" --benchmarkName "ConvenientCollections.Benchmarks.LazySortedListBenchmark.SystemSortedListRemove(N: 1000)" --job "InvocationCount=1, UnrollFactor=1" --benchmarkId 4 in C:\Users\hacke\source\repos\CollectionBenchmarks\bin\Release\net6.0\bf18d94d-7dda-48e8-a69f-531024b3e97e\bin\Release\net6.0
// BeforeAnythingElse

// Benchmark Process Environment Information:
// Runtime=.NET 6.0.0 (6.0.21.52210), X64 RyuJIT
// GC=Concurrent Workstation
// Job: Job-CPLHSQ(InvocationCount=1, UnrollFactor=1)

OverheadJitting  1: 1 op, 139100.00 ns, 139.1000 us/op
WorkloadJitting  1: 1 op, 468400.00 ns, 468.4000 us/op

OverheadWarmup   1: 1 op, 100.00 ns, 100.0000 ns/op
OverheadWarmup   2: 1 op, 200.00 ns, 200.0000 ns/op
OverheadWarmup   3: 1 op, 100.00 ns, 100.0000 ns/op
OverheadWarmup   4: 1 op, 100.00 ns, 100.0000 ns/op
OverheadWarmup   5: 1 op, 100.00 ns, 100.0000 ns/op

OverheadActual   1: 1 op, 200.00 ns, 200.0000 ns/op
OverheadActual   2: 1 op, 100.00 ns, 100.0000 ns/op
OverheadActual   3: 1 op, 200.00 ns, 200.0000 ns/op
OverheadActual   4: 1 op, 200.00 ns, 200.0000 ns/op
OverheadActual   5: 1 op, 200.00 ns, 200.0000 ns/op
OverheadActual   6: 1 op, 100.00 ns, 100.0000 ns/op
OverheadActual   7: 1 op, 100.00 ns, 100.0000 ns/op
OverheadActual   8: 1 op, 100.00 ns, 100.0000 ns/op
OverheadActual   9: 1 op, 200.00 ns, 200.0000 ns/op
OverheadActual  10: 1 op, 200.00 ns, 200.0000 ns/op
OverheadActual  11: 1 op, 100.00 ns, 100.0000 ns/op
OverheadActual  12: 1 op, 100.00 ns, 100.0000 ns/op
OverheadActual  13: 1 op, 100.00 ns, 100.0000 ns/op
OverheadActual  14: 1 op, 100.00 ns, 100.0000 ns/op
OverheadActual  15: 1 op, 100.00 ns, 100.0000 ns/op
OverheadActual  16: 1 op, 100.00 ns, 100.0000 ns/op
OverheadActual  17: 1 op, 200.00 ns, 200.0000 ns/op
OverheadActual  18: 1 op, 100.00 ns, 100.0000 ns/op
OverheadActual  19: 1 op, 200.00 ns, 200.0000 ns/op
OverheadActual  20: 1 op, 200.00 ns, 200.0000 ns/op

WorkloadWarmup   1: 1 op, 82900.00 ns, 82.9000 us/op
WorkloadWarmup   2: 1 op, 83000.00 ns, 83.0000 us/op
WorkloadWarmup   3: 1 op, 84400.00 ns, 84.4000 us/op
WorkloadWarmup   4: 1 op, 82600.00 ns, 82.6000 us/op
WorkloadWarmup   5: 1 op, 82400.00 ns, 82.4000 us/op
WorkloadWarmup   6: 1 op, 81900.00 ns, 81.9000 us/op
WorkloadWarmup   7: 1 op, 82100.00 ns, 82.1000 us/op
WorkloadWarmup   8: 1 op, 83600.00 ns, 83.6000 us/op
WorkloadWarmup   9: 1 op, 82300.00 ns, 82.3000 us/op

// BeforeActualRun
WorkloadActual   1: 1 op, 102900.00 ns, 102.9000 us/op
WorkloadActual   2: 1 op, 81900.00 ns, 81.9000 us/op
WorkloadActual   3: 1 op, 82000.00 ns, 82.0000 us/op
WorkloadActual   4: 1 op, 83200.00 ns, 83.2000 us/op
WorkloadActual   5: 1 op, 83000.00 ns, 83.0000 us/op
WorkloadActual   6: 1 op, 82400.00 ns, 82.4000 us/op
WorkloadActual   7: 1 op, 82600.00 ns, 82.6000 us/op
WorkloadActual   8: 1 op, 82000.00 ns, 82.0000 us/op
WorkloadActual   9: 1 op, 82500.00 ns, 82.5000 us/op
WorkloadActual  10: 1 op, 82500.00 ns, 82.5000 us/op
WorkloadActual  11: 1 op, 84200.00 ns, 84.2000 us/op
WorkloadActual  12: 1 op, 83300.00 ns, 83.3000 us/op
WorkloadActual  13: 1 op, 82700.00 ns, 82.7000 us/op
WorkloadActual  14: 1 op, 82500.00 ns, 82.5000 us/op
WorkloadActual  15: 1 op, 82300.00 ns, 82.3000 us/op

// AfterActualRun
WorkloadResult   1: 1 op, 81800.00 ns, 81.8000 us/op
WorkloadResult   2: 1 op, 81900.00 ns, 81.9000 us/op
WorkloadResult   3: 1 op, 83100.00 ns, 83.1000 us/op
WorkloadResult   4: 1 op, 82900.00 ns, 82.9000 us/op
WorkloadResult   5: 1 op, 82300.00 ns, 82.3000 us/op
WorkloadResult   6: 1 op, 82500.00 ns, 82.5000 us/op
WorkloadResult   7: 1 op, 81900.00 ns, 81.9000 us/op
WorkloadResult   8: 1 op, 82400.00 ns, 82.4000 us/op
WorkloadResult   9: 1 op, 82400.00 ns, 82.4000 us/op
WorkloadResult  10: 1 op, 84100.00 ns, 84.1000 us/op
WorkloadResult  11: 1 op, 83200.00 ns, 83.2000 us/op
WorkloadResult  12: 1 op, 82600.00 ns, 82.6000 us/op
WorkloadResult  13: 1 op, 82400.00 ns, 82.4000 us/op
WorkloadResult  14: 1 op, 82200.00 ns, 82.2000 us/op

// AfterAll
// Benchmark Process 2516 has exited with code 0.

Mean = 82.550 μs, StdErr = 0.164 μs (0.20%), N = 14, StdDev = 0.615 μs
Min = 81.800 μs, Q1 = 82.225 μs, Median = 82.400 μs, Q3 = 82.825 μs, Max = 84.100 μs
IQR = 0.600 μs, LowerFence = 81.325 μs, UpperFence = 83.725 μs
ConfidenceInterval = [81.856 μs; 83.244 μs] (CI 99.9%), Margin = 0.694 μs (0.84% of Mean)
Skewness = 0.97, Kurtosis = 3.37, MValue = 2

// **************************
// Benchmark: LazySortedListBenchmark.LazySortedListRemove: Job-UZWZTH(InvocationCount=1, UnrollFactor=1) [N=1000]
// *** Execute ***
// Launch: 1 / 1
// Execute: dotnet "bf18d94d-7dda-48e8-a69f-531024b3e97e.dll" --benchmarkName "ConvenientCollections.Benchmarks.LazySortedListBenchmark.LazySortedListRemove(N: 1000)" --job "InvocationCount=1, UnrollFactor=1" --benchmarkId 5 in C:\Users\hacke\source\repos\CollectionBenchmarks\bin\Release\net6.0\bf18d94d-7dda-48e8-a69f-531024b3e97e\bin\Release\net6.0
// BeforeAnythingElse

// Benchmark Process Environment Information:
// Runtime=.NET 6.0.0 (6.0.21.52210), X64 RyuJIT
// GC=Concurrent Workstation
// Job: Job-PGBWGI(InvocationCount=1, UnrollFactor=1)

OverheadJitting  1: 1 op, 160800.00 ns, 160.8000 us/op
WorkloadJitting  1: 1 op, 3085800.00 ns, 3.0858 ms/op

OverheadWarmup   1: 1 op, 200.00 ns, 200.0000 ns/op
OverheadWarmup   2: 1 op, 100.00 ns, 100.0000 ns/op
OverheadWarmup   3: 1 op, 200.00 ns, 200.0000 ns/op
OverheadWarmup   4: 1 op, 200.00 ns, 200.0000 ns/op
OverheadWarmup   5: 1 op, 100.00 ns, 100.0000 ns/op
OverheadWarmup   6: 1 op, 100.00 ns, 100.0000 ns/op

OverheadActual   1: 1 op, 200.00 ns, 200.0000 ns/op
OverheadActual   2: 1 op, 100.00 ns, 100.0000 ns/op
OverheadActual   3: 1 op, 200.00 ns, 200.0000 ns/op
OverheadActual   4: 1 op, 100.00 ns, 100.0000 ns/op
OverheadActual   5: 1 op, 200.00 ns, 200.0000 ns/op
OverheadActual   6: 1 op, 200.00 ns, 200.0000 ns/op
OverheadActual   7: 1 op, 200.00 ns, 200.0000 ns/op
OverheadActual   8: 1 op, 100.00 ns, 100.0000 ns/op
OverheadActual   9: 1 op, 100.00 ns, 100.0000 ns/op
OverheadActual  10: 1 op, 100.00 ns, 100.0000 ns/op
OverheadActual  11: 1 op, 100.00 ns, 100.0000 ns/op
OverheadActual  12: 1 op, 200.00 ns, 200.0000 ns/op
OverheadActual  13: 1 op, 100.00 ns, 100.0000 ns/op
OverheadActual  14: 1 op, 200.00 ns, 200.0000 ns/op
OverheadActual  15: 1 op, 100.00 ns, 100.0000 ns/op
OverheadActual  16: 1 op, 200.00 ns, 200.0000 ns/op
OverheadActual  17: 1 op, 100.00 ns, 100.0000 ns/op
OverheadActual  18: 1 op, 100.00 ns, 100.0000 ns/op
OverheadActual  19: 1 op, 200.00 ns, 200.0000 ns/op
OverheadActual  20: 1 op, 200.00 ns, 200.0000 ns/op

WorkloadWarmup   1: 1 op, 72700.00 ns, 72.7000 us/op
WorkloadWarmup   2: 1 op, 58100.00 ns, 58.1000 us/op
WorkloadWarmup   3: 1 op, 58200.00 ns, 58.2000 us/op
WorkloadWarmup   4: 1 op, 58300.00 ns, 58.3000 us/op
WorkloadWarmup   5: 1 op, 57400.00 ns, 57.4000 us/op
WorkloadWarmup   6: 1 op, 56700.00 ns, 56.7000 us/op
WorkloadWarmup   7: 1 op, 71500.00 ns, 71.5000 us/op
WorkloadWarmup   8: 1 op, 62200.00 ns, 62.2000 us/op

// BeforeActualRun
WorkloadActual   1: 1 op, 57300.00 ns, 57.3000 us/op
WorkloadActual   2: 1 op, 57100.00 ns, 57.1000 us/op
WorkloadActual   3: 1 op, 71800.00 ns, 71.8000 us/op
WorkloadActual   4: 1 op, 71000.00 ns, 71.0000 us/op
WorkloadActual   5: 1 op, 59400.00 ns, 59.4000 us/op
WorkloadActual   6: 1 op, 56700.00 ns, 56.7000 us/op
WorkloadActual   7: 1 op, 56600.00 ns, 56.6000 us/op
WorkloadActual   8: 1 op, 59500.00 ns, 59.5000 us/op
WorkloadActual   9: 1 op, 56900.00 ns, 56.9000 us/op
WorkloadActual  10: 1 op, 57700.00 ns, 57.7000 us/op
WorkloadActual  11: 1 op, 57600.00 ns, 57.6000 us/op
WorkloadActual  12: 1 op, 77000.00 ns, 77.0000 us/op
WorkloadActual  13: 1 op, 67500.00 ns, 67.5000 us/op
WorkloadActual  14: 1 op, 70400.00 ns, 70.4000 us/op
WorkloadActual  15: 1 op, 64900.00 ns, 64.9000 us/op
WorkloadActual  16: 1 op, 57600.00 ns, 57.6000 us/op
WorkloadActual  17: 1 op, 57400.00 ns, 57.4000 us/op
WorkloadActual  18: 1 op, 57300.00 ns, 57.3000 us/op
WorkloadActual  19: 1 op, 57100.00 ns, 57.1000 us/op
WorkloadActual  20: 1 op, 57300.00 ns, 57.3000 us/op
WorkloadActual  21: 1 op, 57200.00 ns, 57.2000 us/op
WorkloadActual  22: 1 op, 57900.00 ns, 57.9000 us/op
WorkloadActual  23: 1 op, 60300.00 ns, 60.3000 us/op
WorkloadActual  24: 1 op, 57700.00 ns, 57.7000 us/op
WorkloadActual  25: 1 op, 57900.00 ns, 57.9000 us/op

// AfterActualRun
WorkloadResult   1: 1 op, 57150.00 ns, 57.1500 us/op
WorkloadResult   2: 1 op, 56950.00 ns, 56.9500 us/op
WorkloadResult   3: 1 op, 59250.00 ns, 59.2500 us/op
WorkloadResult   4: 1 op, 56550.00 ns, 56.5500 us/op
WorkloadResult   5: 1 op, 56450.00 ns, 56.4500 us/op
WorkloadResult   6: 1 op, 59350.00 ns, 59.3500 us/op
WorkloadResult   7: 1 op, 56750.00 ns, 56.7500 us/op
WorkloadResult   8: 1 op, 57550.00 ns, 57.5500 us/op
WorkloadResult   9: 1 op, 57450.00 ns, 57.4500 us/op
WorkloadResult  10: 1 op, 57450.00 ns, 57.4500 us/op
WorkloadResult  11: 1 op, 57250.00 ns, 57.2500 us/op
WorkloadResult  12: 1 op, 57150.00 ns, 57.1500 us/op
WorkloadResult  13: 1 op, 56950.00 ns, 56.9500 us/op
WorkloadResult  14: 1 op, 57150.00 ns, 57.1500 us/op
WorkloadResult  15: 1 op, 57050.00 ns, 57.0500 us/op
WorkloadResult  16: 1 op, 57750.00 ns, 57.7500 us/op
WorkloadResult  17: 1 op, 60150.00 ns, 60.1500 us/op
WorkloadResult  18: 1 op, 57550.00 ns, 57.5500 us/op
WorkloadResult  19: 1 op, 57750.00 ns, 57.7500 us/op

// AfterAll
// Benchmark Process 25120 has exited with code 0.

Mean = 57.561 μs, StdErr = 0.225 μs (0.39%), N = 19, StdDev = 0.983 μs
Min = 56.450 μs, Q1 = 57.000 μs, Median = 57.250 μs, Q3 = 57.650 μs, Max = 60.150 μs
IQR = 0.650 μs, LowerFence = 56.025 μs, UpperFence = 58.625 μs
ConfidenceInterval = [56.677 μs; 58.445 μs] (CI 99.9%), Margin = 0.884 μs (1.54% of Mean)
Skewness = 1.34, Kurtosis = 3.77, MValue = 2

// **************************
// Benchmark: LazySortedListBenchmark.SystemSortedListGet: Job-UZWZTH(InvocationCount=1, UnrollFactor=1) [N=5000]
// *** Execute ***
// Launch: 1 / 1
// Execute: dotnet "bf18d94d-7dda-48e8-a69f-531024b3e97e.dll" --benchmarkName "ConvenientCollections.Benchmarks.LazySortedListBenchmark.SystemSortedListGet(N: 5000)" --job "InvocationCount=1, UnrollFactor=1" --benchmarkId 6 in C:\Users\hacke\source\repos\CollectionBenchmarks\bin\Release\net6.0\bf18d94d-7dda-48e8-a69f-531024b3e97e\bin\Release\net6.0
// BeforeAnythingElse

// Benchmark Process Environment Information:
// Runtime=.NET 6.0.0 (6.0.21.52210), X64 RyuJIT
// GC=Concurrent Workstation
// Job: Job-OTUKZR(InvocationCount=1, UnrollFactor=1)

OverheadJitting  1: 1 op, 181300.00 ns, 181.3000 us/op
WorkloadJitting  1: 1 op, 483100.00 ns, 483.1000 us/op

OverheadWarmup   1: 1 op, 100.00 ns, 100.0000 ns/op
OverheadWarmup   2: 1 op, 200.00 ns, 200.0000 ns/op
OverheadWarmup   3: 1 op, 100.00 ns, 100.0000 ns/op
OverheadWarmup   4: 1 op, 100.00 ns, 100.0000 ns/op
OverheadWarmup   5: 1 op, 200.00 ns, 200.0000 ns/op

OverheadActual   1: 1 op, 200.00 ns, 200.0000 ns/op
OverheadActual   2: 1 op, 200.00 ns, 200.0000 ns/op
OverheadActual   3: 1 op, 100.00 ns, 100.0000 ns/op
OverheadActual   4: 1 op, 200.00 ns, 200.0000 ns/op
OverheadActual   5: 1 op, 200.00 ns, 200.0000 ns/op
OverheadActual   6: 1 op, 200.00 ns, 200.0000 ns/op
OverheadActual   7: 1 op, 100.00 ns, 100.0000 ns/op
OverheadActual   8: 1 op, 100.00 ns, 100.0000 ns/op
OverheadActual   9: 1 op, 100.00 ns, 100.0000 ns/op
OverheadActual  10: 1 op, 100.00 ns, 100.0000 ns/op
OverheadActual  11: 1 op, 200.00 ns, 200.0000 ns/op
OverheadActual  12: 1 op, 100.00 ns, 100.0000 ns/op
OverheadActual  13: 1 op, 100.00 ns, 100.0000 ns/op
OverheadActual  14: 1 op, 100.00 ns, 100.0000 ns/op
OverheadActual  15: 1 op, 100.00 ns, 100.0000 ns/op
OverheadActual  16: 1 op, 100.00 ns, 100.0000 ns/op
OverheadActual  17: 1 op, 100.00 ns, 100.0000 ns/op
OverheadActual  18: 1 op, 200.00 ns, 200.0000 ns/op
OverheadActual  19: 1 op, 200.00 ns, 200.0000 ns/op
OverheadActual  20: 1 op, 100.00 ns, 100.0000 ns/op

WorkloadWarmup   1: 1 op, 199500.00 ns, 199.5000 us/op
WorkloadWarmup   2: 1 op, 213000.00 ns, 213.0000 us/op
WorkloadWarmup   3: 1 op, 193500.00 ns, 193.5000 us/op
WorkloadWarmup   4: 1 op, 193700.00 ns, 193.7000 us/op
WorkloadWarmup   5: 1 op, 225700.00 ns, 225.7000 us/op
WorkloadWarmup   6: 1 op, 213100.00 ns, 213.1000 us/op

// BeforeActualRun
WorkloadActual   1: 1 op, 244100.00 ns, 244.1000 us/op
WorkloadActual   2: 1 op, 189400.00 ns, 189.4000 us/op
WorkloadActual   3: 1 op, 205000.00 ns, 205.0000 us/op
WorkloadActual   4: 1 op, 203800.00 ns, 203.8000 us/op
WorkloadActual   5: 1 op, 211200.00 ns, 211.2000 us/op
WorkloadActual   6: 1 op, 206500.00 ns, 206.5000 us/op
WorkloadActual   7: 1 op, 209800.00 ns, 209.8000 us/op
WorkloadActual   8: 1 op, 208300.00 ns, 208.3000 us/op
WorkloadActual   9: 1 op, 223400.00 ns, 223.4000 us/op
WorkloadActual  10: 1 op, 216300.00 ns, 216.3000 us/op
WorkloadActual  11: 1 op, 198700.00 ns, 198.7000 us/op
WorkloadActual  12: 1 op, 203200.00 ns, 203.2000 us/op
WorkloadActual  13: 1 op, 207800.00 ns, 207.8000 us/op
WorkloadActual  14: 1 op, 226100.00 ns, 226.1000 us/op
WorkloadActual  15: 1 op, 207600.00 ns, 207.6000 us/op
WorkloadActual  16: 1 op, 224400.00 ns, 224.4000 us/op
WorkloadActual  17: 1 op, 207400.00 ns, 207.4000 us/op
WorkloadActual  18: 1 op, 219600.00 ns, 219.6000 us/op
WorkloadActual  19: 1 op, 214400.00 ns, 214.4000 us/op
WorkloadActual  20: 1 op, 207400.00 ns, 207.4000 us/op
WorkloadActual  21: 1 op, 200500.00 ns, 200.5000 us/op
WorkloadActual  22: 1 op, 220100.00 ns, 220.1000 us/op
WorkloadActual  23: 1 op, 210500.00 ns, 210.5000 us/op
WorkloadActual  24: 1 op, 247300.00 ns, 247.3000 us/op
WorkloadActual  25: 1 op, 259800.00 ns, 259.8000 us/op
WorkloadActual  26: 1 op, 200800.00 ns, 200.8000 us/op
WorkloadActual  27: 1 op, 224000.00 ns, 224.0000 us/op
WorkloadActual  28: 1 op, 192500.00 ns, 192.5000 us/op
WorkloadActual  29: 1 op, 195200.00 ns, 195.2000 us/op
WorkloadActual  30: 1 op, 220300.00 ns, 220.3000 us/op
WorkloadActual  31: 1 op, 222900.00 ns, 222.9000 us/op
WorkloadActual  32: 1 op, 197800.00 ns, 197.8000 us/op
WorkloadActual  33: 1 op, 214700.00 ns, 214.7000 us/op
WorkloadActual  34: 1 op, 225100.00 ns, 225.1000 us/op
WorkloadActual  35: 1 op, 205600.00 ns, 205.6000 us/op
WorkloadActual  36: 1 op, 223600.00 ns, 223.6000 us/op
WorkloadActual  37: 1 op, 192400.00 ns, 192.4000 us/op
WorkloadActual  38: 1 op, 204300.00 ns, 204.3000 us/op
WorkloadActual  39: 1 op, 214800.00 ns, 214.8000 us/op
WorkloadActual  40: 1 op, 198100.00 ns, 198.1000 us/op
WorkloadActual  41: 1 op, 199800.00 ns, 199.8000 us/op
WorkloadActual  42: 1 op, 226900.00 ns, 226.9000 us/op
WorkloadActual  43: 1 op, 200300.00 ns, 200.3000 us/op
WorkloadActual  44: 1 op, 222100.00 ns, 222.1000 us/op
WorkloadActual  45: 1 op, 227600.00 ns, 227.6000 us/op
WorkloadActual  46: 1 op, 204900.00 ns, 204.9000 us/op
WorkloadActual  47: 1 op, 223600.00 ns, 223.6000 us/op
WorkloadActual  48: 1 op, 245100.00 ns, 245.1000 us/op
WorkloadActual  49: 1 op, 275200.00 ns, 275.2000 us/op
WorkloadActual  50: 1 op, 203500.00 ns, 203.5000 us/op
WorkloadActual  51: 1 op, 213900.00 ns, 213.9000 us/op
WorkloadActual  52: 1 op, 259000.00 ns, 259.0000 us/op
WorkloadActual  53: 1 op, 203400.00 ns, 203.4000 us/op
WorkloadActual  54: 1 op, 196100.00 ns, 196.1000 us/op
WorkloadActual  55: 1 op, 221000.00 ns, 221.0000 us/op
WorkloadActual  56: 1 op, 205500.00 ns, 205.5000 us/op
WorkloadActual  57: 1 op, 207100.00 ns, 207.1000 us/op
WorkloadActual  58: 1 op, 203400.00 ns, 203.4000 us/op
WorkloadActual  59: 1 op, 201700.00 ns, 201.7000 us/op
WorkloadActual  60: 1 op, 209800.00 ns, 209.8000 us/op
WorkloadActual  61: 1 op, 226500.00 ns, 226.5000 us/op
WorkloadActual  62: 1 op, 211300.00 ns, 211.3000 us/op
WorkloadActual  63: 1 op, 205100.00 ns, 205.1000 us/op
WorkloadActual  64: 1 op, 221400.00 ns, 221.4000 us/op
WorkloadActual  65: 1 op, 223000.00 ns, 223.0000 us/op
WorkloadActual  66: 1 op, 229700.00 ns, 229.7000 us/op
WorkloadActual  67: 1 op, 205600.00 ns, 205.6000 us/op
WorkloadActual  68: 1 op, 203500.00 ns, 203.5000 us/op
WorkloadActual  69: 1 op, 208600.00 ns, 208.6000 us/op
WorkloadActual  70: 1 op, 220200.00 ns, 220.2000 us/op
WorkloadActual  71: 1 op, 214100.00 ns, 214.1000 us/op
WorkloadActual  72: 1 op, 215500.00 ns, 215.5000 us/op
WorkloadActual  73: 1 op, 196800.00 ns, 196.8000 us/op
WorkloadActual  74: 1 op, 227600.00 ns, 227.6000 us/op
WorkloadActual  75: 1 op, 209500.00 ns, 209.5000 us/op
WorkloadActual  76: 1 op, 223200.00 ns, 223.2000 us/op
WorkloadActual  77: 1 op, 210100.00 ns, 210.1000 us/op
WorkloadActual  78: 1 op, 222300.00 ns, 222.3000 us/op
WorkloadActual  79: 1 op, 190600.00 ns, 190.6000 us/op
WorkloadActual  80: 1 op, 201500.00 ns, 201.5000 us/op
WorkloadActual  81: 1 op, 197400.00 ns, 197.4000 us/op
WorkloadActual  82: 1 op, 206800.00 ns, 206.8000 us/op
WorkloadActual  83: 1 op, 209300.00 ns, 209.3000 us/op
WorkloadActual  84: 1 op, 205100.00 ns, 205.1000 us/op
WorkloadActual  85: 1 op, 193700.00 ns, 193.7000 us/op
WorkloadActual  86: 1 op, 216300.00 ns, 216.3000 us/op
WorkloadActual  87: 1 op, 195300.00 ns, 195.3000 us/op
WorkloadActual  88: 1 op, 208500.00 ns, 208.5000 us/op
WorkloadActual  89: 1 op, 203800.00 ns, 203.8000 us/op
WorkloadActual  90: 1 op, 202900.00 ns, 202.9000 us/op
WorkloadActual  91: 1 op, 220200.00 ns, 220.2000 us/op
WorkloadActual  92: 1 op, 198000.00 ns, 198.0000 us/op
WorkloadActual  93: 1 op, 204300.00 ns, 204.3000 us/op
WorkloadActual  94: 1 op, 206200.00 ns, 206.2000 us/op
WorkloadActual  95: 1 op, 256500.00 ns, 256.5000 us/op
WorkloadActual  96: 1 op, 205200.00 ns, 205.2000 us/op
WorkloadActual  97: 1 op, 224800.00 ns, 224.8000 us/op

// AfterActualRun
WorkloadResult   1: 1 op, 244000.00 ns, 244.0000 us/op
WorkloadResult   2: 1 op, 189300.00 ns, 189.3000 us/op
WorkloadResult   3: 1 op, 204900.00 ns, 204.9000 us/op
WorkloadResult   4: 1 op, 203700.00 ns, 203.7000 us/op
WorkloadResult   5: 1 op, 211100.00 ns, 211.1000 us/op
WorkloadResult   6: 1 op, 206400.00 ns, 206.4000 us/op
WorkloadResult   7: 1 op, 209700.00 ns, 209.7000 us/op
WorkloadResult   8: 1 op, 208200.00 ns, 208.2000 us/op
WorkloadResult   9: 1 op, 223300.00 ns, 223.3000 us/op
WorkloadResult  10: 1 op, 216200.00 ns, 216.2000 us/op
WorkloadResult  11: 1 op, 198600.00 ns, 198.6000 us/op
WorkloadResult  12: 1 op, 203100.00 ns, 203.1000 us/op
WorkloadResult  13: 1 op, 207700.00 ns, 207.7000 us/op
WorkloadResult  14: 1 op, 226000.00 ns, 226.0000 us/op
WorkloadResult  15: 1 op, 207500.00 ns, 207.5000 us/op
WorkloadResult  16: 1 op, 224300.00 ns, 224.3000 us/op
WorkloadResult  17: 1 op, 207300.00 ns, 207.3000 us/op
WorkloadResult  18: 1 op, 219500.00 ns, 219.5000 us/op
WorkloadResult  19: 1 op, 214300.00 ns, 214.3000 us/op
WorkloadResult  20: 1 op, 207300.00 ns, 207.3000 us/op
WorkloadResult  21: 1 op, 200400.00 ns, 200.4000 us/op
WorkloadResult  22: 1 op, 220000.00 ns, 220.0000 us/op
WorkloadResult  23: 1 op, 210400.00 ns, 210.4000 us/op
WorkloadResult  24: 1 op, 247200.00 ns, 247.2000 us/op
WorkloadResult  25: 1 op, 200700.00 ns, 200.7000 us/op
WorkloadResult  26: 1 op, 223900.00 ns, 223.9000 us/op
WorkloadResult  27: 1 op, 192400.00 ns, 192.4000 us/op
WorkloadResult  28: 1 op, 195100.00 ns, 195.1000 us/op
WorkloadResult  29: 1 op, 220200.00 ns, 220.2000 us/op
WorkloadResult  30: 1 op, 222800.00 ns, 222.8000 us/op
WorkloadResult  31: 1 op, 197700.00 ns, 197.7000 us/op
WorkloadResult  32: 1 op, 214600.00 ns, 214.6000 us/op
WorkloadResult  33: 1 op, 225000.00 ns, 225.0000 us/op
WorkloadResult  34: 1 op, 205500.00 ns, 205.5000 us/op
WorkloadResult  35: 1 op, 223500.00 ns, 223.5000 us/op
WorkloadResult  36: 1 op, 192300.00 ns, 192.3000 us/op
WorkloadResult  37: 1 op, 204200.00 ns, 204.2000 us/op
WorkloadResult  38: 1 op, 214700.00 ns, 214.7000 us/op
WorkloadResult  39: 1 op, 198000.00 ns, 198.0000 us/op
WorkloadResult  40: 1 op, 199700.00 ns, 199.7000 us/op
WorkloadResult  41: 1 op, 226800.00 ns, 226.8000 us/op
WorkloadResult  42: 1 op, 200200.00 ns, 200.2000 us/op
WorkloadResult  43: 1 op, 222000.00 ns, 222.0000 us/op
WorkloadResult  44: 1 op, 227500.00 ns, 227.5000 us/op
WorkloadResult  45: 1 op, 204800.00 ns, 204.8000 us/op
WorkloadResult  46: 1 op, 223500.00 ns, 223.5000 us/op
WorkloadResult  47: 1 op, 245000.00 ns, 245.0000 us/op
WorkloadResult  48: 1 op, 203400.00 ns, 203.4000 us/op
WorkloadResult  49: 1 op, 213800.00 ns, 213.8000 us/op
WorkloadResult  50: 1 op, 203300.00 ns, 203.3000 us/op
WorkloadResult  51: 1 op, 196000.00 ns, 196.0000 us/op
WorkloadResult  52: 1 op, 220900.00 ns, 220.9000 us/op
WorkloadResult  53: 1 op, 205400.00 ns, 205.4000 us/op
WorkloadResult  54: 1 op, 207000.00 ns, 207.0000 us/op
WorkloadResult  55: 1 op, 203300.00 ns, 203.3000 us/op
WorkloadResult  56: 1 op, 201600.00 ns, 201.6000 us/op
WorkloadResult  57: 1 op, 209700.00 ns, 209.7000 us/op
WorkloadResult  58: 1 op, 226400.00 ns, 226.4000 us/op
WorkloadResult  59: 1 op, 211200.00 ns, 211.2000 us/op
WorkloadResult  60: 1 op, 205000.00 ns, 205.0000 us/op
WorkloadResult  61: 1 op, 221300.00 ns, 221.3000 us/op
WorkloadResult  62: 1 op, 222900.00 ns, 222.9000 us/op
WorkloadResult  63: 1 op, 229600.00 ns, 229.6000 us/op
WorkloadResult  64: 1 op, 205500.00 ns, 205.5000 us/op
WorkloadResult  65: 1 op, 203400.00 ns, 203.4000 us/op
WorkloadResult  66: 1 op, 208500.00 ns, 208.5000 us/op
WorkloadResult  67: 1 op, 220100.00 ns, 220.1000 us/op
WorkloadResult  68: 1 op, 214000.00 ns, 214.0000 us/op
WorkloadResult  69: 1 op, 215400.00 ns, 215.4000 us/op
WorkloadResult  70: 1 op, 196700.00 ns, 196.7000 us/op
WorkloadResult  71: 1 op, 227500.00 ns, 227.5000 us/op
WorkloadResult  72: 1 op, 209400.00 ns, 209.4000 us/op
WorkloadResult  73: 1 op, 223100.00 ns, 223.1000 us/op
WorkloadResult  74: 1 op, 210000.00 ns, 210.0000 us/op
WorkloadResult  75: 1 op, 222200.00 ns, 222.2000 us/op
WorkloadResult  76: 1 op, 190500.00 ns, 190.5000 us/op
WorkloadResult  77: 1 op, 201400.00 ns, 201.4000 us/op
WorkloadResult  78: 1 op, 197300.00 ns, 197.3000 us/op
WorkloadResult  79: 1 op, 206700.00 ns, 206.7000 us/op
WorkloadResult  80: 1 op, 209200.00 ns, 209.2000 us/op
WorkloadResult  81: 1 op, 205000.00 ns, 205.0000 us/op
WorkloadResult  82: 1 op, 193600.00 ns, 193.6000 us/op
WorkloadResult  83: 1 op, 216200.00 ns, 216.2000 us/op
WorkloadResult  84: 1 op, 195200.00 ns, 195.2000 us/op
WorkloadResult  85: 1 op, 208400.00 ns, 208.4000 us/op
WorkloadResult  86: 1 op, 203700.00 ns, 203.7000 us/op
WorkloadResult  87: 1 op, 202800.00 ns, 202.8000 us/op
WorkloadResult  88: 1 op, 220100.00 ns, 220.1000 us/op
WorkloadResult  89: 1 op, 197900.00 ns, 197.9000 us/op
WorkloadResult  90: 1 op, 204200.00 ns, 204.2000 us/op
WorkloadResult  91: 1 op, 206100.00 ns, 206.1000 us/op
WorkloadResult  92: 1 op, 205100.00 ns, 205.1000 us/op
WorkloadResult  93: 1 op, 224700.00 ns, 224.7000 us/op

// AfterAll
// Benchmark Process 21700 has exited with code 0.

Mean = 210.916 μs, StdErr = 1.236 μs (0.59%), N = 93, StdDev = 11.923 μs
Min = 189.300 μs, Q1 = 203.300 μs, Median = 208.200 μs, Q3 = 220.200 μs, Max = 247.200 μs
IQR = 16.900 μs, LowerFence = 177.950 μs, UpperFence = 245.550 μs
ConfidenceInterval = [206.713 μs; 215.119 μs] (CI 99.9%), Margin = 4.203 μs (1.99% of Mean)
Skewness = 0.67, Kurtosis = 3.34, MValue = 2.67

// **************************
// Benchmark: LazySortedListBenchmark.LazySortedListGet: Job-UZWZTH(InvocationCount=1, UnrollFactor=1) [N=5000]
// *** Execute ***
// Launch: 1 / 1
// Execute: dotnet "bf18d94d-7dda-48e8-a69f-531024b3e97e.dll" --benchmarkName "ConvenientCollections.Benchmarks.LazySortedListBenchmark.LazySortedListGet(N: 5000)" --job "InvocationCount=1, UnrollFactor=1" --benchmarkId 7 in C:\Users\hacke\source\repos\CollectionBenchmarks\bin\Release\net6.0\bf18d94d-7dda-48e8-a69f-531024b3e97e\bin\Release\net6.0
// BeforeAnythingElse

// Benchmark Process Environment Information:
// Runtime=.NET 6.0.0 (6.0.21.52210), X64 RyuJIT
// GC=Concurrent Workstation
// Job: Job-VMOROT(InvocationCount=1, UnrollFactor=1)

OverheadJitting  1: 1 op, 186600.00 ns, 186.6000 us/op
WorkloadJitting  1: 1 op, 3511800.00 ns, 3.5118 ms/op

OverheadWarmup   1: 1 op, 200.00 ns, 200.0000 ns/op
OverheadWarmup   2: 1 op, 100.00 ns, 100.0000 ns/op
OverheadWarmup   3: 1 op, 200.00 ns, 200.0000 ns/op
OverheadWarmup   4: 1 op, 200.00 ns, 200.0000 ns/op
OverheadWarmup   5: 1 op, 200.00 ns, 200.0000 ns/op
OverheadWarmup   6: 1 op, 100.00 ns, 100.0000 ns/op

OverheadActual   1: 1 op, 100.00 ns, 100.0000 ns/op
OverheadActual   2: 1 op, 200.00 ns, 200.0000 ns/op
OverheadActual   3: 1 op, 100.00 ns, 100.0000 ns/op
OverheadActual   4: 1 op, 100.00 ns, 100.0000 ns/op
OverheadActual   5: 1 op, 200.00 ns, 200.0000 ns/op
OverheadActual   6: 1 op, 200.00 ns, 200.0000 ns/op
OverheadActual   7: 1 op, 100.00 ns, 100.0000 ns/op
OverheadActual   8: 1 op, 100.00 ns, 100.0000 ns/op
OverheadActual   9: 1 op, 100.00 ns, 100.0000 ns/op
OverheadActual  10: 1 op, 200.00 ns, 200.0000 ns/op
OverheadActual  11: 1 op, 100.00 ns, 100.0000 ns/op
OverheadActual  12: 1 op, 200.00 ns, 200.0000 ns/op
OverheadActual  13: 1 op, 100.00 ns, 100.0000 ns/op
OverheadActual  14: 1 op, 200.00 ns, 200.0000 ns/op
OverheadActual  15: 1 op, 200.00 ns, 200.0000 ns/op
OverheadActual  16: 1 op, 100.00 ns, 100.0000 ns/op
OverheadActual  17: 1 op, 100.00 ns, 100.0000 ns/op
OverheadActual  18: 1 op, 200.00 ns, 200.0000 ns/op
OverheadActual  19: 1 op, 200.00 ns, 200.0000 ns/op
OverheadActual  20: 1 op, 100.00 ns, 100.0000 ns/op

WorkloadWarmup   1: 1 op, 158300.00 ns, 158.3000 us/op
WorkloadWarmup   2: 1 op, 156000.00 ns, 156.0000 us/op
WorkloadWarmup   3: 1 op, 158700.00 ns, 158.7000 us/op
WorkloadWarmup   4: 1 op, 164200.00 ns, 164.2000 us/op
WorkloadWarmup   5: 1 op, 156500.00 ns, 156.5000 us/op
WorkloadWarmup   6: 1 op, 156200.00 ns, 156.2000 us/op
WorkloadWarmup   7: 1 op, 162400.00 ns, 162.4000 us/op
WorkloadWarmup   8: 1 op, 170400.00 ns, 170.4000 us/op
WorkloadWarmup   9: 1 op, 162000.00 ns, 162.0000 us/op

// BeforeActualRun
WorkloadActual   1: 1 op, 162500.00 ns, 162.5000 us/op
WorkloadActual   2: 1 op, 158700.00 ns, 158.7000 us/op
WorkloadActual   3: 1 op, 198700.00 ns, 198.7000 us/op
WorkloadActual   4: 1 op, 169000.00 ns, 169.0000 us/op
WorkloadActual   5: 1 op, 158200.00 ns, 158.2000 us/op
WorkloadActual   6: 1 op, 168200.00 ns, 168.2000 us/op
WorkloadActual   7: 1 op, 159200.00 ns, 159.2000 us/op
WorkloadActual   8: 1 op, 165700.00 ns, 165.7000 us/op
WorkloadActual   9: 1 op, 161800.00 ns, 161.8000 us/op
WorkloadActual  10: 1 op, 165300.00 ns, 165.3000 us/op
WorkloadActual  11: 1 op, 163000.00 ns, 163.0000 us/op
WorkloadActual  12: 1 op, 167800.00 ns, 167.8000 us/op
WorkloadActual  13: 1 op, 164600.00 ns, 164.6000 us/op
WorkloadActual  14: 1 op, 161700.00 ns, 161.7000 us/op
WorkloadActual  15: 1 op, 164100.00 ns, 164.1000 us/op
WorkloadActual  16: 1 op, 165000.00 ns, 165.0000 us/op
WorkloadActual  17: 1 op, 165700.00 ns, 165.7000 us/op
WorkloadActual  18: 1 op, 160400.00 ns, 160.4000 us/op

// AfterActualRun
WorkloadResult   1: 1 op, 162400.00 ns, 162.4000 us/op
WorkloadResult   2: 1 op, 158600.00 ns, 158.6000 us/op
WorkloadResult   3: 1 op, 168900.00 ns, 168.9000 us/op
WorkloadResult   4: 1 op, 158100.00 ns, 158.1000 us/op
WorkloadResult   5: 1 op, 168100.00 ns, 168.1000 us/op
WorkloadResult   6: 1 op, 159100.00 ns, 159.1000 us/op
WorkloadResult   7: 1 op, 165600.00 ns, 165.6000 us/op
WorkloadResult   8: 1 op, 161700.00 ns, 161.7000 us/op
WorkloadResult   9: 1 op, 165200.00 ns, 165.2000 us/op
WorkloadResult  10: 1 op, 162900.00 ns, 162.9000 us/op
WorkloadResult  11: 1 op, 167700.00 ns, 167.7000 us/op
WorkloadResult  12: 1 op, 164500.00 ns, 164.5000 us/op
WorkloadResult  13: 1 op, 161600.00 ns, 161.6000 us/op
WorkloadResult  14: 1 op, 164000.00 ns, 164.0000 us/op
WorkloadResult  15: 1 op, 164900.00 ns, 164.9000 us/op
WorkloadResult  16: 1 op, 165600.00 ns, 165.6000 us/op
WorkloadResult  17: 1 op, 160300.00 ns, 160.3000 us/op

// AfterAll
// Benchmark Process 3156 has exited with code 0.

Mean = 163.482 μs, StdErr = 0.800 μs (0.49%), N = 17, StdDev = 3.298 μs
Min = 158.100 μs, Q1 = 161.600 μs, Median = 164.000 μs, Q3 = 165.600 μs, Max = 168.900 μs
IQR = 4.000 μs, LowerFence = 155.600 μs, UpperFence = 171.600 μs
ConfidenceInterval = [160.270 μs; 166.694 μs] (CI 99.9%), Margin = 3.212 μs (1.96% of Mean)
Skewness = -0.07, Kurtosis = 1.78, MValue = 2

// **************************
// Benchmark: LazySortedListBenchmark.SystemSortedListAdd: Job-UZWZTH(InvocationCount=1, UnrollFactor=1) [N=5000]
// *** Execute ***
// Launch: 1 / 1
// Execute: dotnet "bf18d94d-7dda-48e8-a69f-531024b3e97e.dll" --benchmarkName "ConvenientCollections.Benchmarks.LazySortedListBenchmark.SystemSortedListAdd(N: 5000)" --job "InvocationCount=1, UnrollFactor=1" --benchmarkId 8 in C:\Users\hacke\source\repos\CollectionBenchmarks\bin\Release\net6.0\bf18d94d-7dda-48e8-a69f-531024b3e97e\bin\Release\net6.0
// BeforeAnythingElse

// Benchmark Process Environment Information:
// Runtime=.NET 6.0.0 (6.0.21.52210), X64 RyuJIT
// GC=Concurrent Workstation
// Job: Job-YESHZL(InvocationCount=1, UnrollFactor=1)

OverheadJitting  1: 1 op, 152200.00 ns, 152.2000 us/op
WorkloadJitting  1: 1 op, 339100.00 ns, 339.1000 us/op

OverheadWarmup   1: 1 op, 200.00 ns, 200.0000 ns/op
OverheadWarmup   2: 1 op, 200.00 ns, 200.0000 ns/op
OverheadWarmup   3: 1 op, 100.00 ns, 100.0000 ns/op
OverheadWarmup   4: 1 op, 100.00 ns, 100.0000 ns/op
OverheadWarmup   5: 1 op, 100.00 ns, 100.0000 ns/op

OverheadActual   1: 1 op, 100.00 ns, 100.0000 ns/op
OverheadActual   2: 1 op, 100.00 ns, 100.0000 ns/op
OverheadActual   3: 1 op, 100.00 ns, 100.0000 ns/op
OverheadActual   4: 1 op, 100.00 ns, 100.0000 ns/op
OverheadActual   5: 1 op, 100.00 ns, 100.0000 ns/op
OverheadActual   6: 1 op, 200.00 ns, 200.0000 ns/op
OverheadActual   7: 1 op, 100.00 ns, 100.0000 ns/op
OverheadActual   8: 1 op, 100.00 ns, 100.0000 ns/op
OverheadActual   9: 1 op, 100.00 ns, 100.0000 ns/op
OverheadActual  10: 1 op, 200.00 ns, 200.0000 ns/op
OverheadActual  11: 1 op, 100.00 ns, 100.0000 ns/op
OverheadActual  12: 1 op, 100.00 ns, 100.0000 ns/op
OverheadActual  13: 1 op, 100.00 ns, 100.0000 ns/op
OverheadActual  14: 1 op, 100.00 ns, 100.0000 ns/op
OverheadActual  15: 1 op, 100.00 ns, 100.0000 ns/op

WorkloadWarmup   1: 1 op, 117200.00 ns, 117.2000 us/op
WorkloadWarmup   2: 1 op, 136700.00 ns, 136.7000 us/op
WorkloadWarmup   3: 1 op, 117000.00 ns, 117.0000 us/op
WorkloadWarmup   4: 1 op, 117000.00 ns, 117.0000 us/op
WorkloadWarmup   5: 1 op, 115900.00 ns, 115.9000 us/op
WorkloadWarmup   6: 1 op, 116300.00 ns, 116.3000 us/op

// BeforeActualRun
WorkloadActual   1: 1 op, 117300.00 ns, 117.3000 us/op
WorkloadActual   2: 1 op, 116900.00 ns, 116.9000 us/op
WorkloadActual   3: 1 op, 115100.00 ns, 115.1000 us/op
WorkloadActual   4: 1 op, 121300.00 ns, 121.3000 us/op
WorkloadActual   5: 1 op, 117000.00 ns, 117.0000 us/op
WorkloadActual   6: 1 op, 116900.00 ns, 116.9000 us/op
WorkloadActual   7: 1 op, 116800.00 ns, 116.8000 us/op
WorkloadActual   8: 1 op, 117000.00 ns, 117.0000 us/op
WorkloadActual   9: 1 op, 115700.00 ns, 115.7000 us/op
WorkloadActual  10: 1 op, 115700.00 ns, 115.7000 us/op
WorkloadActual  11: 1 op, 115700.00 ns, 115.7000 us/op
WorkloadActual  12: 1 op, 117000.00 ns, 117.0000 us/op
WorkloadActual  13: 1 op, 116900.00 ns, 116.9000 us/op
WorkloadActual  14: 1 op, 117000.00 ns, 117.0000 us/op
WorkloadActual  15: 1 op, 116900.00 ns, 116.9000 us/op

// AfterActualRun
WorkloadResult   1: 1 op, 117200.00 ns, 117.2000 us/op
WorkloadResult   2: 1 op, 116800.00 ns, 116.8000 us/op
WorkloadResult   3: 1 op, 115000.00 ns, 115.0000 us/op
WorkloadResult   4: 1 op, 116900.00 ns, 116.9000 us/op
WorkloadResult   5: 1 op, 116800.00 ns, 116.8000 us/op
WorkloadResult   6: 1 op, 116700.00 ns, 116.7000 us/op
WorkloadResult   7: 1 op, 116900.00 ns, 116.9000 us/op
WorkloadResult   8: 1 op, 115600.00 ns, 115.6000 us/op
WorkloadResult   9: 1 op, 115600.00 ns, 115.6000 us/op
WorkloadResult  10: 1 op, 115600.00 ns, 115.6000 us/op
WorkloadResult  11: 1 op, 116900.00 ns, 116.9000 us/op
WorkloadResult  12: 1 op, 116800.00 ns, 116.8000 us/op
WorkloadResult  13: 1 op, 116900.00 ns, 116.9000 us/op
WorkloadResult  14: 1 op, 116800.00 ns, 116.8000 us/op

// AfterAll
// Benchmark Process 23248 has exited with code 0.

Mean = 116.464 μs, StdErr = 0.184 μs (0.16%), N = 14, StdDev = 0.690 μs
Min = 115.000 μs, Q1 = 115.875 μs, Median = 116.800 μs, Q3 = 116.900 μs, Max = 117.200 μs
IQR = 1.025 μs, LowerFence = 114.338 μs, UpperFence = 118.438 μs
ConfidenceInterval = [115.686 μs; 117.243 μs] (CI 99.9%), Margin = 0.779 μs (0.67% of Mean)
Skewness = -0.91, Kurtosis = 2.13, MValue = 2

// **************************
// Benchmark: LazySortedListBenchmark.LazySortedListAdd: Job-UZWZTH(InvocationCount=1, UnrollFactor=1) [N=5000]
// *** Execute ***
// Launch: 1 / 1
// Execute: dotnet "bf18d94d-7dda-48e8-a69f-531024b3e97e.dll" --benchmarkName "ConvenientCollections.Benchmarks.LazySortedListBenchmark.LazySortedListAdd(N: 5000)" --job "InvocationCount=1, UnrollFactor=1" --benchmarkId 9 in C:\Users\hacke\source\repos\CollectionBenchmarks\bin\Release\net6.0\bf18d94d-7dda-48e8-a69f-531024b3e97e\bin\Release\net6.0
// BeforeAnythingElse

// Benchmark Process Environment Information:
// Runtime=.NET 6.0.0 (6.0.21.52210), X64 RyuJIT
// GC=Concurrent Workstation
// Job: Job-CWEZVC(InvocationCount=1, UnrollFactor=1)

OverheadJitting  1: 1 op, 139300.00 ns, 139.3000 us/op
WorkloadJitting  1: 1 op, 365500.00 ns, 365.5000 us/op

OverheadWarmup   1: 1 op, 100.00 ns, 100.0000 ns/op
OverheadWarmup   2: 1 op, 200.00 ns, 200.0000 ns/op
OverheadWarmup   3: 1 op, 100.00 ns, 100.0000 ns/op
OverheadWarmup   4: 1 op, 100.00 ns, 100.0000 ns/op
OverheadWarmup   5: 1 op, 100.00 ns, 100.0000 ns/op

OverheadActual   1: 1 op, 100.00 ns, 100.0000 ns/op
OverheadActual   2: 1 op, 100.00 ns, 100.0000 ns/op
OverheadActual   3: 1 op, 200.00 ns, 200.0000 ns/op
OverheadActual   4: 1 op, 100.00 ns, 100.0000 ns/op
OverheadActual   5: 1 op, 200.00 ns, 200.0000 ns/op
OverheadActual   6: 1 op, 200.00 ns, 200.0000 ns/op
OverheadActual   7: 1 op, 100.00 ns, 100.0000 ns/op
OverheadActual   8: 1 op, 200.00 ns, 200.0000 ns/op
OverheadActual   9: 1 op, 100.00 ns, 100.0000 ns/op
OverheadActual  10: 1 op, 200.00 ns, 200.0000 ns/op
OverheadActual  11: 1 op, 200.00 ns, 200.0000 ns/op
OverheadActual  12: 1 op, 100.00 ns, 100.0000 ns/op
OverheadActual  13: 1 op, 100.00 ns, 100.0000 ns/op
OverheadActual  14: 1 op, 100.00 ns, 100.0000 ns/op
OverheadActual  15: 1 op, 100.00 ns, 100.0000 ns/op
OverheadActual  16: 1 op, 100.00 ns, 100.0000 ns/op
OverheadActual  17: 1 op, 100.00 ns, 100.0000 ns/op
OverheadActual  18: 1 op, 100.00 ns, 100.0000 ns/op
OverheadActual  19: 1 op, 100.00 ns, 100.0000 ns/op
OverheadActual  20: 1 op, 200.00 ns, 200.0000 ns/op

WorkloadWarmup   1: 1 op, 6500.00 ns, 6.5000 us/op
WorkloadWarmup   2: 1 op, 7000.00 ns, 7.0000 us/op
WorkloadWarmup   3: 1 op, 7200.00 ns, 7.2000 us/op
WorkloadWarmup   4: 1 op, 7300.00 ns, 7.3000 us/op
WorkloadWarmup   5: 1 op, 7100.00 ns, 7.1000 us/op
WorkloadWarmup   6: 1 op, 6300.00 ns, 6.3000 us/op
WorkloadWarmup   7: 1 op, 6200.00 ns, 6.2000 us/op
WorkloadWarmup   8: 1 op, 6300.00 ns, 6.3000 us/op
WorkloadWarmup   9: 1 op, 6300.00 ns, 6.3000 us/op

// BeforeActualRun
WorkloadActual   1: 1 op, 7500.00 ns, 7.5000 us/op
WorkloadActual   2: 1 op, 6400.00 ns, 6.4000 us/op
WorkloadActual   3: 1 op, 6400.00 ns, 6.4000 us/op
WorkloadActual   4: 1 op, 6300.00 ns, 6.3000 us/op
WorkloadActual   5: 1 op, 6700.00 ns, 6.7000 us/op
WorkloadActual   6: 1 op, 6200.00 ns, 6.2000 us/op
WorkloadActual   7: 1 op, 6300.00 ns, 6.3000 us/op
WorkloadActual   8: 1 op, 6200.00 ns, 6.2000 us/op
WorkloadActual   9: 1 op, 6800.00 ns, 6.8000 us/op
WorkloadActual  10: 1 op, 6300.00 ns, 6.3000 us/op
WorkloadActual  11: 1 op, 6400.00 ns, 6.4000 us/op
WorkloadActual  12: 1 op, 6400.00 ns, 6.4000 us/op
WorkloadActual  13: 1 op, 6300.00 ns, 6.3000 us/op
WorkloadActual  14: 1 op, 6300.00 ns, 6.3000 us/op
WorkloadActual  15: 1 op, 6200.00 ns, 6.2000 us/op

// AfterActualRun
WorkloadResult   1: 1 op, 6300.00 ns, 6.3000 us/op
WorkloadResult   2: 1 op, 6300.00 ns, 6.3000 us/op
WorkloadResult   3: 1 op, 6200.00 ns, 6.2000 us/op
WorkloadResult   4: 1 op, 6100.00 ns, 6.1000 us/op
WorkloadResult   5: 1 op, 6200.00 ns, 6.2000 us/op
WorkloadResult   6: 1 op, 6100.00 ns, 6.1000 us/op
WorkloadResult   7: 1 op, 6200.00 ns, 6.2000 us/op
WorkloadResult   8: 1 op, 6300.00 ns, 6.3000 us/op
WorkloadResult   9: 1 op, 6300.00 ns, 6.3000 us/op
WorkloadResult  10: 1 op, 6200.00 ns, 6.2000 us/op
WorkloadResult  11: 1 op, 6200.00 ns, 6.2000 us/op
WorkloadResult  12: 1 op, 6100.00 ns, 6.1000 us/op

// AfterAll
// Benchmark Process 25940 has exited with code 0.

Mean = 6.208 μs, StdErr = 0.023 μs (0.37%), N = 12, StdDev = 0.079 μs
Min = 6.100 μs, Q1 = 6.175 μs, Median = 6.200 μs, Q3 = 6.300 μs, Max = 6.300 μs
IQR = 0.125 μs, LowerFence = 5.987 μs, UpperFence = 6.487 μs
ConfidenceInterval = [6.107 μs; 6.310 μs] (CI 99.9%), Margin = 0.102 μs (1.64% of Mean)
Skewness = -0.12, Kurtosis = 1.47, MValue = 2

// **************************
// Benchmark: LazySortedListBenchmark.SystemSortedListRemove: Job-UZWZTH(InvocationCount=1, UnrollFactor=1) [N=5000]
// *** Execute ***
// Launch: 1 / 1
// Execute: dotnet "bf18d94d-7dda-48e8-a69f-531024b3e97e.dll" --benchmarkName "ConvenientCollections.Benchmarks.LazySortedListBenchmark.SystemSortedListRemove(N: 5000)" --job "InvocationCount=1, UnrollFactor=1" --benchmarkId 10 in C:\Users\hacke\source\repos\CollectionBenchmarks\bin\Release\net6.0\bf18d94d-7dda-48e8-a69f-531024b3e97e\bin\Release\net6.0
// BeforeAnythingElse

// Benchmark Process Environment Information:
// Runtime=.NET 6.0.0 (6.0.21.52210), X64 RyuJIT
// GC=Concurrent Workstation
// Job: Job-RQABTU(InvocationCount=1, UnrollFactor=1)

OverheadJitting  1: 1 op, 140700.00 ns, 140.7000 us/op
WorkloadJitting  1: 1 op, 1725600.00 ns, 1.7256 ms/op

OverheadWarmup   1: 1 op, 200.00 ns, 200.0000 ns/op
OverheadWarmup   2: 1 op, 200.00 ns, 200.0000 ns/op
OverheadWarmup   3: 1 op, 100.00 ns, 100.0000 ns/op
OverheadWarmup   4: 1 op, 100.00 ns, 100.0000 ns/op
OverheadWarmup   5: 1 op, 100.00 ns, 100.0000 ns/op

OverheadActual   1: 1 op, 100.00 ns, 100.0000 ns/op
OverheadActual   2: 1 op, 100.00 ns, 100.0000 ns/op
OverheadActual   3: 1 op, 200.00 ns, 200.0000 ns/op
OverheadActual   4: 1 op, 100.00 ns, 100.0000 ns/op
OverheadActual   5: 1 op, 100.00 ns, 100.0000 ns/op
OverheadActual   6: 1 op, 100.00 ns, 100.0000 ns/op
OverheadActual   7: 1 op, 100.00 ns, 100.0000 ns/op
OverheadActual   8: 1 op, 100.00 ns, 100.0000 ns/op
OverheadActual   9: 1 op, 100.00 ns, 100.0000 ns/op
OverheadActual  10: 1 op, 100.00 ns, 100.0000 ns/op
OverheadActual  11: 1 op, 100.00 ns, 100.0000 ns/op
OverheadActual  12: 1 op, 100.00 ns, 100.0000 ns/op
OverheadActual  13: 1 op, 100.00 ns, 100.0000 ns/op
OverheadActual  14: 1 op, 200.00 ns, 200.0000 ns/op
OverheadActual  15: 1 op, 200.00 ns, 200.0000 ns/op

WorkloadWarmup   1: 1 op, 1381100.00 ns, 1.3811 ms/op
WorkloadWarmup   2: 1 op, 1355800.00 ns, 1.3558 ms/op
WorkloadWarmup   3: 1 op, 1346200.00 ns, 1.3462 ms/op
WorkloadWarmup   4: 1 op, 1360000.00 ns, 1.3600 ms/op
WorkloadWarmup   5: 1 op, 1365000.00 ns, 1.3650 ms/op
WorkloadWarmup   6: 1 op, 1425300.00 ns, 1.4253 ms/op
WorkloadWarmup   7: 1 op, 1572200.00 ns, 1.5722 ms/op
WorkloadWarmup   8: 1 op, 1553500.00 ns, 1.5535 ms/op
WorkloadWarmup   9: 1 op, 1349400.00 ns, 1.3494 ms/op
WorkloadWarmup  10: 1 op, 1352200.00 ns, 1.3522 ms/op
WorkloadWarmup  11: 1 op, 1352600.00 ns, 1.3526 ms/op
WorkloadWarmup  12: 1 op, 1352000.00 ns, 1.3520 ms/op

// BeforeActualRun
WorkloadActual   1: 1 op, 1430200.00 ns, 1.4302 ms/op
WorkloadActual   2: 1 op, 1371700.00 ns, 1.3717 ms/op
WorkloadActual   3: 1 op, 1359500.00 ns, 1.3595 ms/op
WorkloadActual   4: 1 op, 1377700.00 ns, 1.3777 ms/op
WorkloadActual   5: 1 op, 1561400.00 ns, 1.5614 ms/op
WorkloadActual   6: 1 op, 1351300.00 ns, 1.3513 ms/op
WorkloadActual   7: 1 op, 1364000.00 ns, 1.3640 ms/op
WorkloadActual   8: 1 op, 1380500.00 ns, 1.3805 ms/op
WorkloadActual   9: 1 op, 1352000.00 ns, 1.3520 ms/op
WorkloadActual  10: 1 op, 1609500.00 ns, 1.6095 ms/op
WorkloadActual  11: 1 op, 1377200.00 ns, 1.3772 ms/op
WorkloadActual  12: 1 op, 1354300.00 ns, 1.3543 ms/op
WorkloadActual  13: 1 op, 1346600.00 ns, 1.3466 ms/op
WorkloadActual  14: 1 op, 1361500.00 ns, 1.3615 ms/op
WorkloadActual  15: 1 op, 1360800.00 ns, 1.3608 ms/op

// AfterActualRun
WorkloadResult   1: 1 op, 1371600.00 ns, 1.3716 ms/op
WorkloadResult   2: 1 op, 1359400.00 ns, 1.3594 ms/op
WorkloadResult   3: 1 op, 1377600.00 ns, 1.3776 ms/op
WorkloadResult   4: 1 op, 1351200.00 ns, 1.3512 ms/op
WorkloadResult   5: 1 op, 1363900.00 ns, 1.3639 ms/op
WorkloadResult   6: 1 op, 1380400.00 ns, 1.3804 ms/op
WorkloadResult   7: 1 op, 1351900.00 ns, 1.3519 ms/op
WorkloadResult   8: 1 op, 1377100.00 ns, 1.3771 ms/op
WorkloadResult   9: 1 op, 1354200.00 ns, 1.3542 ms/op
WorkloadResult  10: 1 op, 1346500.00 ns, 1.3465 ms/op
WorkloadResult  11: 1 op, 1361400.00 ns, 1.3614 ms/op
WorkloadResult  12: 1 op, 1360700.00 ns, 1.3607 ms/op

// AfterAll
// Benchmark Process 25220 has exited with code 0.

Mean = 1.363 ms, StdErr = 0.003 ms (0.24%), N = 12, StdDev = 0.011 ms
Min = 1.347 ms, Q1 = 1.354 ms, Median = 1.361 ms, Q3 = 1.373 ms, Max = 1.380 ms
IQR = 0.019 ms, LowerFence = 1.325 ms, UpperFence = 1.402 ms
ConfidenceInterval = [1.348 ms; 1.378 ms] (CI 99.9%), Margin = 0.015 ms (1.07% of Mean)
Skewness = 0.2, Kurtosis = 1.48, MValue = 2

// **************************
// Benchmark: LazySortedListBenchmark.LazySortedListRemove: Job-UZWZTH(InvocationCount=1, UnrollFactor=1) [N=5000]
// *** Execute ***
// Launch: 1 / 1
// Execute: dotnet "bf18d94d-7dda-48e8-a69f-531024b3e97e.dll" --benchmarkName "ConvenientCollections.Benchmarks.LazySortedListBenchmark.LazySortedListRemove(N: 5000)" --job "InvocationCount=1, UnrollFactor=1" --benchmarkId 11 in C:\Users\hacke\source\repos\CollectionBenchmarks\bin\Release\net6.0\bf18d94d-7dda-48e8-a69f-531024b3e97e\bin\Release\net6.0
// BeforeAnythingElse

// Benchmark Process Environment Information:
// Runtime=.NET 6.0.0 (6.0.21.52210), X64 RyuJIT
// GC=Concurrent Workstation
// Job: Job-GCLGDJ(InvocationCount=1, UnrollFactor=1)

OverheadJitting  1: 1 op, 136700.00 ns, 136.7000 us/op
WorkloadJitting  1: 1 op, 4723300.00 ns, 4.7233 ms/op

OverheadWarmup   1: 1 op, 200.00 ns, 200.0000 ns/op
OverheadWarmup   2: 1 op, 200.00 ns, 200.0000 ns/op
OverheadWarmup   3: 1 op, 100.00 ns, 100.0000 ns/op
OverheadWarmup   4: 1 op, 100.00 ns, 100.0000 ns/op
OverheadWarmup   5: 1 op, 200.00 ns, 200.0000 ns/op

OverheadActual   1: 1 op, 200.00 ns, 200.0000 ns/op
OverheadActual   2: 1 op, 200.00 ns, 200.0000 ns/op
OverheadActual   3: 1 op, 100.00 ns, 100.0000 ns/op
OverheadActual   4: 1 op, 100.00 ns, 100.0000 ns/op
OverheadActual   5: 1 op, 200.00 ns, 200.0000 ns/op
OverheadActual   6: 1 op, 200.00 ns, 200.0000 ns/op
OverheadActual   7: 1 op, 200.00 ns, 200.0000 ns/op
OverheadActual   8: 1 op, 100.00 ns, 100.0000 ns/op
OverheadActual   9: 1 op, 100.00 ns, 100.0000 ns/op
OverheadActual  10: 1 op, 100.00 ns, 100.0000 ns/op
OverheadActual  11: 1 op, 200.00 ns, 200.0000 ns/op
OverheadActual  12: 1 op, 100.00 ns, 100.0000 ns/op
OverheadActual  13: 1 op, 100.00 ns, 100.0000 ns/op
OverheadActual  14: 1 op, 100.00 ns, 100.0000 ns/op
OverheadActual  15: 1 op, 100.00 ns, 100.0000 ns/op
OverheadActual  16: 1 op, 100.00 ns, 100.0000 ns/op
OverheadActual  17: 1 op, 200.00 ns, 200.0000 ns/op
OverheadActual  18: 1 op, 100.00 ns, 100.0000 ns/op
OverheadActual  19: 1 op, 100.00 ns, 100.0000 ns/op
OverheadActual  20: 1 op, 200.00 ns, 200.0000 ns/op

WorkloadWarmup   1: 1 op, 1308400.00 ns, 1.3084 ms/op
WorkloadWarmup   2: 1 op, 1289900.00 ns, 1.2899 ms/op
WorkloadWarmup   3: 1 op, 1333500.00 ns, 1.3335 ms/op
WorkloadWarmup   4: 1 op, 1292200.00 ns, 1.2922 ms/op
WorkloadWarmup   5: 1 op, 1281600.00 ns, 1.2816 ms/op
WorkloadWarmup   6: 1 op, 1297700.00 ns, 1.2977 ms/op
WorkloadWarmup   7: 1 op, 1275600.00 ns, 1.2756 ms/op

// BeforeActualRun
WorkloadActual   1: 1 op, 1265100.00 ns, 1.2651 ms/op
WorkloadActual   2: 1 op, 1269100.00 ns, 1.2691 ms/op
WorkloadActual   3: 1 op, 1271300.00 ns, 1.2713 ms/op
WorkloadActual   4: 1 op, 1304500.00 ns, 1.3045 ms/op
WorkloadActual   5: 1 op, 1290000.00 ns, 1.2900 ms/op
WorkloadActual   6: 1 op, 1289400.00 ns, 1.2894 ms/op
WorkloadActual   7: 1 op, 1285800.00 ns, 1.2858 ms/op
WorkloadActual   8: 1 op, 1282700.00 ns, 1.2827 ms/op
WorkloadActual   9: 1 op, 1285300.00 ns, 1.2853 ms/op
WorkloadActual  10: 1 op, 1266100.00 ns, 1.2661 ms/op
WorkloadActual  11: 1 op, 1286900.00 ns, 1.2869 ms/op
WorkloadActual  12: 1 op, 1261600.00 ns, 1.2616 ms/op
WorkloadActual  13: 1 op, 1350400.00 ns, 1.3504 ms/op
WorkloadActual  14: 1 op, 1277900.00 ns, 1.2779 ms/op
WorkloadActual  15: 1 op, 1286300.00 ns, 1.2863 ms/op

// AfterActualRun
WorkloadResult   1: 1 op, 1265000.00 ns, 1.2650 ms/op
WorkloadResult   2: 1 op, 1269000.00 ns, 1.2690 ms/op
WorkloadResult   3: 1 op, 1271200.00 ns, 1.2712 ms/op
WorkloadResult   4: 1 op, 1304400.00 ns, 1.3044 ms/op
WorkloadResult   5: 1 op, 1289900.00 ns, 1.2899 ms/op
WorkloadResult   6: 1 op, 1289300.00 ns, 1.2893 ms/op
WorkloadResult   7: 1 op, 1285700.00 ns, 1.2857 ms/op
WorkloadResult   8: 1 op, 1282600.00 ns, 1.2826 ms/op
WorkloadResult   9: 1 op, 1285200.00 ns, 1.2852 ms/op
WorkloadResult  10: 1 op, 1266000.00 ns, 1.2660 ms/op
WorkloadResult  11: 1 op, 1286800.00 ns, 1.2868 ms/op
WorkloadResult  12: 1 op, 1261500.00 ns, 1.2615 ms/op
WorkloadResult  13: 1 op, 1277800.00 ns, 1.2778 ms/op
WorkloadResult  14: 1 op, 1286200.00 ns, 1.2862 ms/op

// AfterAll
// Benchmark Process 25296 has exited with code 0.

Mean = 1.280 ms, StdErr = 0.003 ms (0.25%), N = 14, StdDev = 0.012 ms
Min = 1.262 ms, Q1 = 1.270 ms, Median = 1.284 ms, Q3 = 1.287 ms, Max = 1.304 ms
IQR = 0.017 ms, LowerFence = 1.244 ms, UpperFence = 1.312 ms
ConfidenceInterval = [1.266 ms; 1.294 ms] (CI 99.9%), Margin = 0.014 ms (1.06% of Mean)
Skewness = 0.1, Kurtosis = 2.02, MValue = 2

// **************************
// Benchmark: LazySortedListBenchmark.SystemSortedListGet: Job-UZWZTH(InvocationCount=1, UnrollFactor=1) [N=10000]
// *** Execute ***
// Launch: 1 / 1
// Execute: dotnet "bf18d94d-7dda-48e8-a69f-531024b3e97e.dll" --benchmarkName "ConvenientCollections.Benchmarks.LazySortedListBenchmark.SystemSortedListGet(N: 10000)" --job "InvocationCount=1, UnrollFactor=1" --benchmarkId 12 in C:\Users\hacke\source\repos\CollectionBenchmarks\bin\Release\net6.0\bf18d94d-7dda-48e8-a69f-531024b3e97e\bin\Release\net6.0
// BeforeAnythingElse

// Benchmark Process Environment Information:
// Runtime=.NET 6.0.0 (6.0.21.52210), X64 RyuJIT
// GC=Concurrent Workstation
// Job: Job-GSUYGF(InvocationCount=1, UnrollFactor=1)

OverheadJitting  1: 1 op, 169700.00 ns, 169.7000 us/op
WorkloadJitting  1: 1 op, 752500.00 ns, 752.5000 us/op

OverheadWarmup   1: 1 op, 100.00 ns, 100.0000 ns/op
OverheadWarmup   2: 1 op, 100.00 ns, 100.0000 ns/op
OverheadWarmup   3: 1 op, 100.00 ns, 100.0000 ns/op
OverheadWarmup   4: 1 op, 100.00 ns, 100.0000 ns/op
OverheadWarmup   5: 1 op, 100.00 ns, 100.0000 ns/op

OverheadActual   1: 1 op, 200.00 ns, 200.0000 ns/op
OverheadActual   2: 1 op, 200.00 ns, 200.0000 ns/op
OverheadActual   3: 1 op, 100.00 ns, 100.0000 ns/op
OverheadActual   4: 1 op, 200.00 ns, 200.0000 ns/op
OverheadActual   5: 1 op, 100.00 ns, 100.0000 ns/op
OverheadActual   6: 1 op, 100.00 ns, 100.0000 ns/op
OverheadActual   7: 1 op, 100.00 ns, 100.0000 ns/op
OverheadActual   8: 1 op, 200.00 ns, 200.0000 ns/op
OverheadActual   9: 1 op, 100.00 ns, 100.0000 ns/op
OverheadActual  10: 1 op, 200.00 ns, 200.0000 ns/op
OverheadActual  11: 1 op, 100.00 ns, 100.0000 ns/op
OverheadActual  12: 1 op, 100.00 ns, 100.0000 ns/op
OverheadActual  13: 1 op, 100.00 ns, 100.0000 ns/op
OverheadActual  14: 1 op, 100.00 ns, 100.0000 ns/op
OverheadActual  15: 1 op, 100.00 ns, 100.0000 ns/op
OverheadActual  16: 1 op, 200.00 ns, 200.0000 ns/op
OverheadActual  17: 1 op, 100.00 ns, 100.0000 ns/op
OverheadActual  18: 1 op, 200.00 ns, 200.0000 ns/op
OverheadActual  19: 1 op, 200.00 ns, 200.0000 ns/op
OverheadActual  20: 1 op, 200.00 ns, 200.0000 ns/op

WorkloadWarmup   1: 1 op, 392400.00 ns, 392.4000 us/op
WorkloadWarmup   2: 1 op, 446400.00 ns, 446.4000 us/op
WorkloadWarmup   3: 1 op, 421300.00 ns, 421.3000 us/op
WorkloadWarmup   4: 1 op, 417400.00 ns, 417.4000 us/op
WorkloadWarmup   5: 1 op, 438500.00 ns, 438.5000 us/op
WorkloadWarmup   6: 1 op, 449600.00 ns, 449.6000 us/op
WorkloadWarmup   7: 1 op, 436700.00 ns, 436.7000 us/op

// BeforeActualRun
WorkloadActual   1: 1 op, 419500.00 ns, 419.5000 us/op
WorkloadActual   2: 1 op, 424500.00 ns, 424.5000 us/op
WorkloadActual   3: 1 op, 457100.00 ns, 457.1000 us/op
WorkloadActual   4: 1 op, 442700.00 ns, 442.7000 us/op
WorkloadActual   5: 1 op, 426100.00 ns, 426.1000 us/op
WorkloadActual   6: 1 op, 433800.00 ns, 433.8000 us/op
WorkloadActual   7: 1 op, 427500.00 ns, 427.5000 us/op
WorkloadActual   8: 1 op, 456500.00 ns, 456.5000 us/op
WorkloadActual   9: 1 op, 407900.00 ns, 407.9000 us/op
WorkloadActual  10: 1 op, 433500.00 ns, 433.5000 us/op
WorkloadActual  11: 1 op, 436800.00 ns, 436.8000 us/op
WorkloadActual  12: 1 op, 547000.00 ns, 547.0000 us/op
WorkloadActual  13: 1 op, 414700.00 ns, 414.7000 us/op
WorkloadActual  14: 1 op, 434300.00 ns, 434.3000 us/op
WorkloadActual  15: 1 op, 409000.00 ns, 409.0000 us/op
WorkloadActual  16: 1 op, 439300.00 ns, 439.3000 us/op
WorkloadActual  17: 1 op, 421900.00 ns, 421.9000 us/op
WorkloadActual  18: 1 op, 421600.00 ns, 421.6000 us/op
WorkloadActual  19: 1 op, 445800.00 ns, 445.8000 us/op
WorkloadActual  20: 1 op, 431800.00 ns, 431.8000 us/op
WorkloadActual  21: 1 op, 456100.00 ns, 456.1000 us/op
WorkloadActual  22: 1 op, 404500.00 ns, 404.5000 us/op
WorkloadActual  23: 1 op, 425500.00 ns, 425.5000 us/op
WorkloadActual  24: 1 op, 403400.00 ns, 403.4000 us/op
WorkloadActual  25: 1 op, 451800.00 ns, 451.8000 us/op
WorkloadActual  26: 1 op, 425200.00 ns, 425.2000 us/op
WorkloadActual  27: 1 op, 436100.00 ns, 436.1000 us/op
WorkloadActual  28: 1 op, 415300.00 ns, 415.3000 us/op
WorkloadActual  29: 1 op, 424600.00 ns, 424.6000 us/op
WorkloadActual  30: 1 op, 420100.00 ns, 420.1000 us/op
WorkloadActual  31: 1 op, 440200.00 ns, 440.2000 us/op
WorkloadActual  32: 1 op, 434800.00 ns, 434.8000 us/op
WorkloadActual  33: 1 op, 556200.00 ns, 556.2000 us/op
WorkloadActual  34: 1 op, 428300.00 ns, 428.3000 us/op
WorkloadActual  35: 1 op, 432800.00 ns, 432.8000 us/op
WorkloadActual  36: 1 op, 421500.00 ns, 421.5000 us/op
WorkloadActual  37: 1 op, 452200.00 ns, 452.2000 us/op
WorkloadActual  38: 1 op, 409400.00 ns, 409.4000 us/op
WorkloadActual  39: 1 op, 426600.00 ns, 426.6000 us/op

// AfterActualRun
WorkloadResult   1: 1 op, 419400.00 ns, 419.4000 us/op
WorkloadResult   2: 1 op, 424400.00 ns, 424.4000 us/op
WorkloadResult   3: 1 op, 457000.00 ns, 457.0000 us/op
WorkloadResult   4: 1 op, 442600.00 ns, 442.6000 us/op
WorkloadResult   5: 1 op, 426000.00 ns, 426.0000 us/op
WorkloadResult   6: 1 op, 433700.00 ns, 433.7000 us/op
WorkloadResult   7: 1 op, 427400.00 ns, 427.4000 us/op
WorkloadResult   8: 1 op, 456400.00 ns, 456.4000 us/op
WorkloadResult   9: 1 op, 407800.00 ns, 407.8000 us/op
WorkloadResult  10: 1 op, 433400.00 ns, 433.4000 us/op
WorkloadResult  11: 1 op, 436700.00 ns, 436.7000 us/op
WorkloadResult  12: 1 op, 414600.00 ns, 414.6000 us/op
WorkloadResult  13: 1 op, 434200.00 ns, 434.2000 us/op
WorkloadResult  14: 1 op, 408900.00 ns, 408.9000 us/op
WorkloadResult  15: 1 op, 439200.00 ns, 439.2000 us/op
WorkloadResult  16: 1 op, 421800.00 ns, 421.8000 us/op
WorkloadResult  17: 1 op, 421500.00 ns, 421.5000 us/op
WorkloadResult  18: 1 op, 445700.00 ns, 445.7000 us/op
WorkloadResult  19: 1 op, 431700.00 ns, 431.7000 us/op
WorkloadResult  20: 1 op, 456000.00 ns, 456.0000 us/op
WorkloadResult  21: 1 op, 404400.00 ns, 404.4000 us/op
WorkloadResult  22: 1 op, 425400.00 ns, 425.4000 us/op
WorkloadResult  23: 1 op, 403300.00 ns, 403.3000 us/op
WorkloadResult  24: 1 op, 451700.00 ns, 451.7000 us/op
WorkloadResult  25: 1 op, 425100.00 ns, 425.1000 us/op
WorkloadResult  26: 1 op, 436000.00 ns, 436.0000 us/op
WorkloadResult  27: 1 op, 415200.00 ns, 415.2000 us/op
WorkloadResult  28: 1 op, 424500.00 ns, 424.5000 us/op
WorkloadResult  29: 1 op, 420000.00 ns, 420.0000 us/op
WorkloadResult  30: 1 op, 440100.00 ns, 440.1000 us/op
WorkloadResult  31: 1 op, 434700.00 ns, 434.7000 us/op
WorkloadResult  32: 1 op, 428200.00 ns, 428.2000 us/op
WorkloadResult  33: 1 op, 432700.00 ns, 432.7000 us/op
WorkloadResult  34: 1 op, 421400.00 ns, 421.4000 us/op
WorkloadResult  35: 1 op, 452100.00 ns, 452.1000 us/op
WorkloadResult  36: 1 op, 409300.00 ns, 409.3000 us/op
WorkloadResult  37: 1 op, 426500.00 ns, 426.5000 us/op

// AfterAll
// Benchmark Process 3312 has exited with code 0.

Mean = 429.432 μs, StdErr = 2.382 μs (0.55%), N = 37, StdDev = 14.491 μs
Min = 403.300 μs, Q1 = 421.400 μs, Median = 427.400 μs, Q3 = 436.700 μs, Max = 457.000 μs
IQR = 15.300 μs, LowerFence = 398.450 μs, UpperFence = 459.650 μs
ConfidenceInterval = [420.899 μs; 437.966 μs] (CI 99.9%), Margin = 8.534 μs (1.99% of Mean)
Skewness = 0.19, Kurtosis = 2.32, MValue = 2

// **************************
// Benchmark: LazySortedListBenchmark.LazySortedListGet: Job-UZWZTH(InvocationCount=1, UnrollFactor=1) [N=10000]
// *** Execute ***
// Launch: 1 / 1
// Execute: dotnet "bf18d94d-7dda-48e8-a69f-531024b3e97e.dll" --benchmarkName "ConvenientCollections.Benchmarks.LazySortedListBenchmark.LazySortedListGet(N: 10000)" --job "InvocationCount=1, UnrollFactor=1" --benchmarkId 13 in C:\Users\hacke\source\repos\CollectionBenchmarks\bin\Release\net6.0\bf18d94d-7dda-48e8-a69f-531024b3e97e\bin\Release\net6.0
// BeforeAnythingElse

// Benchmark Process Environment Information:
// Runtime=.NET 6.0.0 (6.0.21.52210), X64 RyuJIT
// GC=Concurrent Workstation
// Job: Job-QYMFDB(InvocationCount=1, UnrollFactor=1)

OverheadJitting  1: 1 op, 179500.00 ns, 179.5000 us/op
WorkloadJitting  1: 1 op, 4222400.00 ns, 4.2224 ms/op

OverheadWarmup   1: 1 op, 100.00 ns, 100.0000 ns/op
OverheadWarmup   2: 1 op, 100.00 ns, 100.0000 ns/op
OverheadWarmup   3: 1 op, 100.00 ns, 100.0000 ns/op
OverheadWarmup   4: 1 op, 100.00 ns, 100.0000 ns/op
OverheadWarmup   5: 1 op, 100.00 ns, 100.0000 ns/op

OverheadActual   1: 1 op, 200.00 ns, 200.0000 ns/op
OverheadActual   2: 1 op, 100.00 ns, 100.0000 ns/op
OverheadActual   3: 1 op, 200.00 ns, 200.0000 ns/op
OverheadActual   4: 1 op, 100.00 ns, 100.0000 ns/op
OverheadActual   5: 1 op, 100.00 ns, 100.0000 ns/op
OverheadActual   6: 1 op, 100.00 ns, 100.0000 ns/op
OverheadActual   7: 1 op, 100.00 ns, 100.0000 ns/op
OverheadActual   8: 1 op, 100.00 ns, 100.0000 ns/op
OverheadActual   9: 1 op, 100.00 ns, 100.0000 ns/op
OverheadActual  10: 1 op, 100.00 ns, 100.0000 ns/op
OverheadActual  11: 1 op, 100.00 ns, 100.0000 ns/op
OverheadActual  12: 1 op, 100.00 ns, 100.0000 ns/op
OverheadActual  13: 1 op, 100.00 ns, 100.0000 ns/op
OverheadActual  14: 1 op, 100.00 ns, 100.0000 ns/op
OverheadActual  15: 1 op, 100.00 ns, 100.0000 ns/op

WorkloadWarmup   1: 1 op, 327700.00 ns, 327.7000 us/op
WorkloadWarmup   2: 1 op, 341100.00 ns, 341.1000 us/op
WorkloadWarmup   3: 1 op, 389200.00 ns, 389.2000 us/op
WorkloadWarmup   4: 1 op, 337500.00 ns, 337.5000 us/op
WorkloadWarmup   5: 1 op, 342600.00 ns, 342.6000 us/op
WorkloadWarmup   6: 1 op, 336300.00 ns, 336.3000 us/op

// BeforeActualRun
WorkloadActual   1: 1 op, 316000.00 ns, 316.0000 us/op
WorkloadActual   2: 1 op, 331100.00 ns, 331.1000 us/op
WorkloadActual   3: 1 op, 366100.00 ns, 366.1000 us/op
WorkloadActual   4: 1 op, 340700.00 ns, 340.7000 us/op
WorkloadActual   5: 1 op, 340000.00 ns, 340.0000 us/op
WorkloadActual   6: 1 op, 339300.00 ns, 339.3000 us/op
WorkloadActual   7: 1 op, 332900.00 ns, 332.9000 us/op
WorkloadActual   8: 1 op, 339300.00 ns, 339.3000 us/op
WorkloadActual   9: 1 op, 346900.00 ns, 346.9000 us/op
WorkloadActual  10: 1 op, 335700.00 ns, 335.7000 us/op
WorkloadActual  11: 1 op, 358600.00 ns, 358.6000 us/op
WorkloadActual  12: 1 op, 343100.00 ns, 343.1000 us/op
WorkloadActual  13: 1 op, 338000.00 ns, 338.0000 us/op
WorkloadActual  14: 1 op, 330500.00 ns, 330.5000 us/op
WorkloadActual  15: 1 op, 333900.00 ns, 333.9000 us/op
WorkloadActual  16: 1 op, 355800.00 ns, 355.8000 us/op
WorkloadActual  17: 1 op, 342500.00 ns, 342.5000 us/op
WorkloadActual  18: 1 op, 333900.00 ns, 333.9000 us/op
WorkloadActual  19: 1 op, 322700.00 ns, 322.7000 us/op
WorkloadActual  20: 1 op, 341300.00 ns, 341.3000 us/op
WorkloadActual  21: 1 op, 316500.00 ns, 316.5000 us/op
WorkloadActual  22: 1 op, 331400.00 ns, 331.4000 us/op
WorkloadActual  23: 1 op, 345300.00 ns, 345.3000 us/op
WorkloadActual  24: 1 op, 367200.00 ns, 367.2000 us/op
WorkloadActual  25: 1 op, 344900.00 ns, 344.9000 us/op
WorkloadActual  26: 1 op, 345900.00 ns, 345.9000 us/op
WorkloadActual  27: 1 op, 347900.00 ns, 347.9000 us/op
WorkloadActual  28: 1 op, 346000.00 ns, 346.0000 us/op
WorkloadActual  29: 1 op, 341500.00 ns, 341.5000 us/op
WorkloadActual  30: 1 op, 346600.00 ns, 346.6000 us/op
WorkloadActual  31: 1 op, 349500.00 ns, 349.5000 us/op
WorkloadActual  32: 1 op, 336400.00 ns, 336.4000 us/op

// AfterActualRun
WorkloadResult   1: 1 op, 315900.00 ns, 315.9000 us/op
WorkloadResult   2: 1 op, 331000.00 ns, 331.0000 us/op
WorkloadResult   3: 1 op, 340600.00 ns, 340.6000 us/op
WorkloadResult   4: 1 op, 339900.00 ns, 339.9000 us/op
WorkloadResult   5: 1 op, 339200.00 ns, 339.2000 us/op
WorkloadResult   6: 1 op, 332800.00 ns, 332.8000 us/op
WorkloadResult   7: 1 op, 339200.00 ns, 339.2000 us/op
WorkloadResult   8: 1 op, 346800.00 ns, 346.8000 us/op
WorkloadResult   9: 1 op, 335600.00 ns, 335.6000 us/op
WorkloadResult  10: 1 op, 358500.00 ns, 358.5000 us/op
WorkloadResult  11: 1 op, 343000.00 ns, 343.0000 us/op
WorkloadResult  12: 1 op, 337900.00 ns, 337.9000 us/op
WorkloadResult  13: 1 op, 330400.00 ns, 330.4000 us/op
WorkloadResult  14: 1 op, 333800.00 ns, 333.8000 us/op
WorkloadResult  15: 1 op, 355700.00 ns, 355.7000 us/op
WorkloadResult  16: 1 op, 342400.00 ns, 342.4000 us/op
WorkloadResult  17: 1 op, 333800.00 ns, 333.8000 us/op
WorkloadResult  18: 1 op, 322600.00 ns, 322.6000 us/op
WorkloadResult  19: 1 op, 341200.00 ns, 341.2000 us/op
WorkloadResult  20: 1 op, 316400.00 ns, 316.4000 us/op
WorkloadResult  21: 1 op, 331300.00 ns, 331.3000 us/op
WorkloadResult  22: 1 op, 345200.00 ns, 345.2000 us/op
WorkloadResult  23: 1 op, 344800.00 ns, 344.8000 us/op
WorkloadResult  24: 1 op, 345800.00 ns, 345.8000 us/op
WorkloadResult  25: 1 op, 347800.00 ns, 347.8000 us/op
WorkloadResult  26: 1 op, 345900.00 ns, 345.9000 us/op
WorkloadResult  27: 1 op, 341400.00 ns, 341.4000 us/op
WorkloadResult  28: 1 op, 346500.00 ns, 346.5000 us/op
WorkloadResult  29: 1 op, 349400.00 ns, 349.4000 us/op
WorkloadResult  30: 1 op, 336300.00 ns, 336.3000 us/op

// AfterAll
// Benchmark Process 25308 has exited with code 0.

Mean = 339.037 μs, StdErr = 1.792 μs (0.53%), N = 30, StdDev = 9.813 μs
Min = 315.900 μs, Q1 = 333.800 μs, Median = 340.250 μs, Q3 = 345.650 μs, Max = 358.500 μs
IQR = 11.850 μs, LowerFence = 316.025 μs, UpperFence = 363.425 μs
ConfidenceInterval = [332.481 μs; 345.593 μs] (CI 99.9%), Margin = 6.556 μs (1.93% of Mean)
Skewness = -0.52, Kurtosis = 3.2, MValue = 2.25

// **************************
// Benchmark: LazySortedListBenchmark.SystemSortedListAdd: Job-UZWZTH(InvocationCount=1, UnrollFactor=1) [N=10000]
// *** Execute ***
// Launch: 1 / 1
// Execute: dotnet "bf18d94d-7dda-48e8-a69f-531024b3e97e.dll" --benchmarkName "ConvenientCollections.Benchmarks.LazySortedListBenchmark.SystemSortedListAdd(N: 10000)" --job "InvocationCount=1, UnrollFactor=1" --benchmarkId 14 in C:\Users\hacke\source\repos\CollectionBenchmarks\bin\Release\net6.0\bf18d94d-7dda-48e8-a69f-531024b3e97e\bin\Release\net6.0
// BeforeAnythingElse

// Benchmark Process Environment Information:
// Runtime=.NET 6.0.0 (6.0.21.52210), X64 RyuJIT
// GC=Concurrent Workstation
// Job: Job-IBVHVD(InvocationCount=1, UnrollFactor=1)

OverheadJitting  1: 1 op, 154500.00 ns, 154.5000 us/op
WorkloadJitting  1: 1 op, 464700.00 ns, 464.7000 us/op

OverheadWarmup   1: 1 op, 200.00 ns, 200.0000 ns/op
OverheadWarmup   2: 1 op, 200.00 ns, 200.0000 ns/op
OverheadWarmup   3: 1 op, 200.00 ns, 200.0000 ns/op
OverheadWarmup   4: 1 op, 100.00 ns, 100.0000 ns/op
OverheadWarmup   5: 1 op, 200.00 ns, 200.0000 ns/op

OverheadActual   1: 1 op, 100.00 ns, 100.0000 ns/op
OverheadActual   2: 1 op, 200.00 ns, 200.0000 ns/op
OverheadActual   3: 1 op, 200.00 ns, 200.0000 ns/op
OverheadActual   4: 1 op, 200.00 ns, 200.0000 ns/op
OverheadActual   5: 1 op, 200.00 ns, 200.0000 ns/op
OverheadActual   6: 1 op, 200.00 ns, 200.0000 ns/op
OverheadActual   7: 1 op, 100.00 ns, 100.0000 ns/op
OverheadActual   8: 1 op, 100.00 ns, 100.0000 ns/op
OverheadActual   9: 1 op, 100.00 ns, 100.0000 ns/op
OverheadActual  10: 1 op, 100.00 ns, 100.0000 ns/op
OverheadActual  11: 1 op, 100.00 ns, 100.0000 ns/op
OverheadActual  12: 1 op, 100.00 ns, 100.0000 ns/op
OverheadActual  13: 1 op, 100.00 ns, 100.0000 ns/op
OverheadActual  14: 1 op, 100.00 ns, 100.0000 ns/op
OverheadActual  15: 1 op, 100.00 ns, 100.0000 ns/op
OverheadActual  16: 1 op, 100.00 ns, 100.0000 ns/op
OverheadActual  17: 1 op, 100.00 ns, 100.0000 ns/op
OverheadActual  18: 1 op, 200.00 ns, 200.0000 ns/op
OverheadActual  19: 1 op, 100.00 ns, 100.0000 ns/op
OverheadActual  20: 1 op, 100.00 ns, 100.0000 ns/op

WorkloadWarmup   1: 1 op, 244100.00 ns, 244.1000 us/op
WorkloadWarmup   2: 1 op, 241000.00 ns, 241.0000 us/op
WorkloadWarmup   3: 1 op, 240900.00 ns, 240.9000 us/op
WorkloadWarmup   4: 1 op, 243300.00 ns, 243.3000 us/op
WorkloadWarmup   5: 1 op, 247000.00 ns, 247.0000 us/op
WorkloadWarmup   6: 1 op, 241000.00 ns, 241.0000 us/op
WorkloadWarmup   7: 1 op, 243800.00 ns, 243.8000 us/op
WorkloadWarmup   8: 1 op, 251100.00 ns, 251.1000 us/op
WorkloadWarmup   9: 1 op, 245200.00 ns, 245.2000 us/op

// BeforeActualRun
WorkloadActual   1: 1 op, 243300.00 ns, 243.3000 us/op
WorkloadActual   2: 1 op, 242200.00 ns, 242.2000 us/op
WorkloadActual   3: 1 op, 287200.00 ns, 287.2000 us/op
WorkloadActual   4: 1 op, 296500.00 ns, 296.5000 us/op
WorkloadActual   5: 1 op, 245300.00 ns, 245.3000 us/op
WorkloadActual   6: 1 op, 245200.00 ns, 245.2000 us/op
WorkloadActual   7: 1 op, 245100.00 ns, 245.1000 us/op
WorkloadActual   8: 1 op, 248900.00 ns, 248.9000 us/op
WorkloadActual   9: 1 op, 245100.00 ns, 245.1000 us/op
WorkloadActual  10: 1 op, 245200.00 ns, 245.2000 us/op
WorkloadActual  11: 1 op, 245300.00 ns, 245.3000 us/op
WorkloadActual  12: 1 op, 250300.00 ns, 250.3000 us/op
WorkloadActual  13: 1 op, 245200.00 ns, 245.2000 us/op
WorkloadActual  14: 1 op, 245200.00 ns, 245.2000 us/op
WorkloadActual  15: 1 op, 249900.00 ns, 249.9000 us/op

// AfterActualRun
WorkloadResult   1: 1 op, 243200.00 ns, 243.2000 us/op
WorkloadResult   2: 1 op, 242100.00 ns, 242.1000 us/op
WorkloadResult   3: 1 op, 245200.00 ns, 245.2000 us/op
WorkloadResult   4: 1 op, 245100.00 ns, 245.1000 us/op
WorkloadResult   5: 1 op, 245000.00 ns, 245.0000 us/op
WorkloadResult   6: 1 op, 248800.00 ns, 248.8000 us/op
WorkloadResult   7: 1 op, 245000.00 ns, 245.0000 us/op
WorkloadResult   8: 1 op, 245100.00 ns, 245.1000 us/op
WorkloadResult   9: 1 op, 245200.00 ns, 245.2000 us/op
WorkloadResult  10: 1 op, 250200.00 ns, 250.2000 us/op
WorkloadResult  11: 1 op, 245100.00 ns, 245.1000 us/op
WorkloadResult  12: 1 op, 245100.00 ns, 245.1000 us/op
WorkloadResult  13: 1 op, 249800.00 ns, 249.8000 us/op

// AfterAll
// Benchmark Process 8184 has exited with code 0.

Mean = 245.762 μs, StdErr = 0.664 μs (0.27%), N = 13, StdDev = 2.394 μs
Min = 242.100 μs, Q1 = 245.000 μs, Median = 245.100 μs, Q3 = 245.200 μs, Max = 250.200 μs
IQR = 0.200 μs, LowerFence = 244.700 μs, UpperFence = 245.500 μs
ConfidenceInterval = [242.895 μs; 248.628 μs] (CI 99.9%), Margin = 2.866 μs (1.17% of Mean)
Skewness = 0.63, Kurtosis = 2.26, MValue = 2

// **************************
// Benchmark: LazySortedListBenchmark.LazySortedListAdd: Job-UZWZTH(InvocationCount=1, UnrollFactor=1) [N=10000]
// *** Execute ***
// Launch: 1 / 1
// Execute: dotnet "bf18d94d-7dda-48e8-a69f-531024b3e97e.dll" --benchmarkName "ConvenientCollections.Benchmarks.LazySortedListBenchmark.LazySortedListAdd(N: 10000)" --job "InvocationCount=1, UnrollFactor=1" --benchmarkId 15 in C:\Users\hacke\source\repos\CollectionBenchmarks\bin\Release\net6.0\bf18d94d-7dda-48e8-a69f-531024b3e97e\bin\Release\net6.0
// BeforeAnythingElse

// Benchmark Process Environment Information:
// Runtime=.NET 6.0.0 (6.0.21.52210), X64 RyuJIT
// GC=Concurrent Workstation
// Job: Job-JWSTVT(InvocationCount=1, UnrollFactor=1)

OverheadJitting  1: 1 op, 159900.00 ns, 159.9000 us/op
WorkloadJitting  1: 1 op, 401400.00 ns, 401.4000 us/op

OverheadWarmup   1: 1 op, 200.00 ns, 200.0000 ns/op
OverheadWarmup   2: 1 op, 200.00 ns, 200.0000 ns/op
OverheadWarmup   3: 1 op, 200.00 ns, 200.0000 ns/op
OverheadWarmup   4: 1 op, 100.00 ns, 100.0000 ns/op
OverheadWarmup   5: 1 op, 200.00 ns, 200.0000 ns/op

OverheadActual   1: 1 op, 200.00 ns, 200.0000 ns/op
OverheadActual   2: 1 op, 200.00 ns, 200.0000 ns/op
OverheadActual   3: 1 op, 100.00 ns, 100.0000 ns/op
OverheadActual   4: 1 op, 100.00 ns, 100.0000 ns/op
OverheadActual   5: 1 op, 200.00 ns, 200.0000 ns/op
OverheadActual   6: 1 op, 100.00 ns, 100.0000 ns/op
OverheadActual   7: 1 op, 200.00 ns, 200.0000 ns/op
OverheadActual   8: 1 op, 100.00 ns, 100.0000 ns/op
OverheadActual   9: 1 op, 100.00 ns, 100.0000 ns/op
OverheadActual  10: 1 op, 200.00 ns, 200.0000 ns/op
OverheadActual  11: 1 op, 200.00 ns, 200.0000 ns/op
OverheadActual  12: 1 op, 200.00 ns, 200.0000 ns/op
OverheadActual  13: 1 op, 200.00 ns, 200.0000 ns/op
OverheadActual  14: 1 op, 200.00 ns, 200.0000 ns/op
OverheadActual  15: 1 op, 100.00 ns, 100.0000 ns/op
OverheadActual  16: 1 op, 100.00 ns, 100.0000 ns/op
OverheadActual  17: 1 op, 200.00 ns, 200.0000 ns/op
OverheadActual  18: 1 op, 200.00 ns, 200.0000 ns/op
OverheadActual  19: 1 op, 100.00 ns, 100.0000 ns/op
OverheadActual  20: 1 op, 100.00 ns, 100.0000 ns/op

WorkloadWarmup   1: 1 op, 15700.00 ns, 15.7000 us/op
WorkloadWarmup   2: 1 op, 12500.00 ns, 12.5000 us/op
WorkloadWarmup   3: 1 op, 12300.00 ns, 12.3000 us/op
WorkloadWarmup   4: 1 op, 12400.00 ns, 12.4000 us/op
WorkloadWarmup   5: 1 op, 12500.00 ns, 12.5000 us/op
WorkloadWarmup   6: 1 op, 12600.00 ns, 12.6000 us/op
WorkloadWarmup   7: 1 op, 12400.00 ns, 12.4000 us/op
WorkloadWarmup   8: 1 op, 12400.00 ns, 12.4000 us/op
WorkloadWarmup   9: 1 op, 13100.00 ns, 13.1000 us/op

// BeforeActualRun
WorkloadActual   1: 1 op, 12500.00 ns, 12.5000 us/op
WorkloadActual   2: 1 op, 12600.00 ns, 12.6000 us/op
WorkloadActual   3: 1 op, 12400.00 ns, 12.4000 us/op
WorkloadActual   4: 1 op, 12300.00 ns, 12.3000 us/op
WorkloadActual   5: 1 op, 12700.00 ns, 12.7000 us/op
WorkloadActual   6: 1 op, 15500.00 ns, 15.5000 us/op
WorkloadActual   7: 1 op, 16400.00 ns, 16.4000 us/op
WorkloadActual   8: 1 op, 15500.00 ns, 15.5000 us/op
WorkloadActual   9: 1 op, 12200.00 ns, 12.2000 us/op
WorkloadActual  10: 1 op, 12300.00 ns, 12.3000 us/op
WorkloadActual  11: 1 op, 15600.00 ns, 15.6000 us/op
WorkloadActual  12: 1 op, 12400.00 ns, 12.4000 us/op
WorkloadActual  13: 1 op, 12500.00 ns, 12.5000 us/op
WorkloadActual  14: 1 op, 12400.00 ns, 12.4000 us/op
WorkloadActual  15: 1 op, 12800.00 ns, 12.8000 us/op
WorkloadActual  16: 1 op, 12800.00 ns, 12.8000 us/op
WorkloadActual  17: 1 op, 12400.00 ns, 12.4000 us/op

// AfterActualRun
WorkloadResult   1: 1 op, 12300.00 ns, 12.3000 us/op
WorkloadResult   2: 1 op, 12400.00 ns, 12.4000 us/op
WorkloadResult   3: 1 op, 12200.00 ns, 12.2000 us/op
WorkloadResult   4: 1 op, 12100.00 ns, 12.1000 us/op
WorkloadResult   5: 1 op, 12500.00 ns, 12.5000 us/op
WorkloadResult   6: 1 op, 12000.00 ns, 12.0000 us/op
WorkloadResult   7: 1 op, 12100.00 ns, 12.1000 us/op
WorkloadResult   8: 1 op, 12200.00 ns, 12.2000 us/op
WorkloadResult   9: 1 op, 12300.00 ns, 12.3000 us/op
WorkloadResult  10: 1 op, 12200.00 ns, 12.2000 us/op
WorkloadResult  11: 1 op, 12600.00 ns, 12.6000 us/op
WorkloadResult  12: 1 op, 12600.00 ns, 12.6000 us/op
WorkloadResult  13: 1 op, 12200.00 ns, 12.2000 us/op

// AfterAll
// Benchmark Process 9096 has exited with code 0.

Mean = 12.285 μs, StdErr = 0.053 μs (0.43%), N = 13, StdDev = 0.191 μs
Min = 12.000 μs, Q1 = 12.200 μs, Median = 12.200 μs, Q3 = 12.400 μs, Max = 12.600 μs
IQR = 0.200 μs, LowerFence = 11.900 μs, UpperFence = 12.700 μs
ConfidenceInterval = [12.056 μs; 12.513 μs] (CI 99.9%), Margin = 0.229 μs (1.86% of Mean)
Skewness = 0.4, Kurtosis = 1.81, MValue = 2

// **************************
// Benchmark: LazySortedListBenchmark.SystemSortedListRemove: Job-UZWZTH(InvocationCount=1, UnrollFactor=1) [N=10000]
// *** Execute ***
// Launch: 1 / 1
// Execute: dotnet "bf18d94d-7dda-48e8-a69f-531024b3e97e.dll" --benchmarkName "ConvenientCollections.Benchmarks.LazySortedListBenchmark.SystemSortedListRemove(N: 10000)" --job "InvocationCount=1, UnrollFactor=1" --benchmarkId 16 in C:\Users\hacke\source\repos\CollectionBenchmarks\bin\Release\net6.0\bf18d94d-7dda-48e8-a69f-531024b3e97e\bin\Release\net6.0
// BeforeAnythingElse

// Benchmark Process Environment Information:
// Runtime=.NET 6.0.0 (6.0.21.52210), X64 RyuJIT
// GC=Concurrent Workstation
// Job: Job-THLWWL(InvocationCount=1, UnrollFactor=1)

OverheadJitting  1: 1 op, 185300.00 ns, 185.3000 us/op
WorkloadJitting  1: 1 op, 5741600.00 ns, 5.7416 ms/op

OverheadWarmup   1: 1 op, 100.00 ns, 100.0000 ns/op
OverheadWarmup   2: 1 op, 100.00 ns, 100.0000 ns/op
OverheadWarmup   3: 1 op, 200.00 ns, 200.0000 ns/op
OverheadWarmup   4: 1 op, 200.00 ns, 200.0000 ns/op
OverheadWarmup   5: 1 op, 200.00 ns, 200.0000 ns/op

OverheadActual   1: 1 op, 200.00 ns, 200.0000 ns/op
OverheadActual   2: 1 op, 200.00 ns, 200.0000 ns/op
OverheadActual   3: 1 op, 100.00 ns, 100.0000 ns/op
OverheadActual   4: 1 op, 100.00 ns, 100.0000 ns/op
OverheadActual   5: 1 op, 100.00 ns, 100.0000 ns/op
OverheadActual   6: 1 op, 100.00 ns, 100.0000 ns/op
OverheadActual   7: 1 op, 100.00 ns, 100.0000 ns/op
OverheadActual   8: 1 op, 200.00 ns, 200.0000 ns/op
OverheadActual   9: 1 op, 100.00 ns, 100.0000 ns/op
OverheadActual  10: 1 op, 200.00 ns, 200.0000 ns/op
OverheadActual  11: 1 op, 100.00 ns, 100.0000 ns/op
OverheadActual  12: 1 op, 100.00 ns, 100.0000 ns/op
OverheadActual  13: 1 op, 100.00 ns, 100.0000 ns/op
OverheadActual  14: 1 op, 100.00 ns, 100.0000 ns/op
OverheadActual  15: 1 op, 100.00 ns, 100.0000 ns/op
OverheadActual  16: 1 op, 100.00 ns, 100.0000 ns/op
OverheadActual  17: 1 op, 100.00 ns, 100.0000 ns/op

WorkloadWarmup   1: 1 op, 5388500.00 ns, 5.3885 ms/op
WorkloadWarmup   2: 1 op, 5360700.00 ns, 5.3607 ms/op
WorkloadWarmup   3: 1 op, 5826500.00 ns, 5.8265 ms/op
WorkloadWarmup   4: 1 op, 5361700.00 ns, 5.3617 ms/op
WorkloadWarmup   5: 1 op, 5386500.00 ns, 5.3865 ms/op
WorkloadWarmup   6: 1 op, 5580600.00 ns, 5.5806 ms/op
WorkloadWarmup   7: 1 op, 5414000.00 ns, 5.4140 ms/op

// BeforeActualRun
WorkloadActual   1: 1 op, 5374900.00 ns, 5.3749 ms/op
WorkloadActual   2: 1 op, 5419300.00 ns, 5.4193 ms/op
WorkloadActual   3: 1 op, 5380700.00 ns, 5.3807 ms/op
WorkloadActual   4: 1 op, 5431200.00 ns, 5.4312 ms/op
WorkloadActual   5: 1 op, 5407700.00 ns, 5.4077 ms/op
WorkloadActual   6: 1 op, 5405600.00 ns, 5.4056 ms/op
WorkloadActual   7: 1 op, 5475100.00 ns, 5.4751 ms/op
WorkloadActual   8: 1 op, 5459800.00 ns, 5.4598 ms/op
WorkloadActual   9: 1 op, 5464000.00 ns, 5.4640 ms/op
WorkloadActual  10: 1 op, 5449000.00 ns, 5.4490 ms/op
WorkloadActual  11: 1 op, 5678100.00 ns, 5.6781 ms/op
WorkloadActual  12: 1 op, 5610800.00 ns, 5.6108 ms/op
WorkloadActual  13: 1 op, 5398400.00 ns, 5.3984 ms/op
WorkloadActual  14: 1 op, 5529700.00 ns, 5.5297 ms/op
WorkloadActual  15: 1 op, 5435200.00 ns, 5.4352 ms/op

// AfterActualRun
WorkloadResult   1: 1 op, 5374800.00 ns, 5.3748 ms/op
WorkloadResult   2: 1 op, 5419200.00 ns, 5.4192 ms/op
WorkloadResult   3: 1 op, 5380600.00 ns, 5.3806 ms/op
WorkloadResult   4: 1 op, 5431100.00 ns, 5.4311 ms/op
WorkloadResult   5: 1 op, 5407600.00 ns, 5.4076 ms/op
WorkloadResult   6: 1 op, 5405500.00 ns, 5.4055 ms/op
WorkloadResult   7: 1 op, 5475000.00 ns, 5.4750 ms/op
WorkloadResult   8: 1 op, 5459700.00 ns, 5.4597 ms/op
WorkloadResult   9: 1 op, 5463900.00 ns, 5.4639 ms/op
WorkloadResult  10: 1 op, 5448900.00 ns, 5.4489 ms/op
WorkloadResult  11: 1 op, 5398300.00 ns, 5.3983 ms/op
WorkloadResult  12: 1 op, 5529600.00 ns, 5.5296 ms/op
WorkloadResult  13: 1 op, 5435100.00 ns, 5.4351 ms/op

// AfterAll
// Benchmark Process 26124 has exited with code 0.

Mean = 5.433 ms, StdErr = 0.012 ms (0.22%), N = 13, StdDev = 0.043 ms
Min = 5.375 ms, Q1 = 5.405 ms, Median = 5.431 ms, Q3 = 5.460 ms, Max = 5.530 ms
IQR = 0.054 ms, LowerFence = 5.324 ms, UpperFence = 5.541 ms
ConfidenceInterval = [5.382 ms; 5.484 ms] (CI 99.9%), Margin = 0.051 ms (0.94% of Mean)
Skewness = 0.59, Kurtosis = 2.6, MValue = 2

// **************************
// Benchmark: LazySortedListBenchmark.LazySortedListRemove: Job-UZWZTH(InvocationCount=1, UnrollFactor=1) [N=10000]
// *** Execute ***
// Launch: 1 / 1
// Execute: dotnet "bf18d94d-7dda-48e8-a69f-531024b3e97e.dll" --benchmarkName "ConvenientCollections.Benchmarks.LazySortedListBenchmark.LazySortedListRemove(N: 10000)" --job "InvocationCount=1, UnrollFactor=1" --benchmarkId 17 in C:\Users\hacke\source\repos\CollectionBenchmarks\bin\Release\net6.0\bf18d94d-7dda-48e8-a69f-531024b3e97e\bin\Release\net6.0
// BeforeAnythingElse

// Benchmark Process Environment Information:
// Runtime=.NET 6.0.0 (6.0.21.52210), X64 RyuJIT
// GC=Concurrent Workstation
// Job: Job-OPFCFN(InvocationCount=1, UnrollFactor=1)

OverheadJitting  1: 1 op, 174200.00 ns, 174.2000 us/op
WorkloadJitting  1: 1 op, 8933200.00 ns, 8.9332 ms/op

OverheadWarmup   1: 1 op, 200.00 ns, 200.0000 ns/op
OverheadWarmup   2: 1 op, 100.00 ns, 100.0000 ns/op
OverheadWarmup   3: 1 op, 200.00 ns, 200.0000 ns/op
OverheadWarmup   4: 1 op, 100.00 ns, 100.0000 ns/op
OverheadWarmup   5: 1 op, 100.00 ns, 100.0000 ns/op
OverheadWarmup   6: 1 op, 100.00 ns, 100.0000 ns/op

OverheadActual   1: 1 op, 200.00 ns, 200.0000 ns/op
OverheadActual   2: 1 op, 200.00 ns, 200.0000 ns/op
OverheadActual   3: 1 op, 200.00 ns, 200.0000 ns/op
OverheadActual   4: 1 op, 100.00 ns, 100.0000 ns/op
OverheadActual   5: 1 op, 100.00 ns, 100.0000 ns/op
OverheadActual   6: 1 op, 100.00 ns, 100.0000 ns/op
OverheadActual   7: 1 op, 200.00 ns, 200.0000 ns/op
OverheadActual   8: 1 op, 100.00 ns, 100.0000 ns/op
OverheadActual   9: 1 op, 200.00 ns, 200.0000 ns/op
OverheadActual  10: 1 op, 100.00 ns, 100.0000 ns/op
OverheadActual  11: 1 op, 200.00 ns, 200.0000 ns/op
OverheadActual  12: 1 op, 100.00 ns, 100.0000 ns/op
OverheadActual  13: 1 op, 200.00 ns, 200.0000 ns/op
OverheadActual  14: 1 op, 200.00 ns, 200.0000 ns/op
OverheadActual  15: 1 op, 200.00 ns, 200.0000 ns/op
OverheadActual  16: 1 op, 200.00 ns, 200.0000 ns/op
OverheadActual  17: 1 op, 100.00 ns, 100.0000 ns/op
OverheadActual  18: 1 op, 200.00 ns, 200.0000 ns/op
OverheadActual  19: 1 op, 200.00 ns, 200.0000 ns/op
OverheadActual  20: 1 op, 100.00 ns, 100.0000 ns/op

WorkloadWarmup   1: 1 op, 5150500.00 ns, 5.1505 ms/op
WorkloadWarmup   2: 1 op, 5141200.00 ns, 5.1412 ms/op
WorkloadWarmup   3: 1 op, 5189300.00 ns, 5.1893 ms/op
WorkloadWarmup   4: 1 op, 5154700.00 ns, 5.1547 ms/op
WorkloadWarmup   5: 1 op, 5166500.00 ns, 5.1665 ms/op
WorkloadWarmup   6: 1 op, 5150500.00 ns, 5.1505 ms/op

// BeforeActualRun
WorkloadActual   1: 1 op, 5180500.00 ns, 5.1805 ms/op
WorkloadActual   2: 1 op, 5198500.00 ns, 5.1985 ms/op
WorkloadActual   3: 1 op, 5147700.00 ns, 5.1477 ms/op
WorkloadActual   4: 1 op, 5155200.00 ns, 5.1552 ms/op
WorkloadActual   5: 1 op, 5172500.00 ns, 5.1725 ms/op
WorkloadActual   6: 1 op, 5138200.00 ns, 5.1382 ms/op
WorkloadActual   7: 1 op, 5147500.00 ns, 5.1475 ms/op
WorkloadActual   8: 1 op, 5183900.00 ns, 5.1839 ms/op
WorkloadActual   9: 1 op, 5145000.00 ns, 5.1450 ms/op
WorkloadActual  10: 1 op, 5184700.00 ns, 5.1847 ms/op
WorkloadActual  11: 1 op, 5143900.00 ns, 5.1439 ms/op
WorkloadActual  12: 1 op, 5179000.00 ns, 5.1790 ms/op
WorkloadActual  13: 1 op, 5219200.00 ns, 5.2192 ms/op
WorkloadActual  14: 1 op, 5121500.00 ns, 5.1215 ms/op
WorkloadActual  15: 1 op, 5185900.00 ns, 5.1859 ms/op

// AfterActualRun
WorkloadResult   1: 1 op, 5180300.00 ns, 5.1803 ms/op
WorkloadResult   2: 1 op, 5198300.00 ns, 5.1983 ms/op
WorkloadResult   3: 1 op, 5147500.00 ns, 5.1475 ms/op
WorkloadResult   4: 1 op, 5155000.00 ns, 5.1550 ms/op
WorkloadResult   5: 1 op, 5172300.00 ns, 5.1723 ms/op
WorkloadResult   6: 1 op, 5138000.00 ns, 5.1380 ms/op
WorkloadResult   7: 1 op, 5147300.00 ns, 5.1473 ms/op
WorkloadResult   8: 1 op, 5183700.00 ns, 5.1837 ms/op
WorkloadResult   9: 1 op, 5144800.00 ns, 5.1448 ms/op
WorkloadResult  10: 1 op, 5184500.00 ns, 5.1845 ms/op
WorkloadResult  11: 1 op, 5143700.00 ns, 5.1437 ms/op
WorkloadResult  12: 1 op, 5178800.00 ns, 5.1788 ms/op
WorkloadResult  13: 1 op, 5219000.00 ns, 5.2190 ms/op
WorkloadResult  14: 1 op, 5121300.00 ns, 5.1213 ms/op
WorkloadResult  15: 1 op, 5185700.00 ns, 5.1857 ms/op

// AfterAll
// Benchmark Process 12460 has exited with code 0.

Mean = 5.167 ms, StdErr = 0.007 ms (0.13%), N = 15, StdDev = 0.027 ms
Min = 5.121 ms, Q1 = 5.146 ms, Median = 5.172 ms, Q3 = 5.184 ms, Max = 5.219 ms
IQR = 0.038 ms, LowerFence = 5.089 ms, UpperFence = 5.241 ms
ConfidenceInterval = [5.138 ms; 5.195 ms] (CI 99.9%), Margin = 0.028 ms (0.55% of Mean)
Skewness = 0.15, Kurtosis = 1.97, MValue = 2

// ***** BenchmarkRunner: Finish  *****

// * Export *
  BenchmarkDotNet.Artifacts\results\ConvenientCollections.Benchmarks.LazySortedListBenchmark-report.csv
  BenchmarkDotNet.Artifacts\results\ConvenientCollections.Benchmarks.LazySortedListBenchmark-report-github.md
  BenchmarkDotNet.Artifacts\results\ConvenientCollections.Benchmarks.LazySortedListBenchmark-report.html

// * Detailed results *
LazySortedListBenchmark.SystemSortedListGet: Job-UZWZTH(InvocationCount=1, UnrollFactor=1) [N=1000]
Runtime = .NET 6.0.0 (6.0.21.52210), X64 RyuJIT; GC = Concurrent Workstation
Mean = 33.228 μs, StdErr = 0.262 μs (0.79%), N = 97, StdDev = 2.581 μs
Min = 28.300 μs, Q1 = 31.400 μs, Median = 33.400 μs, Q3 = 34.900 μs, Max = 38.900 μs
IQR = 3.500 μs, LowerFence = 26.150 μs, UpperFence = 40.150 μs
ConfidenceInterval = [32.338 μs; 34.118 μs] (CI 99.9%), Margin = 0.890 μs (2.68% of Mean)
Skewness = 0.11, Kurtosis = 2.37, MValue = 3.11
-------------------- Histogram --------------------
[27.913 μs ; 29.663 μs) | @@@@@@@@
[29.663 μs ; 31.363 μs) | @@@@@@@@@@@@@@@@
[31.363 μs ; 32.837 μs) | @@@@@@@@@@@@@@@@@@@@@
[32.837 μs ; 33.663 μs) | @@@@@@
[33.663 μs ; 35.137 μs) | @@@@@@@@@@@@@@@@@@@@@@@@@@@
[35.137 μs ; 36.637 μs) | @@@@@@@@@
[36.637 μs ; 38.037 μs) | @@@@@@
[38.037 μs ; 39.637 μs) | @@@@
---------------------------------------------------

LazySortedListBenchmark.LazySortedListGet: Job-UZWZTH(InvocationCount=1, UnrollFactor=1) [N=1000]
Runtime = .NET 6.0.0 (6.0.21.52210), X64 RyuJIT; GC = Concurrent Workstation
Mean = 25.912 μs, StdErr = 0.391 μs (1.51%), N = 98, StdDev = 3.866 μs
Min = 19.000 μs, Q1 = 23.000 μs, Median = 25.550 μs, Q3 = 28.475 μs, Max = 36.700 μs
IQR = 5.475 μs, LowerFence = 14.787 μs, UpperFence = 36.688 μs
ConfidenceInterval = [24.587 μs; 27.238 μs] (CI 99.9%), Margin = 1.325 μs (5.12% of Mean)
Skewness = 0.68, Kurtosis = 3.22, MValue = 4.5
-------------------- Histogram --------------------
[18.849 μs ; 20.999 μs) | @@@@@@@
[20.999 μs ; 23.201 μs) | @@@@@@@@@@@@@@@@@@@@@
[23.201 μs ; 26.101 μs) | @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
[26.101 μs ; 27.399 μs) | @@@@@@@
[27.399 μs ; 29.601 μs) | @@@@@@@@@@@@@@@@@@@@
[29.601 μs ; 31.301 μs) | @@@@@@
[31.301 μs ; 32.299 μs) | 
[32.299 μs ; 35.199 μs) | @@@
[35.199 μs ; 37.801 μs) | @@@@
---------------------------------------------------

LazySortedListBenchmark.SystemSortedListAdd: Job-UZWZTH(InvocationCount=1, UnrollFactor=1) [N=1000]
Runtime = .NET 6.0.0 (6.0.21.52210), X64 RyuJIT; GC = Concurrent Workstation
Mean = 21.313 μs, StdErr = 0.043 μs (0.20%), N = 15, StdDev = 0.168 μs
Min = 21.100 μs, Q1 = 21.150 μs, Median = 21.400 μs, Q3 = 21.400 μs, Max = 21.600 μs
IQR = 0.250 μs, LowerFence = 20.775 μs, UpperFence = 21.775 μs
ConfidenceInterval = [21.133 μs; 21.493 μs] (CI 99.9%), Margin = 0.180 μs (0.85% of Mean)
Skewness = -0.03, Kurtosis = 1.5, MValue = 2
-------------------- Histogram --------------------
[21.010 μs ; 21.665 μs) | @@@@@@@@@@@@@@@
---------------------------------------------------

LazySortedListBenchmark.LazySortedListAdd: Job-UZWZTH(InvocationCount=1, UnrollFactor=1) [N=1000]
Runtime = .NET 6.0.0 (6.0.21.52210), X64 RyuJIT; GC = Concurrent Workstation
Mean = 1.269 μs, StdErr = 0.008 μs (0.63%), N = 81, StdDev = 0.072 μs
Min = 1.100 μs, Q1 = 1.200 μs, Median = 1.300 μs, Q3 = 1.300 μs, Max = 1.400 μs
IQR = 0.100 μs, LowerFence = 1.050 μs, UpperFence = 1.450 μs
ConfidenceInterval = [1.242 μs; 1.296 μs] (CI 99.9%), Margin = 0.027 μs (2.15% of Mean)
Skewness = 0.32, Kurtosis = 2.25, MValue = 4.63
-------------------- Histogram --------------------
[1.078 μs ; 1.122 μs) | @
[1.122 μs ; 1.165 μs) | 
[1.165 μs ; 1.222 μs) | @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
[1.222 μs ; 1.265 μs) | 
[1.265 μs ; 1.322 μs) | @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
[1.322 μs ; 1.378 μs) | 
[1.378 μs ; 1.422 μs) | @@@@@@@@@@@
---------------------------------------------------

LazySortedListBenchmark.SystemSortedListRemove: Job-UZWZTH(InvocationCount=1, UnrollFactor=1) [N=1000]
Runtime = .NET 6.0.0 (6.0.21.52210), X64 RyuJIT; GC = Concurrent Workstation
Mean = 82.550 μs, StdErr = 0.164 μs (0.20%), N = 14, StdDev = 0.615 μs
Min = 81.800 μs, Q1 = 82.225 μs, Median = 82.400 μs, Q3 = 82.825 μs, Max = 84.100 μs
IQR = 0.600 μs, LowerFence = 81.325 μs, UpperFence = 83.725 μs
ConfidenceInterval = [81.856 μs; 83.244 μs] (CI 99.9%), Margin = 0.694 μs (0.84% of Mean)
Skewness = 0.97, Kurtosis = 3.37, MValue = 2
-------------------- Histogram --------------------
[81.465 μs ; 84.435 μs) | @@@@@@@@@@@@@@
---------------------------------------------------

LazySortedListBenchmark.LazySortedListRemove: Job-UZWZTH(InvocationCount=1, UnrollFactor=1) [N=1000]
Runtime = .NET 6.0.0 (6.0.21.52210), X64 RyuJIT; GC = Concurrent Workstation
Mean = 57.561 μs, StdErr = 0.225 μs (0.39%), N = 19, StdDev = 0.983 μs
Min = 56.450 μs, Q1 = 57.000 μs, Median = 57.250 μs, Q3 = 57.650 μs, Max = 60.150 μs
IQR = 0.650 μs, LowerFence = 56.025 μs, UpperFence = 58.625 μs
ConfidenceInterval = [56.677 μs; 58.445 μs] (CI 99.9%), Margin = 0.884 μs (1.54% of Mean)
Skewness = 1.34, Kurtosis = 3.77, MValue = 2
-------------------- Histogram --------------------
[55.967 μs ; 57.923 μs) | @@@@@@@@@@@@@@@@
[57.923 μs ; 60.297 μs) | @@@
---------------------------------------------------

LazySortedListBenchmark.SystemSortedListGet: Job-UZWZTH(InvocationCount=1, UnrollFactor=1) [N=5000]
Runtime = .NET 6.0.0 (6.0.21.52210), X64 RyuJIT; GC = Concurrent Workstation
Mean = 210.916 μs, StdErr = 1.236 μs (0.59%), N = 93, StdDev = 11.923 μs
Min = 189.300 μs, Q1 = 203.300 μs, Median = 208.200 μs, Q3 = 220.200 μs, Max = 247.200 μs
IQR = 16.900 μs, LowerFence = 177.950 μs, UpperFence = 245.550 μs
ConfidenceInterval = [206.713 μs; 215.119 μs] (CI 99.9%), Margin = 4.203 μs (1.99% of Mean)
Skewness = 0.67, Kurtosis = 3.34, MValue = 2.67
-------------------- Histogram --------------------
[187.996 μs ; 194.896 μs) | @@@@@
[194.896 μs ; 202.796 μs) | @@@@@@@@@@@@@@@
[202.796 μs ; 209.704 μs) | @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
[209.704 μs ; 219.946 μs) | @@@@@@@@@@@@@
[219.946 μs ; 226.854 μs) | @@@@@@@@@@@@@@@@@@@@@
[226.854 μs ; 232.004 μs) | @@@
[232.004 μs ; 238.912 μs) | 
[238.912 μs ; 249.054 μs) | @@@
---------------------------------------------------

LazySortedListBenchmark.LazySortedListGet: Job-UZWZTH(InvocationCount=1, UnrollFactor=1) [N=5000]
Runtime = .NET 6.0.0 (6.0.21.52210), X64 RyuJIT; GC = Concurrent Workstation
Mean = 163.482 μs, StdErr = 0.800 μs (0.49%), N = 17, StdDev = 3.298 μs
Min = 158.100 μs, Q1 = 161.600 μs, Median = 164.000 μs, Q3 = 165.600 μs, Max = 168.900 μs
IQR = 4.000 μs, LowerFence = 155.600 μs, UpperFence = 171.600 μs
ConfidenceInterval = [160.270 μs; 166.694 μs] (CI 99.9%), Margin = 3.212 μs (1.96% of Mean)
Skewness = -0.07, Kurtosis = 1.78, MValue = 2
-------------------- Histogram --------------------
[156.416 μs ; 162.316 μs) | @@@@@@
[162.316 μs ; 166.616 μs) | @@@@@@@@
[166.616 μs ; 170.584 μs) | @@@
---------------------------------------------------

LazySortedListBenchmark.SystemSortedListAdd: Job-UZWZTH(InvocationCount=1, UnrollFactor=1) [N=5000]
Runtime = .NET 6.0.0 (6.0.21.52210), X64 RyuJIT; GC = Concurrent Workstation
Mean = 116.464 μs, StdErr = 0.184 μs (0.16%), N = 14, StdDev = 0.690 μs
Min = 115.000 μs, Q1 = 115.875 μs, Median = 116.800 μs, Q3 = 116.900 μs, Max = 117.200 μs
IQR = 1.025 μs, LowerFence = 114.338 μs, UpperFence = 118.438 μs
ConfidenceInterval = [115.686 μs; 117.243 μs] (CI 99.9%), Margin = 0.779 μs (0.67% of Mean)
Skewness = -0.91, Kurtosis = 2.13, MValue = 2
-------------------- Histogram --------------------
[114.624 μs ; 117.576 μs) | @@@@@@@@@@@@@@
---------------------------------------------------

LazySortedListBenchmark.LazySortedListAdd: Job-UZWZTH(InvocationCount=1, UnrollFactor=1) [N=5000]
Runtime = .NET 6.0.0 (6.0.21.52210), X64 RyuJIT; GC = Concurrent Workstation
Mean = 6.208 μs, StdErr = 0.023 μs (0.37%), N = 12, StdDev = 0.079 μs
Min = 6.100 μs, Q1 = 6.175 μs, Median = 6.200 μs, Q3 = 6.300 μs, Max = 6.300 μs
IQR = 0.125 μs, LowerFence = 5.987 μs, UpperFence = 6.487 μs
ConfidenceInterval = [6.107 μs; 6.310 μs] (CI 99.9%), Margin = 0.102 μs (1.64% of Mean)
Skewness = -0.12, Kurtosis = 1.47, MValue = 2
-------------------- Histogram --------------------
[6.055 μs ; 6.345 μs) | @@@@@@@@@@@@
---------------------------------------------------

LazySortedListBenchmark.SystemSortedListRemove: Job-UZWZTH(InvocationCount=1, UnrollFactor=1) [N=5000]
Runtime = .NET 6.0.0 (6.0.21.52210), X64 RyuJIT; GC = Concurrent Workstation
Mean = 1.363 ms, StdErr = 0.003 ms (0.24%), N = 12, StdDev = 0.011 ms
Min = 1.347 ms, Q1 = 1.354 ms, Median = 1.361 ms, Q3 = 1.373 ms, Max = 1.380 ms
IQR = 0.019 ms, LowerFence = 1.325 ms, UpperFence = 1.402 ms
ConfidenceInterval = [1.348 ms; 1.378 ms] (CI 99.9%), Margin = 0.015 ms (1.07% of Mean)
Skewness = 0.2, Kurtosis = 1.48, MValue = 2
-------------------- Histogram --------------------
[1.344 ms ; 1.387 ms) | @@@@@@@@@@@@
---------------------------------------------------

LazySortedListBenchmark.LazySortedListRemove: Job-UZWZTH(InvocationCount=1, UnrollFactor=1) [N=5000]
Runtime = .NET 6.0.0 (6.0.21.52210), X64 RyuJIT; GC = Concurrent Workstation
Mean = 1.280 ms, StdErr = 0.003 ms (0.25%), N = 14, StdDev = 0.012 ms
Min = 1.262 ms, Q1 = 1.270 ms, Median = 1.284 ms, Q3 = 1.287 ms, Max = 1.304 ms
IQR = 0.017 ms, LowerFence = 1.244 ms, UpperFence = 1.312 ms
ConfidenceInterval = [1.266 ms; 1.294 ms] (CI 99.9%), Margin = 0.014 ms (1.06% of Mean)
Skewness = 0.1, Kurtosis = 2.02, MValue = 2
-------------------- Histogram --------------------
[1.255 ms ; 1.311 ms) | @@@@@@@@@@@@@@
---------------------------------------------------

LazySortedListBenchmark.SystemSortedListGet: Job-UZWZTH(InvocationCount=1, UnrollFactor=1) [N=10000]
Runtime = .NET 6.0.0 (6.0.21.52210), X64 RyuJIT; GC = Concurrent Workstation
Mean = 429.432 μs, StdErr = 2.382 μs (0.55%), N = 37, StdDev = 14.491 μs
Min = 403.300 μs, Q1 = 421.400 μs, Median = 427.400 μs, Q3 = 436.700 μs, Max = 457.000 μs
IQR = 15.300 μs, LowerFence = 398.450 μs, UpperFence = 459.650 μs
ConfidenceInterval = [420.899 μs; 437.966 μs] (CI 99.9%), Margin = 8.534 μs (1.99% of Mean)
Skewness = 0.19, Kurtosis = 2.32, MValue = 2
-------------------- Histogram --------------------
[400.592 μs ; 412.492 μs) | @@@@@
[412.492 μs ; 423.842 μs) | @@@@@@@
[423.842 μs ; 435.258 μs) | @@@@@@@@@@@@@@
[435.258 μs ; 448.642 μs) | @@@@@@
[448.642 μs ; 460.058 μs) | @@@@@
---------------------------------------------------

LazySortedListBenchmark.LazySortedListGet: Job-UZWZTH(InvocationCount=1, UnrollFactor=1) [N=10000]
Runtime = .NET 6.0.0 (6.0.21.52210), X64 RyuJIT; GC = Concurrent Workstation
Mean = 339.037 μs, StdErr = 1.792 μs (0.53%), N = 30, StdDev = 9.813 μs
Min = 315.900 μs, Q1 = 333.800 μs, Median = 340.250 μs, Q3 = 345.650 μs, Max = 358.500 μs
IQR = 11.850 μs, LowerFence = 316.025 μs, UpperFence = 363.425 μs
ConfidenceInterval = [332.481 μs; 345.593 μs] (CI 99.9%), Margin = 6.556 μs (1.93% of Mean)
Skewness = -0.52, Kurtosis = 3.2, MValue = 2.25
-------------------- Histogram --------------------
[315.105 μs ; 323.395 μs) | @@@
[323.395 μs ; 330.005 μs) | 
[330.005 μs ; 338.855 μs) | @@@@@@@@@
[338.855 μs ; 347.145 μs) | @@@@@@@@@@@@@@
[347.145 μs ; 362.645 μs) | @@@@
---------------------------------------------------

LazySortedListBenchmark.SystemSortedListAdd: Job-UZWZTH(InvocationCount=1, UnrollFactor=1) [N=10000]
Runtime = .NET 6.0.0 (6.0.21.52210), X64 RyuJIT; GC = Concurrent Workstation
Mean = 245.762 μs, StdErr = 0.664 μs (0.27%), N = 13, StdDev = 2.394 μs
Min = 242.100 μs, Q1 = 245.000 μs, Median = 245.100 μs, Q3 = 245.200 μs, Max = 250.200 μs
IQR = 0.200 μs, LowerFence = 244.700 μs, UpperFence = 245.500 μs
ConfidenceInterval = [242.895 μs; 248.628 μs] (CI 99.9%), Margin = 2.866 μs (1.17% of Mean)
Skewness = 0.63, Kurtosis = 2.26, MValue = 2
-------------------- Histogram --------------------
[241.758 μs ; 251.536 μs) | @@@@@@@@@@@@@
---------------------------------------------------

LazySortedListBenchmark.LazySortedListAdd: Job-UZWZTH(InvocationCount=1, UnrollFactor=1) [N=10000]
Runtime = .NET 6.0.0 (6.0.21.52210), X64 RyuJIT; GC = Concurrent Workstation
Mean = 12.285 μs, StdErr = 0.053 μs (0.43%), N = 13, StdDev = 0.191 μs
Min = 12.000 μs, Q1 = 12.200 μs, Median = 12.200 μs, Q3 = 12.400 μs, Max = 12.600 μs
IQR = 0.200 μs, LowerFence = 11.900 μs, UpperFence = 12.700 μs
ConfidenceInterval = [12.056 μs; 12.513 μs] (CI 99.9%), Margin = 0.229 μs (1.86% of Mean)
Skewness = 0.4, Kurtosis = 1.81, MValue = 2
-------------------- Histogram --------------------
[11.893 μs ; 12.322 μs) | @@@@@@@@@
[12.322 μs ; 12.625 μs) | @@@@
---------------------------------------------------

LazySortedListBenchmark.SystemSortedListRemove: Job-UZWZTH(InvocationCount=1, UnrollFactor=1) [N=10000]
Runtime = .NET 6.0.0 (6.0.21.52210), X64 RyuJIT; GC = Concurrent Workstation
Mean = 5.433 ms, StdErr = 0.012 ms (0.22%), N = 13, StdDev = 0.043 ms
Min = 5.375 ms, Q1 = 5.405 ms, Median = 5.431 ms, Q3 = 5.460 ms, Max = 5.530 ms
IQR = 0.054 ms, LowerFence = 5.324 ms, UpperFence = 5.541 ms
ConfidenceInterval = [5.382 ms; 5.484 ms] (CI 99.9%), Margin = 0.051 ms (0.94% of Mean)
Skewness = 0.59, Kurtosis = 2.6, MValue = 2
-------------------- Histogram --------------------
[5.363 ms ; 5.553 ms) | @@@@@@@@@@@@@
---------------------------------------------------

LazySortedListBenchmark.LazySortedListRemove: Job-UZWZTH(InvocationCount=1, UnrollFactor=1) [N=10000]
Runtime = .NET 6.0.0 (6.0.21.52210), X64 RyuJIT; GC = Concurrent Workstation
Mean = 5.167 ms, StdErr = 0.007 ms (0.13%), N = 15, StdDev = 0.027 ms
Min = 5.121 ms, Q1 = 5.146 ms, Median = 5.172 ms, Q3 = 5.184 ms, Max = 5.219 ms
IQR = 0.038 ms, LowerFence = 5.089 ms, UpperFence = 5.241 ms
ConfidenceInterval = [5.138 ms; 5.195 ms] (CI 99.9%), Margin = 0.028 ms (0.55% of Mean)
Skewness = 0.15, Kurtosis = 1.97, MValue = 2
-------------------- Histogram --------------------
[5.107 ms ; 5.233 ms) | @@@@@@@@@@@@@@@
---------------------------------------------------

// * Summary *

BenchmarkDotNet=v0.13.1, OS=Windows 10.0.19043.1586 (21H1/May2021Update)
AMD Ryzen 7 5800H with Radeon Graphics, 1 CPU, 16 logical and 8 physical cores
.NET SDK=6.0.100
  [Host]     : .NET 6.0.0 (6.0.21.52210), X64 RyuJIT
  Job-UZWZTH : .NET 6.0.0 (6.0.21.52210), X64 RyuJIT

InvocationCount=1  UnrollFactor=1  

|                 Method |     N |         Mean |      Error |     StdDev |       Median |
|----------------------- |------ |-------------:|-----------:|-----------:|-------------:|
|    SystemSortedListGet |  1000 |    33.228 μs |  0.8897 μs |  2.5811 μs |    33.400 μs |
|      LazySortedListGet |  1000 |    25.912 μs |  1.3254 μs |  3.8663 μs |    25.550 μs |
|    SystemSortedListAdd |  1000 |    21.313 μs |  0.1801 μs |  0.1685 μs |    21.400 μs |
|      LazySortedListAdd |  1000 |     1.269 μs |  0.0273 μs |  0.0718 μs |     1.300 μs |
| SystemSortedListRemove |  1000 |    82.550 μs |  0.6936 μs |  0.6149 μs |    82.400 μs |
|   LazySortedListRemove |  1000 |    57.561 μs |  0.8840 μs |  0.9826 μs |    57.250 μs |
|    SystemSortedListGet |  5000 |   210.916 μs |  4.2031 μs | 11.9234 μs |   208.200 μs |
|      LazySortedListGet |  5000 |   163.482 μs |  3.2119 μs |  3.2983 μs |   164.000 μs |
|    SystemSortedListAdd |  5000 |   116.464 μs |  0.7785 μs |  0.6902 μs |   116.800 μs |
|      LazySortedListAdd |  5000 |     6.208 μs |  0.1016 μs |  0.0793 μs |     6.200 μs |
| SystemSortedListRemove |  5000 | 1,362.992 μs | 14.5653 μs | 11.3716 μs | 1,361.050 μs |
|   LazySortedListRemove |  5000 | 1,280.043 μs | 13.6281 μs | 12.0809 μs | 1,283.900 μs |
|    SystemSortedListGet | 10000 |   429.432 μs |  8.5335 μs | 14.4905 μs |   427.400 μs |
|      LazySortedListGet | 10000 |   339.037 μs |  6.5561 μs |  9.8129 μs |   340.250 μs |
|    SystemSortedListAdd | 10000 |   245.762 μs |  2.8664 μs |  2.3936 μs |   245.100 μs |
|      LazySortedListAdd | 10000 |    12.285 μs |  0.2285 μs |  0.1908 μs |    12.200 μs |
| SystemSortedListRemove | 10000 | 5,433.023 μs | 51.2208 μs | 42.7717 μs | 5,431.100 μs |
|   LazySortedListRemove | 10000 | 5,166.680 μs | 28.3406 μs | 26.5098 μs | 5,172.300 μs |

// * Warnings *
MinIterationTime
  LazySortedListBenchmark.SystemSortedListGet: InvocationCount=1, UnrollFactor=1    -> The minimum observed iteration time is 28.4000 μs which is very small. It's recommended to increase it to at least 100.0000 ms using more operations.
  LazySortedListBenchmark.LazySortedListGet: InvocationCount=1, UnrollFactor=1      -> The minimum observed iteration time is 19.1000 μs which is very small. It's recommended to increase it to at least 100.0000 ms using more operations.
  LazySortedListBenchmark.SystemSortedListAdd: InvocationCount=1, UnrollFactor=1    -> The minimum observed iteration time is 21.2000 μs which is very small. It's recommended to increase it to at least 100.0000 ms using more operations.
  LazySortedListBenchmark.LazySortedListAdd: InvocationCount=1, UnrollFactor=1      -> The minimum observed iteration time is 1.2000 μs which is very small. It's recommended to increase it to at least 100.0000 ms using more operations.
  LazySortedListBenchmark.SystemSortedListRemove: InvocationCount=1, UnrollFactor=1 -> The minimum observed iteration time is 81.9000 μs which is very small. It's recommended to increase it to at least 100.0000 ms using more operations.
  LazySortedListBenchmark.LazySortedListRemove: InvocationCount=1, UnrollFactor=1   -> The minimum observed iteration time is 56.6000 μs which is very small. It's recommended to increase it to at least 100.0000 ms using more operations.
  LazySortedListBenchmark.SystemSortedListGet: InvocationCount=1, UnrollFactor=1    -> The minimum observed iteration time is 189.4000 μs which is very small. It's recommended to increase it to at least 100.0000 ms using more operations.
  LazySortedListBenchmark.LazySortedListGet: InvocationCount=1, UnrollFactor=1      -> The minimum observed iteration time is 158.2000 μs which is very small. It's recommended to increase it to at least 100.0000 ms using more operations.
  LazySortedListBenchmark.SystemSortedListAdd: InvocationCount=1, UnrollFactor=1    -> The minimum observed iteration time is 115.1000 μs which is very small. It's recommended to increase it to at least 100.0000 ms using more operations.
  LazySortedListBenchmark.LazySortedListAdd: InvocationCount=1, UnrollFactor=1      -> The minimum observed iteration time is 6.2000 μs which is very small. It's recommended to increase it to at least 100.0000 ms using more operations.
  LazySortedListBenchmark.SystemSortedListRemove: InvocationCount=1, UnrollFactor=1 -> The minimum observed iteration time is 1.3466 ms which is very small. It's recommended to increase it to at least 100.0000 ms using more operations.
  LazySortedListBenchmark.LazySortedListRemove: InvocationCount=1, UnrollFactor=1   -> The minimum observed iteration time is 1.2616 ms which is very small. It's recommended to increase it to at least 100.0000 ms using more operations.
  LazySortedListBenchmark.SystemSortedListGet: InvocationCount=1, UnrollFactor=1    -> The minimum observed iteration time is 403.4000 μs which is very small. It's recommended to increase it to at least 100.0000 ms using more operations.
  LazySortedListBenchmark.LazySortedListGet: InvocationCount=1, UnrollFactor=1      -> The minimum observed iteration time is 316.0000 μs which is very small. It's recommended to increase it to at least 100.0000 ms using more operations.
  LazySortedListBenchmark.SystemSortedListAdd: InvocationCount=1, UnrollFactor=1    -> The minimum observed iteration time is 242.2000 μs which is very small. It's recommended to increase it to at least 100.0000 ms using more operations.
  LazySortedListBenchmark.LazySortedListAdd: InvocationCount=1, UnrollFactor=1      -> The minimum observed iteration time is 12.2000 μs which is very small. It's recommended to increase it to at least 100.0000 ms using more operations.
  LazySortedListBenchmark.SystemSortedListRemove: InvocationCount=1, UnrollFactor=1 -> The minimum observed iteration time is 5.3749 ms which is very small. It's recommended to increase it to at least 100.0000 ms using more operations.
  LazySortedListBenchmark.LazySortedListRemove: InvocationCount=1, UnrollFactor=1   -> The minimum observed iteration time is 5.1215 ms which is very small. It's recommended to increase it to at least 100.0000 ms using more operations.
MultimodalDistribution
  LazySortedListBenchmark.SystemSortedListGet: InvocationCount=1, UnrollFactor=1 -> It seems that the distribution can have several modes (mValue = 3.11)
  LazySortedListBenchmark.LazySortedListGet: InvocationCount=1, UnrollFactor=1   -> It seems that the distribution is multimodal (mValue = 4.5)
  LazySortedListBenchmark.LazySortedListAdd: InvocationCount=1, UnrollFactor=1   -> It seems that the distribution is multimodal (mValue = 4.63)

// * Hints *
Outliers
  LazySortedListBenchmark.SystemSortedListGet: InvocationCount=1, UnrollFactor=1    -> 3 outliers were removed (42.50 μs..43.90 μs)
  LazySortedListBenchmark.LazySortedListGet: InvocationCount=1, UnrollFactor=1      -> 2 outliers were removed (37.20 μs, 38.60 μs)
  LazySortedListBenchmark.LazySortedListAdd: InvocationCount=1, UnrollFactor=1      -> 11 outliers were removed (1.60 μs..2.10 μs)
  LazySortedListBenchmark.SystemSortedListRemove: InvocationCount=1, UnrollFactor=1 -> 1 outlier  was  removed (102.90 μs)
  LazySortedListBenchmark.LazySortedListRemove: InvocationCount=1, UnrollFactor=1   -> 6 outliers were removed (64.90 μs..77.00 μs)
  LazySortedListBenchmark.SystemSortedListGet: InvocationCount=1, UnrollFactor=1    -> 4 outliers were removed (256.50 μs..275.20 μs)
  LazySortedListBenchmark.LazySortedListGet: InvocationCount=1, UnrollFactor=1      -> 1 outlier  was  removed (198.70 μs)
  LazySortedListBenchmark.SystemSortedListAdd: InvocationCount=1, UnrollFactor=1    -> 1 outlier  was  removed, 2 outliers were detected (115.10 μs, 121.30 μs)
  LazySortedListBenchmark.LazySortedListAdd: InvocationCount=1, UnrollFactor=1      -> 3 outliers were removed (6.70 μs..7.50 μs)
  LazySortedListBenchmark.SystemSortedListRemove: InvocationCount=1, UnrollFactor=1 -> 3 outliers were removed (1.43 ms..1.61 ms)
  LazySortedListBenchmark.LazySortedListRemove: InvocationCount=1, UnrollFactor=1   -> 1 outlier  was  removed (1.35 ms)
  LazySortedListBenchmark.SystemSortedListGet: InvocationCount=1, UnrollFactor=1    -> 2 outliers were removed (547.00 μs, 556.20 μs)
  LazySortedListBenchmark.LazySortedListGet: InvocationCount=1, UnrollFactor=1      -> 2 outliers were removed (366.10 μs, 367.20 μs)
  LazySortedListBenchmark.SystemSortedListAdd: InvocationCount=1, UnrollFactor=1    -> 2 outliers were removed (287.20 μs, 296.50 μs)
  LazySortedListBenchmark.LazySortedListAdd: InvocationCount=1, UnrollFactor=1      -> 4 outliers were removed (15.50 μs..16.40 μs)
  LazySortedListBenchmark.SystemSortedListRemove: InvocationCount=1, UnrollFactor=1 -> 2 outliers were removed (5.61 ms, 5.68 ms)

// * Legends *
  N      : Value of the 'N' parameter
  Mean   : Arithmetic mean of all measurements
  Error  : Half of 99.9% confidence interval
  StdDev : Standard deviation of all measurements
  Median : Value separating the higher half of all measurements (50th percentile)
  1 μs   : 1 Microsecond (0.000001 sec)

// ***** BenchmarkRunner: End *****
// ** Remained 0 benchmark(s) to run **
Run time: 00:00:03 (3.73 sec), executed benchmarks: 18

Global total time: 00:00:06 (6.96 sec), executed benchmarks: 18
// * Artifacts cleanup *
